!function(){"use strict";class t extends HTMLElement{constructor(){super(),this.attachShadow({mode:"open"});const t=document.createElement("style");t.textContent='\n      :host {\n        display: block;\n      }\n\n      .chat-bubble {\n        position: fixed;\n        bottom: 24px;\n        right: 24px;\n        width: 56px;\n        height: 56px;\n        background-color: var(--primary-color, #007BFF);\n        border-radius: 50%;\n        box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        cursor: pointer;\n        transition: transform 0.3s, background-color 0.3s;\n        z-index: 9998;\n      }\n\n      :host([position="bottom-left"]) .chat-bubble {\n        left: 24px;\n        right: auto;\n      }\n\n      .chat-bubble:hover {\n        transform: scale(1.05);\n        background-color: var(--primary-hover, #0069d9);\n      }\n\n      .chat-bubble svg {\n        width: 24px;\n        height: 24px;\n        fill: none;\n        stroke: white;\n        stroke-width: 2;\n        stroke-linecap: round;\n        stroke-linejoin: round;\n      }\n\n      @keyframes pulse {\n        0% {\n          box-shadow: 0 0 0 0 rgba(0, 123, 255, 0.7);\n        }\n        70% {\n          box-shadow: 0 0 0 10px rgba(0, 123, 255, 0);\n        }\n        100% {\n          box-shadow: 0 0 0 0 rgba(0, 123, 255, 0);\n        }\n      }\n\n      .chat-bubble.pulse {\n        animation: pulse 2s infinite;\n      }\n    ';const n=document.createElement("template");n.innerHTML='\n      <div class="chat-bubble pulse">\n        <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24">\n          <path d="M21 15a2 2 0 0 1-2 2H7l-4 4V5a2 2 0 0 1 2-2h14a2 2 0 0 1 2 2z"></path>\n        </svg>\n      </div>\n    ',this.shadowRoot.appendChild(t),this.shadowRoot.appendChild(n.content.cloneNode(!0)),this.bubbleElement=this.shadowRoot.querySelector(".chat-bubble")}connectedCallback(){this.bubbleElement.addEventListener("click",(()=>{this.dispatchEvent(new CustomEvent("click")),this.bubbleElement.classList.remove("pulse")}))}attributeChangedCallback(t,n,e){"position"===t&&n!==e&&("bottom-left"===e?(this.bubbleElement.style.left="24px",this.bubbleElement.style.right="auto"):(this.bubbleElement.style.right="24px",this.bubbleElement.style.left="auto"))}static get observedAttributes(){return["position"]}}customElements.define("chat-button",t);class n extends HTMLElement{constructor(){super(),this.attachShadow({mode:"open"})}connectedCallback(){const t=this.getAttribute("sender")||"bot",n=this.getAttribute("avatar")||"",e=this.getAttribute("message-id")||"",o=this.textContent||"",s=document.createElement("style");s.textContent="\n      :host {\n        display: block;\n        width: 100%;\n      }\n\n      .message {\n        display: flex;\n        flex-direction: column;\n        max-width: 85%;\n        animation: fadeIn 0.3s ease-in-out;\n      }\n\n      .message-user {\n        align-self: flex-end;\n        align-items: flex-end;\n      }\n\n      .message-bot {\n        align-self: flex-start;\n        align-items: flex-start;\n      }\n\n      .avatar {\n        width: 28px;\n        height: 28px;\n        border-radius: 50%;\n        margin-right: 8px;\n        background-color: var(--primary-color, #007BFF);\n        color: white;\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        font-size: 14px;\n        font-weight: bold;\n      }\n\n      .message-header {\n        display: flex;\n        align-items: center;\n        margin-bottom: 4px;\n      }\n\n      .message-content {\n        padding: 12px 16px;\n        border-radius: 18px;\n        font-size: 14px;\n        line-height: 1.4;\n        position: relative;\n      }\n\n      .message-user .message-content {\n        background-color: var(--message-bg-user, #007BFF);\n        color: var(--message-color-user, #fff);\n        border-bottom-right-radius: 4px;\n      }\n\n      .message-bot .message-content {\n        background-color: var(--message-bg-bot, #F1F1F1);\n        color: var(--message-color-bot, #333);\n        border-bottom-left-radius: 4px;\n      }\n\n      .message-time {\n        font-size: 11px;\n        color: var(--text-secondary, #666);\n        margin-top: 4px;\n      }\n\n      @keyframes fadeIn {\n        from { opacity: 0; transform: translateY(10px); }\n        to { opacity: 1; transform: translateY(0); }\n      }\n\n      /* تنسيق الروابط في الرسائل */\n      .message-content a {\n        color: inherit;\n        text-decoration: underline;\n      }\n\n      .message-content a:hover {\n        opacity: 0.8;\n      }\n\n      /* تنسيق الأكواد البرمجية في الرسائل */\n      .message-content pre {\n        background-color: rgba(0, 0, 0, 0.05);\n        padding: 8px;\n        border-radius: 4px;\n        overflow-x: auto;\n        margin: 8px 0;\n      }\n\n      .message-content code {\n        font-family: monospace;\n        font-size: 13px;\n      }\n\n      /* تنسيق القوائم */\n      .message-content ul, .message-content ol {\n        padding-left: 24px;\n        margin: 8px 0;\n      }\n    ";const a=this._processMessageContent(o),r=document.createElement("div");r.className=`message message-${t}`,r.setAttribute("data-message-id",e);let i="";"bot"===t&&(i=n?`<img class="avatar" src="${n}" alt="Bot Avatar">`:'<div class="avatar">B</div>');const c=new Date,d=`${c.getHours().toString().padStart(2,"0")}:${c.getMinutes().toString().padStart(2,"0")}`;r.innerHTML=`\n      <div class="message-header">\n        ${"bot"===t?i:""}\n      </div>\n      <div class="message-content">${a}</div>\n      <div class="message-time">${d}</div>\n    `,this.shadowRoot.appendChild(s),this.shadowRoot.appendChild(r),this._activateLinks()}_processMessageContent(t){let n=t.replace(/(https?:\/\/[^\s]+)/g,'<a href="$1" target="_blank" rel="noopener noreferrer">$1</a>');return n=n.replace(/`([^`]+)`/g,"<code>$1</code>"),n=n.replace(/```([^`]+)```/g,"<pre><code>$1</code></pre>"),n=n.replace(/\[([^\]]+)\]\(action:([^)]+)\)/g,'<button class="action-button" data-action="$2">$1</button>'),n}_activateLinks(){this.shadowRoot.querySelectorAll(".action-button").forEach((t=>{t.addEventListener("click",(()=>{const n=t.getAttribute("data-action");this.dispatchEvent(new CustomEvent("action-clicked",{detail:{action:n},bubbles:!0,composed:!0}))}))}))}}customElements.define("chat-message",n);class e extends HTMLElement{constructor(){super(),this.attachShadow({mode:"open"}),this._suggestions=[]}connectedCallback(){this._render()}set suggestions(t){Array.isArray(t)&&(this._suggestions=t,this.shadowRoot&&this._render())}get suggestions(){return this._suggestions}_render(){const t=document.createElement("style");t.textContent="\n      :host {\n        display: block;\n        margin: 16px 0;\n      }\n\n      .suggestions {\n        display: flex;\n        flex-wrap: wrap;\n        gap: 8px;\n        margin-top: 16px;\n      }\n\n      .suggestion {\n        background-color: var(--message-bg-bot, #F1F1F1);\n        color: var(--text-color, #333);\n        border: 1px solid var(--border-color, #E6E6E6);\n        border-radius: 16px;\n        padding: 8px 16px;\n        font-size: 13px;\n        cursor: pointer;\n        transition: background-color 0.2s, transform 0.2s;\n        white-space: nowrap;\n        overflow: hidden;\n        text-overflow: ellipsis;\n        max-width: 200px;\n      }\n\n      .suggestion:hover {\n        background-color: var(--primary-color, #007BFF);\n        color: white;\n        transform: translateY(-2px);\n      }\n\n      .title {\n        font-size: 14px;\n        color: var(--text-secondary, #666);\n        margin-bottom: 8px;\n      }\n\n      @keyframes fadeIn {\n        from { opacity: 0; transform: translateY(10px); }\n        to { opacity: 1; transform: translateY(0); }\n      }\n\n      .suggestion {\n        animation: fadeIn 0.3s ease-in-out;\n        animation-fill-mode: both;\n      }\n\n      .suggestion:nth-child(1) { animation-delay: 0.1s; }\n      .suggestion:nth-child(2) { animation-delay: 0.2s; }\n      .suggestion:nth-child(3) { animation-delay: 0.3s; }\n      .suggestion:nth-child(4) { animation-delay: 0.4s; }\n    ";const n=document.createElement("div");n.innerHTML=`\n      <div class="title">يمكنك أن تسأل:</div>\n      <div class="suggestions">\n        ${this._suggestions.map((t=>`\n          <button class="suggestion">${t}</button>\n        `)).join("")}\n      </div>\n    `,this.shadowRoot.innerHTML="",this.shadowRoot.appendChild(t),this.shadowRoot.appendChild(n);this.shadowRoot.querySelectorAll(".suggestion").forEach((t=>{t.addEventListener("click",(()=>{const n=t.textContent;this.dispatchEvent(new CustomEvent("suggestion-clicked",{detail:{suggestion:n},bubbles:!0,composed:!0}))}))}))}}customElements.define("chat-suggestions",e);class o extends HTMLElement{constructor(){super(),this.attachShadow({mode:"open"})}connectedCallback(){const t=this.getAttribute("avatar")||"",n=document.createElement("style");n.textContent="\n      :host {\n        display: block;\n        width: 100%;\n      }\n\n      .typing-indicator {\n        display: flex;\n        align-items: flex-end;\n        margin-bottom: 10px;\n        animation: fadeIn 0.3s ease-in-out;\n      }\n\n      .avatar {\n        width: 28px;\n        height: 28px;\n        border-radius: 50%;\n        margin-right: 8px;\n        background-color: var(--primary-color, #007BFF);\n        color: white;\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        font-size: 14px;\n        font-weight: bold;\n      }\n\n      .typing-bubble {\n        background-color: var(--message-bg-bot, #F1F1F1);\n        border-radius: 18px;\n        padding: 12px 16px;\n        border-bottom-left-radius: 4px;\n        display: flex;\n        align-items: center;\n      }\n\n      .dot {\n        width: 8px;\n        height: 8px;\n        background-color: var(--text-secondary, #666);\n        border-radius: 50%;\n        margin: 0 2px;\n        opacity: 0.6;\n      }\n\n      .dot:nth-child(1) {\n        animation: bounce 1.2s infinite 0s;\n      }\n\n      .dot:nth-child(2) {\n        animation: bounce 1.2s infinite 0.2s;\n      }\n\n      .dot:nth-child(3) {\n        animation: bounce 1.2s infinite 0.4s;\n      }\n\n      @keyframes bounce {\n        0%, 60%, 100% {\n          transform: translateY(0);\n        }\n        30% {\n          transform: translateY(-4px);\n        }\n      }\n\n      @keyframes fadeIn {\n        from { opacity: 0; transform: translateY(10px); }\n        to { opacity: 1; transform: translateY(0); }\n      }\n    ";const e=document.createElement("template");let o="";o=t?`<img class="avatar" src="${t}" alt="Bot Avatar">`:'<div class="avatar">B</div>',e.innerHTML=`\n      <div class="typing-indicator">\n        ${o}\n        <div class="typing-bubble">\n          <div class="dot"></div>\n          <div class="dot"></div>\n          <div class="dot"></div>\n        </div>\n      </div>\n    `,this.shadowRoot.appendChild(n),this.shadowRoot.appendChild(e.content.cloneNode(!0))}}customElements.define("typing-indicator",o);class s extends HTMLElement{constructor(){super(),this.attachShadow({mode:"open"})}connectedCallback(){const t=this.getAttribute("src")||"",n=this.getAttribute("fallback")||"B",e=this.getAttribute("bg-color")||"#007BFF",o=this.getAttribute("size")||"40px",s=document.createElement("style");s.textContent=`\n      :host {\n        display: inline-block;\n      }\n\n      .avatar {\n        width: ${o};\n        height: ${o};\n        border-radius: 50%;\n        overflow: hidden;\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        font-weight: 600;\n        color: white;\n        background-color: ${e};\n        font-size: calc(${o} * 0.4);\n      }\n\n      .avatar img {\n        width: 100%;\n        height: 100%;\n        object-fit: cover;\n      }\n    `;const a=document.createElement("template");a.innerHTML=t?`\n        <div class="avatar">\n          <img src="${t}" alt="Avatar" onerror="this.style.display='none'; this.parentNode.textContent='${n}'" />\n        </div>\n      `:`\n        <div class="avatar">${n}</div>\n      `,this.shadowRoot.appendChild(s),this.shadowRoot.appendChild(a.content.cloneNode(!0))}static get observedAttributes(){return["src","fallback","bg-color","size"]}attributeChangedCallback(t,n,e){if(n!==e&&this.shadowRoot){const n=this.shadowRoot.querySelector(".avatar");if(!n)return;if("src"===t){let t=n.querySelector("img");e?(t||(t=document.createElement("img"),t.setAttribute("alt","Avatar"),n.textContent="",n.appendChild(t)),t.setAttribute("src",e)):t&&(n.textContent=this.getAttribute("fallback")||"B",t.remove())}else if("fallback"===t){n.querySelector("img")||(n.textContent=e||"B")}else"bg-color"===t?n.style.backgroundColor=e:"size"===t&&(n.style.width=e,n.style.height=e,n.style.fontSize=`calc(${e} * 0.4)`)}}}customElements.define("chat-avatar",s);class a{sendMessage(t,n){return new Promise(((e,o)=>{if(!window.EventSource)return void o(new Error("المتصفح الحالي لا يدعم EventSource. يرجى تحديث المتصفح."));const s=new URLSearchParams;for(const t in n)s.append(t,n[t]);const a=`${t}?${s.toString()}`;try{const t=new EventSource(a);t.onopen=()=>{e(t)},t.onerror=n=>{t.close(),o(n)}}catch(t){o(t)}}))}async postMessage(t,n){try{const e=await fetch(t,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(n)});if(!e.ok)throw new Error(`HTTP error! status: ${e.status}`);const o=e.body.getReader(),s=new TextDecoder;return this._processStream(o,s)}catch(t){throw console.error("Error in postMessage:",t),t}}async _processStream(t,n){let e="";return{next:async()=>await(async()=>{const{value:o,done:s}=await t.read();if(s)return null;e+=n.decode(o,{stream:!0});const a=e.split("\n\n");return e=a.pop()||"",a.map((t=>{const n=t.split("\n"),e={};return n.forEach((t=>{if(t.startsWith("event: "))e.type=t.slice(7).trim();else if(t.startsWith("data: "))try{e.data=JSON.parse(t.slice(6).trim())}catch(n){e.data=t.slice(6).trim()}})),e}))})(),close(){t.cancel()}}}}class r extends HTMLElement{constructor(){super(),this.attachShadow({mode:"open"}),this.isOpen=!1,this.messages=[],this.isTyping=!1,this.sessionId=this._generateSessionId(),this._initialize()}static get observedAttributes(){return["project-id","theme","position","welcome-message","api-url","direction","avatar","title","subtitle","powered-by"]}_initialize(){this.chatService=new a,this._render(),this._setupEventListeners(),setTimeout((()=>{this._addMessage({content:this.getAttribute("welcome-message")||"مرحبًا بك! كيف يمكنني مساعدتك اليوم؟",sender:"bot"})}),300)}_render(){const t=document.createElement("style");t.textContent='\n  :host {\n    --primary-color: #007BFF;\n    --primary-hover: #0069d9;\n    --bg-color: #fff;\n    --header-bg: #E6F0FA;\n    --text-color: #333;\n    --text-secondary: #666;\n    --message-bg-user: var(--primary-color);\n    --message-color-user: #fff;\n    --message-bg-bot: #F8F9FA;\n    --message-color-bot: #666;\n    --border-color: #E6E6E6;\n    --footer-bg: rgba(249, 250, 251, 0.8);\n    --bubble-size: 56px;\n    --shadow: 0 4px 12px rgba(0, 0, 0, 0.15);\n\n    font-family: -apple-system, BlinkMacSystemFont, \'Segoe UI\', Roboto, \'Helvetica Neue\', Arial, sans-serif;\n    position: fixed;\n    z-index: 9999;\n    box-sizing: border-box;\n  }\n\n  :host([theme="dark"]) {\n    --primary-color: #375FFF;\n    --primary-hover: #2D4ECC;\n    --bg-color: #1E1E1E;\n    --header-bg: #2D2D2D;\n    --text-color: #fff;\n    --text-secondary: #B0B0B0;\n    --message-bg-user: var(--primary-color);\n    --message-color-user: #fff;\n    --message-bg-bot: #2D2D2D;\n    --message-color-bot: #E0E0E0;\n    --border-color: #3D3D3D;\n    --footer-bg: rgba(30, 30, 30, 0.85);\n  }\n\n  :host([position="bottom-right"]) .chat-container {\n    bottom: 24px;\n    right: 24px;\n  }\n\n  :host([position="bottom-left"]) .chat-container {\n    bottom: 24px;\n    left: 24px;\n  }\n\n  :host([direction="rtl"]) {\n    direction: rtl;\n    text-align: right;\n  }\n\n  .chat-container {\n    position: fixed;\n    display: flex;\n    flex-direction: column;\n    width: 350px;\n    height: calc(95vh - 32px);\n    max-height: 600px;\n    background-color: transparent;\n    border-radius: 24px;\n    overflow: hidden;\n    box-shadow: var(--shadow);\n    transition: transform 0.3s ease, opacity 0.3s ease;\n    transform: translateY(20px);\n    opacity: 0;\n    pointer-events: none;\n  }\n\n  .chat-container.open {\n    transform: translateY(0);\n    opacity: 1;\n    pointer-events: all;\n  }\n\n  .chat-header {\n    display: flex;\n    align-items: center;\n    padding: 16px;\n    background-color: var(--header-bg);\n    border-top-left-radius: 16px;\n    border-top-right-radius: 16px;\n    border-bottom: 1px solid var(--border-color);\n  }\n\n  .header-info {\n    margin-left: 12px;\n    margin-right: 12px;\n  }\n\n  .header-title {\n    font-size: 16px;\n    font-weight: 600;\n    color: var(--text-color);\n    margin: 0;\n  }\n\n  .header-subtitle {\n    font-size: 12px;\n    color: var(--text-secondary);\n    margin: 0;\n  }\n\n  .messages-container {\n    flex: 1;\n    padding: 16px;\n    overflow-y: auto;\n    background-color: var(--bg-color);\n    display: flex;\n    flex-direction: column;\n    gap: 16px;\n  }\n\n  .messages-container::-webkit-scrollbar {\n    width: 6px;\n  }\n\n  .messages-container::-webkit-scrollbar-thumb {\n    background-color: rgba(0, 0, 0, 0.2);\n    border-radius: 3px;\n  }\n\n  .messages-container::-webkit-scrollbar-track {\n    background-color: transparent;\n  }\n\n  .chat-footer {\n    padding: 16px;\n    background-color: var(--footer-bg);\n    border-top: 1px solid var(--border-color);\n    border-bottom-left-radius: 16px;\n    border-bottom-right-radius: 16px;\n    backdrop-filter: blur(10px);\n  }\n\n  .input-group {\n    display: flex;\n    align-items: center;\n    gap: 8px;\n    margin-bottom: 8px;\n  }\n\n  .chat-input {\n    flex: 1;\n    padding: 10px 16px;\n    font-size: 14px;\n    background-color: var(--bg-color);\n    color: var(--text-color);\n    border: 1px solid var(--border-color);\n    border-radius: 9999px;\n    outline: none;\n  }\n\n  .chat-input::placeholder {\n    color: var(--text-secondary);\n  }\n\n  .send-button {\n    width: 40px;\n    height: 40px;\n    border-radius: 50%;\n    background-color: var(--primary-color);\n    color: white;\n    border: none;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    cursor: pointer;\n    transition: background-color 0.2s;\n  }\n\n  .send-button:hover {\n    background-color: var(--primary-hover);\n  }\n\n  .send-button:disabled {\n    opacity: 0.5;\n    cursor: not-allowed;\n  }\n\n  .send-button svg {\n    width: 18px;\n    height: 18px;\n  }\n\n  .footer-actions {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n  }\n\n  .footer-button {\n    background: none;\n    border: none;\n    color: var(--text-secondary);\n    font-size: 12px;\n    cursor: pointer;\n    padding: 4px 8px;\n  }\n\n  .footer-button:hover {\n    color: var(--primary-color);\n  }\n\n  .powered-by {\n    font-size: 12px;\n    color: var(--text-secondary);\n  }\n';const n=document.createElement("template");n.innerHTML=`\n      <div class="chat-container">\n        <div class="chat-header">\n          <chat-avatar\n            src="${this.getAttribute("avatar")||""}"\n            fallback="${(this.getAttribute("title")||"Bot").charAt(0)}"\n            bg-color="var(--primary-color)">\n          </chat-avatar>\n          <div class="header-info">\n            <h3 class="header-title">${this.getAttribute("title")||"Chat Assistant"}</h3>\n            <p class="header-subtitle">${this.getAttribute("subtitle")||"Our virtual agent is here to help you"}</p>\n          </div>\n        </div>\n\n        <div class="messages-container" id="messages"></div>\n\n        <div class="chat-footer">\n          <div class="input-group">\n            <input type="text" class="chat-input" placeholder="اكتب رسالة..." />\n            <button class="send-button" disabled>\n              <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">\n                <line x1="22" y1="2" x2="11" y2="13"></line>\n                <polygon points="22 2 15 22 11 13 2 9 22 2"></polygon>\n              </svg>\n            </button>\n          </div>\n          <div class="footer-actions">\n            <button class="footer-button new-chat-btn">محادثة جديدة</button>\n            <span class="powered-by">${this.getAttribute("powered-by")||"Powered by AI"}</span>\n            <button class="footer-button close-btn">إغلاق</button>\n          </div>\n        </div>\n      </div>\n\n      <chat-button></chat-button>\n    `,this.shadowRoot.appendChild(t),this.shadowRoot.appendChild(n.content.cloneNode(!0)),this.chatContainer=this.shadowRoot.querySelector(".chat-container"),this.messagesContainer=this.shadowRoot.querySelector("#messages"),this.chatInput=this.shadowRoot.querySelector(".chat-input"),this.sendButton=this.shadowRoot.querySelector(".send-button"),this.chatButton=this.shadowRoot.querySelector("chat-button");const e=document.createElement("chat-suggestions");e.suggestions=["ما هي خدماتكم؟","كيف يمكنني التواصل معكم؟","هل لديكم خدمة توصيل؟"],this.messagesContainer.appendChild(e)}_setupEventListeners(){this.chatButton.addEventListener("click",(()=>{this.toggleChat()})),this.sendButton.addEventListener("click",(()=>{this._sendMessage()})),this.chatInput.addEventListener("keypress",(t=>{"Enter"===t.key&&this._sendMessage()})),this.chatInput.addEventListener("input",(()=>{this.sendButton.disabled=!this.chatInput.value.trim()})),this.shadowRoot.querySelector(".new-chat-btn").addEventListener("click",(()=>{this._clearChat()})),this.shadowRoot.querySelector(".close-btn").addEventListener("click",(()=>{this.toggleChat()})),this.shadowRoot.addEventListener("suggestion-clicked",(t=>{const{suggestion:n}=t.detail;this.chatInput.value=n,this._sendMessage()}))}_addMessage(t){const n=Date.now().toString(),e=new Date,o={id:n,content:t.content,sender:t.sender,timestamp:e};this.messages.push(o);const s=document.createElement("chat-message");if(s.setAttribute("sender",t.sender),s.setAttribute("message-id",n),"bot"===t.sender&&s.setAttribute("avatar",this.getAttribute("avatar")||""),s.textContent=t.content,this.messagesContainer.appendChild(s),this._scrollToBottom(),2===this.messages.length&&"user"===this.messages[1].sender){const t=this.shadowRoot.querySelector("chat-suggestions");t&&(t.style.display="none")}return o}_sendMessage(){const t=this.chatInput.value.trim();if(!t)return;this._addMessage({content:t,sender:"user"}),this.chatInput.value="",this.sendButton.disabled=!0,this._showTypingIndicator();const n=this.getAttribute("api-url"),e=this.getAttribute("project-id");this.chatService.sendMessage(n,{message:t,session_id:this.sessionId,project_id:e}).then((t=>{let n="";t.onmessage=t=>{try{const e=JSON.parse(t.data);"chunk"===t.type?n+=e.content:"end"===t.type?(this._hideTypingIndicator(),n&&this._addMessage({content:n,sender:"bot"})):"error"===t.type&&(console.error("Error from chat service:",e.message),this._hideTypingIndicator(),this._addMessage({content:"عذراً، حدث خطأ أثناء معالجة طلبك. يرجى المحاولة مرة أخرى.",sender:"bot"}))}catch(t){console.error("Error parsing SSE message:",t)}},t.onerror=t=>{console.error("SSE Error:",t),this._hideTypingIndicator(),this._addMessage({content:"عذراً، حدث خطأ في الاتصال. يرجى المحاولة مرة أخرى.",sender:"bot"})}})).catch((t=>{console.error("Failed to send message:",t),this._hideTypingIndicator(),this._addMessage({content:"عذراً، تعذر الاتصال بالخادم. يرجى التحقق من اتصالك والمحاولة مرة أخرى.",sender:"bot"})}))}_showTypingIndicator(){this.isTyping=!0;const t=document.createElement("typing-indicator");t.setAttribute("avatar",this.getAttribute("avatar")||""),t.id="typing-indicator",this.messagesContainer.appendChild(t),this._scrollToBottom()}_hideTypingIndicator(){this.isTyping=!1;const t=this.shadowRoot.querySelector("#typing-indicator");t&&t.remove()}_clearChat(){for(this.messages=[];this.messagesContainer.firstChild;)this.messagesContainer.removeChild(this.messagesContainer.firstChild);this.sessionId=this._generateSessionId(),setTimeout((()=>{this._addMessage({content:this.getAttribute("welcome-message")||"مرحبًا بك! كيف يمكنني مساعدتك اليوم؟",sender:"bot"});const t=document.createElement("chat-suggestions");t.suggestions=["ما هي خدماتكم؟","كيف يمكنني التواصل معكم؟","هل لديكم خدمة توصيل؟"],this.messagesContainer.appendChild(t)}),300)}toggleChat(){this.isOpen=!this.isOpen,this.isOpen?(this.chatContainer.classList.add("open"),localStorage.setItem("chatWidgetOpen","true")):(this.chatContainer.classList.remove("open"),localStorage.setItem("chatWidgetOpen","false"))}_scrollToBottom(){setTimeout((()=>{this.messagesContainer.scrollTop=this.messagesContainer.scrollHeight}),100)}_generateSessionId(){const t=localStorage.getItem("chatWidgetSessionId");if(t)return t;const n="session_"+Math.random().toString(36).substring(2,15);return localStorage.setItem("chatWidgetSessionId",n),n}connectedCallback(){"true"===localStorage.getItem("chatWidgetOpen")&&setTimeout((()=>this.toggleChat()),300)}attributeChangedCallback(t,n,e){if(n!==e&&"direction"===t)this.style.direction=e||"rtl"}}customElements.define("chat-widget",r),window.ChatWidget={init:(t={})=>{const n={projectId:"",theme:"light",position:"bottom-right",welcomeMessage:"مرحبًا بك! كيف يمكنني مساعدتك اليوم؟",apiUrl:"https://api.yourdomain.com/chat/stream",direction:"rtl",avatar:"",title:"Chat Assistant",subtitle:"Our virtual agent is here to help you",poweredBy:"Powered by AI",...t},e=document.createElement("chat-widget");return Object.keys(n).forEach((t=>{e.setAttribute(t,n[t])})),document.body.appendChild(e),e}},window.ChatWidgetOptions&&window.ChatWidget.init(window.ChatWidgetOptions)}();

{"version":3,"file":"widget.min.js","sources":["../src/components/chat-button.js","../src/components/chat-message.js","../src/components/suggestions.js","../src/components/typing-indicator.js","../src/components/avatar.js","../src/chat-widget.js","../src/index.js"],"sourcesContent":["/**\r\n * مكون زر فتح نافذة الدردشة\r\n */\r\nclass ChatButton extends HTMLElement {\r\n  constructor() {\r\n    super();\r\n    this.attachShadow({ mode: 'open' });\r\n\r\n    // إعداد الأنماط\r\n    const style = document.createElement('style');\r\n    style.textContent = `\r\n      :host {\r\n        display: block;\r\n      }\r\n\r\n      .chat-bubble {\r\n        position: fixed;\r\n        bottom: 24px;\r\n        right: 24px;\r\n        width: 56px;\r\n        height: 56px;\r\n        background-color: var(--primary-color, #007BFF);\r\n        border-radius: 50%;\r\n        box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);\r\n        display: flex;\r\n        align-items: center;\r\n        justify-content: center;\r\n        cursor: pointer;\r\n        transition: transform 0.3s, background-color 0.3s;\r\n        z-index: 9998;\r\n      }\r\n\r\n      :host([position=\"bottom-left\"]) .chat-bubble {\r\n        left: 24px;\r\n        right: auto;\r\n      }\r\n\r\n      .chat-bubble:hover {\r\n        transform: scale(1.05);\r\n        background-color: var(--primary-hover, #0069d9);\r\n      }\r\n\r\n      .chat-bubble svg {\r\n        width: 24px;\r\n        height: 24px;\r\n        fill: none;\r\n        stroke: white;\r\n        stroke-width: 2;\r\n        stroke-linecap: round;\r\n        stroke-linejoin: round;\r\n      }\r\n\r\n      @keyframes pulse {\r\n        0% {\r\n          box-shadow: 0 0 0 0 rgba(0, 123, 255, 0.7);\r\n        }\r\n        70% {\r\n          box-shadow: 0 0 0 10px rgba(0, 123, 255, 0);\r\n        }\r\n        100% {\r\n          box-shadow: 0 0 0 0 rgba(0, 123, 255, 0);\r\n        }\r\n      }\r\n\r\n      .chat-bubble.pulse {\r\n        animation: pulse 2s infinite;\r\n      }\r\n    `;\r\n\r\n    // إنشاء هيكل المكون\r\n    const template = document.createElement('template');\r\n    template.innerHTML = `\r\n      <div class=\"chat-bubble pulse\">\r\n        <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\r\n          <path d=\"M21 15a2 2 0 0 1-2 2H7l-4 4V5a2 2 0 0 1 2-2h14a2 2 0 0 1 2 2z\"></path>\r\n        </svg>\r\n      </div>\r\n    `;\r\n\r\n    // إضافة الأنماط والقالب للظل\r\n    this.shadowRoot.appendChild(style);\r\n    this.shadowRoot.appendChild(template.content.cloneNode(true));\r\n\r\n    // تخزين مرجع لعنصر الزر\r\n    this.bubbleElement = this.shadowRoot.querySelector('.chat-bubble');\r\n  }\r\n\r\n connectedCallback() {\r\n     this.bubbleElement.addEventListener('click', () => {\r\n   // فقط إزالة النبضة عند الضغط\r\n\r\n   // لا حاجة الآن لإعادة dispatch لحدث \"click\" لأنّه يخرج تلقائياً للـ host\r\n });\r\n\r\n  }  // ← قوس يغلق connectedCallback هنا\r\n\r\n  attributeChangedCallback(name, oldValue, newValue) {\r\n    if (name === 'position' && oldValue !== newValue) {\r\n      if (newValue === 'bottom-left') {\r\n        this.bubbleElement.style.left = '24px';\r\n        this.bubbleElement.style.right = 'auto';\r\n      } else {\r\n        this.bubbleElement.style.right = '24px';\r\n        this.bubbleElement.style.left = 'auto';\r\n      }\r\n    }\r\n  }\r\n\r\n  static get observedAttributes() {\r\n    return ['position'];\r\n  }\r\n}\r\n\r\ncustomElements.define('chat-button', ChatButton);","// src/components/chat-message.js\r\n\r\n/**\r\n * مكون عرض رسائل الدردشة\r\n */\r\nclass ChatMessage extends HTMLElement {\r\n  constructor() {\r\n    super();\r\n    this.attachShadow({ mode: 'open' });\r\n  }\r\n\r\n  connectedCallback() {\r\n    // الحصول على سمات المكون\r\n    const sender = this.getAttribute('sender') || 'bot';\r\n    const avatar = this.getAttribute('avatar') || '';\r\n    const messageId = this.getAttribute('message-id') || '';\r\n    const content = this.textContent || '';\r\n\r\n    // إعداد CSS\r\n    const style = document.createElement('style');\r\n    // --- بداية التعديل ---\r\n    style.textContent = `\r\n      :host {\r\n        display: block;\r\n        width: 100%;\r\n      }\r\n\r\n      .message {\r\n        display: flex;\r\n        flex-direction: column;\r\n        max-width: 85%;\r\n        margin-bottom: 12px; /* إضافة هامش سفلي بين الرسائل */\r\n        animation: fadeIn 0.3s ease-in-out;\r\n      }\r\n\r\n      .message-user {\r\n        align-self: flex-end;\r\n        align-items: flex-end;\r\n      }\r\n\r\n      .message-bot {\r\n        align-self: flex-start;\r\n        align-items: flex-start;\r\n      }\r\n\r\n      .avatar {\r\n        width: 28px;\r\n        height: 28px;\r\n        border-radius: 50%;\r\n        margin-right: 8px;\r\n        background-color: var(--primary-color, #007BFF);\r\n        color: white;\r\n        display: flex;\r\n        align-items: center;\r\n        justify-content: center;\r\n        font-size: 14px;\r\n        font-weight: bold;\r\n        flex-shrink: 0; /* منع الصورة الرمزية من التقلص */\r\n      }\r\n\r\n      .message-header {\r\n        display: flex;\r\n        align-items: center;\r\n        margin-bottom: 4px;\r\n        /* فقط عرض الهيدر إذا كان المرسل هو البوت ولديه صورة رمزية */\r\n        ${sender === 'bot' ? '' : 'display: none;'}\r\n      }\r\n\r\n      .message-content {\r\n        padding: 12px 16px;\r\n        border-radius: 18px;\r\n        font-size: 14px;\r\n        line-height: 1.4;\r\n        position: relative;\r\n        word-wrap: break-word; /* لضمان التفاف النص الطويل */\r\n      }\r\n\r\n      .message-user .message-content {\r\n        background-color: var(--message-bg-user, #007BFF);\r\n        color: var(--message-color-user, #fff);\r\n        border-bottom-right-radius: 4px;\r\n      }\r\n\r\n      .message-bot .message-content {\r\n        background-color: var(--message-bg-bot, #F1F1F1);\r\n        color: var(--message-color-bot, #333);\r\n        border-bottom-left-radius: 4px;\r\n      }\r\n\r\n      /* وضع الصورة الرمزية بجانب المحتوى للـ bot */\r\n       .message-bot {\r\n           flex-direction: row; /* تغيير الاتجاه إلى صف */\r\n           align-items: flex-start; /* محاذاة العناصر في بداية المحور العمودي */\r\n       }\r\n       .message-bot .message-header {\r\n           margin-bottom: 0; /* إزالة الهامش السفلي من الهيدر */\r\n           margin-right: 8px; /* إضافة هامش يمين للصورة الرمزية */\r\n       }\r\n        /* إخفاء الصورة الرمزية من الهيدر لأننا سنضعها مباشرة في .message-bot */\r\n       .message-bot .message-header .avatar {\r\n           display: none;\r\n       }\r\n\r\n       .message-bot > .message-content {\r\n           /* لا حاجة لتغييرات هنا حاليًا */\r\n       }\r\n\r\n       .message-bot > .message-time {\r\n         margin-left: 36px; /* تحريك الوقت ليتناسب مع محتوى الرسالة (28px avatar + 8px margin) */\r\n         text-align: left;\r\n       }\r\n\r\n       .message-user > .message-time {\r\n         text-align: right;\r\n       }\r\n\r\n\r\n      .message-time {\r\n        font-size: 11px;\r\n        color: var(--text-secondary, #666);\r\n        margin-top: 4px;\r\n      }\r\n\r\n      @keyframes fadeIn {\r\n        from { opacity: 0; transform: translateY(10px); }\r\n        to { opacity: 1; transform: translateY(0); }\r\n      }\r\n\r\n      /* تنسيق الروابط في الرسائل */\r\n      .message-content a {\r\n        /* استخدام لون مميز للروابط داخل رسائل البوت */\r\n        color: ${sender === 'bot' ? 'var(--primary-color, #007BFF)' : 'inherit'};\r\n        text-decoration: underline;\r\n      }\r\n\r\n      .message-content a:hover {\r\n        opacity: 0.8;\r\n      }\r\n\r\n      /* تنسيق الأكواد البرمجية في الرسائل */\r\n      .message-content pre {\r\n        background-color: rgba(0, 0, 0, 0.05);\r\n        padding: 10px; /* زيادة الحشو */\r\n        border-radius: 4px;\r\n        overflow-x: auto;\r\n        margin: 8px 0;\r\n        border: 1px solid rgba(0,0,0,0.1); /* إضافة حدود بسيطة */\r\n      }\r\n\r\n      .message-content code:not(pre > code) { /* تنسيق الكود المضمن فقط */\r\n         background-color: rgba(0,0,0,0.05);\r\n         padding: 2px 4px;\r\n         border-radius: 3px;\r\n         font-family: monospace;\r\n         font-size: 13px;\r\n       }\r\n      .message-content pre code { /* تنسيق الكود داخل <pre> */\r\n         background-color: transparent; /* بدون خلفية إضافية */\r\n         padding: 0;\r\n         border-radius: 0;\r\n         font-family: monospace;\r\n         font-size: 13px;\r\n         display: block; /* تأكد من أنه كتلة */\r\n         white-space: pre; /* الحفاظ على المسافات والأسطر */\r\n      }\r\n\r\n\r\n      /* تنسيق القوائم */\r\n      .message-content ul, .message-content ol {\r\n        padding-left: 24px;\r\n        margin: 8px 0;\r\n      }\r\n\r\n      /* تنسيق أزرار الإجراءات */\r\n      .action-button {\r\n        background-color: var(--primary-color, #007BFF);\r\n        color: white;\r\n        border: none;\r\n        padding: 8px 12px;\r\n        border-radius: 15px; /* جعلها أكثر دائرية */\r\n        cursor: pointer;\r\n        font-size: 13px;\r\n        margin: 5px 5px 5px 0; /* إضافة هوامش */\r\n        transition: background-color 0.2s ease;\r\n        display: inline-block; /* جعلها تظهر بجانب بعضها البعض */\r\n      }\r\n\r\n      .action-button:hover {\r\n        background-color: var(--primary-color-dark, #0056b3); /* لون أغمق عند المرور */\r\n      }\r\n    `;\r\n    // --- نهاية التعديل ---\r\n\r\n    // معالجة محتوى الرسالة (تحويل الماركداون الأساسي)\r\n    const processedContent = this._processMessageContent(content);\r\n\r\n    // إنشاء هيكل المكون\r\n    const messageElement = document.createElement('div');\r\n    // التأكد من وجود مسافة بين أسماء الفئات\r\n    messageElement.className = `message message-${sender}`;\r\n    messageElement.setAttribute('data-message-id', messageId);\r\n\r\n    // تحديد HTML للصورة الرمزية\r\n    let avatarHTML = '';\r\n    if (sender === 'bot') {\r\n      if (avatar) {\r\n        avatarHTML = `<img class=\"avatar\" src=\"${avatar}\" alt=\"Bot Avatar\">`;\r\n      } else {\r\n        // يمكنك استخدام حرف أو أيقونة افتراضية\r\n        avatarHTML = `<div class=\"avatar\">🤖</div>`; // تغيير إلى رمز تعبيري أو SVG\r\n      }\r\n    }\r\n\r\n    const now = new Date();\r\n    const timeStr = `${now.getHours().toString().padStart(2, '0')}:${now.getMinutes().toString().padStart(2, '0')}`;\r\n\r\n    // بناء HTML الداخلي للمكون\r\n    // ملاحظة: تم نقل الصورة الرمزية خارج الهيدر ليتم عرضها بجانب المحتوى للـ bot\r\n    messageElement.innerHTML = `\r\n      ${sender === 'bot' ? avatarHTML : ''}\r\n      <div class=\"message-body\"> <div class=\"message-content\">${processedContent}</div>\r\n          <div class=\"message-time\">${timeStr}</div>\r\n      </div>\r\n    `;\r\n\r\n     // تعديل طفيف في بناء الـ HTML لترتيب أفضل (خاصة للـ bot)\r\n     if (sender === 'bot') {\r\n         messageElement.innerHTML = `\r\n             ${avatarHTML}\r\n             <div style=\"display: flex; flex-direction: column; align-items: flex-start;\">\r\n                 <div class=\"message-content\">${processedContent}</div>\r\n                 <div class=\"message-time\">${timeStr}</div>\r\n             </div>\r\n         `;\r\n     } else { // رسالة المستخدم\r\n         messageElement.innerHTML = `\r\n             <div class=\"message-content\">${processedContent}</div>\r\n             <div class=\"message-time\">${timeStr}</div>\r\n         `;\r\n     }\r\n\r\n\r\n    // إضافة الأنماط والمحتوى للظل\r\n    this.shadowRoot.appendChild(style);\r\n    this.shadowRoot.appendChild(messageElement);\r\n\r\n    // تفعيل الروابط وأزرار الإجراءات بعد إضافة المحتوى\r\n    this._activateLinks();\r\n  }\r\n\r\n  /**\r\n   * معالجة محتوى الرسالة لتحويل الروابط والماركداون البسيط\r\n   */\r\n  _processMessageContent(content) {\r\n    // الحماية من حقن HTML بسيط (هذه ليست حماية كاملة!)\r\n    let processed = content.replace(/</g, \"&lt;\").replace(/>/g, \"&gt;\");\r\n\r\n    // تحويل أكواد الماركداون متعددة الأسطر ```code```\r\n    processed = processed.replace(\r\n        /```([\\s\\S]*?)```/g, // استخدام [\\s\\S] لمطابقة أي حرف بما في ذلك الأسطر الجديدة\r\n        (match, code) => `<pre><code>${code.trim()}</code></pre>` // استخدام الدالة لإزالة المسافات الزائدة\r\n    );\r\n\r\n    // تحويل أكواد الماركداون المضمنة `code` (بعد معالجة الكتل لتجنب التداخل)\r\n     processed = processed.replace(\r\n         /`([^`]+)`/g,\r\n         '<code>$1</code>'\r\n     );\r\n\r\n    // تحويل الروابط العادية إلى روابط قابلة للنقر (يجب أن يتم بعد معالجة الكود لتجنب تحويل الروابط داخل الكود)\r\n    // تأكد من أن هذا لا يطبق داخل <pre> أو <code>\r\n     processed = processed.replace(\r\n         /(?<!<code[^>]*?>)(?<!<pre[^>]*?>)(https?:\\/\\/[^\\s<]+)/g, // استخدام Negative Lookbehind للتأكد أنه ليس داخل code أو pre\r\n         '<a href=\"$1\" target=\"_blank\" rel=\"noopener noreferrer\">$1</a>'\r\n     );\r\n\r\n\r\n    // تحويل زر الإجراء (مثال: [زر الإجراء](action:do_something))\r\n    processed = processed.replace(\r\n      /\\[([^\\]]+)\\]\\(action:([^)]+)\\)/g,\r\n      '<button class=\"action-button\" data-action=\"$2\">$1</button>'\r\n    );\r\n\r\n     // تحويل نهايات الأسطر إلى <br> (اختياري، حسب الرغبة في عرض النص)\r\n     // قد ترغب في تطبيقه فقط خارج <pre>\r\n     // processed = processed.replace(/\\n/g, '<br>');\r\n\r\n\r\n    return processed;\r\n  }\r\n\r\n  /**\r\n   * تفعيل الروابط وأزرار الإجراءات في الرسالة\r\n   */\r\n  _activateLinks() {\r\n    const actionButtons = this.shadowRoot.querySelectorAll('.action-button');\r\n    actionButtons.forEach(button => {\r\n      // التأكد من عدم إضافة المستمع أكثر من مرة (احتياطي)\r\n      if (!button.hasAttribute('data-listener-added')) {\r\n          button.addEventListener('click', () => {\r\n            const action = button.getAttribute('data-action');\r\n            this.dispatchEvent(new CustomEvent('action-clicked', {\r\n              detail: { action },\r\n              bubbles: true, // السماح للحدث بالصعود في شجرة DOM\r\n              composed: true // السماح للحدث بالخروج من Shadow DOM\r\n            }));\r\n          });\r\n          button.setAttribute('data-listener-added', 'true');\r\n      }\r\n    });\r\n\r\n    // ملاحظة: الروابط العادية <a> تعمل تلقائياً، لا حاجة لتفعيلها هنا.\r\n  }\r\n}\r\n\r\n// تسجيل المكون المخصص\r\n// تأكد من أن هذا الاسم لم يتم استخدامه من قبل\r\nif (!customElements.get('chat-message')) {\r\n  customElements.define('chat-message', ChatMessage);\r\n}","// src/components/suggestions.js\r\n\r\n/**\r\n * مكون اقتراحات الرسائل السريعة\r\n */\r\nclass ChatSuggestions extends HTMLElement {\r\n  constructor() {\r\n    super();\r\n    this.attachShadow({ mode: 'open' });\r\n    this._suggestions = [];\r\n  }\r\n\r\n  connectedCallback() {\r\n    this._render();\r\n  }\r\n\r\n  set suggestions(value) {\r\n    if (Array.isArray(value)) {\r\n      this._suggestions = value;\r\n      if (this.shadowRoot) {\r\n        this._render();\r\n      }\r\n    }\r\n  }\r\n\r\n  get suggestions() {\r\n    return this._suggestions;\r\n  }\r\n\r\n  _render() {\r\n    // إعداد CSS\r\n    const style = document.createElement('style');\r\n    style.textContent = `\r\n      :host {\r\n        display: block;\r\n        margin: 16px 0;\r\n      }\r\n\r\n      .suggestions {\r\n        display: flex;\r\n        flex-wrap: wrap;\r\n        gap: 8px;\r\n        margin-top: 16px;\r\n      }\r\n\r\n      .suggestion {\r\n        background-color: var(--message-bg-bot, #F1F1F1);\r\n        color: var(--text-color, #333);\r\n        border: 1px solid var(--border-color, #E6E6E6);\r\n        border-radius: 16px;\r\n        padding: 8px 16px;\r\n        font-size: 13px;\r\n        cursor: pointer;\r\n        transition: background-color 0.2s, transform 0.2s;\r\n        white-space: nowrap;\r\n        overflow: hidden;\r\n        text-overflow: ellipsis;\r\n        max-width: 200px;\r\n      }\r\n\r\n      .suggestion:hover {\r\n        background-color: var(--primary-color, #007BFF);\r\n        color: white;\r\n        transform: translateY(-2px);\r\n      }\r\n\r\n      .title {\r\n        font-size: 14px;\r\n        color: var(--text-secondary, #666);\r\n        margin-bottom: 8px;\r\n      }\r\n\r\n      @keyframes fadeIn {\r\n        from { opacity: 0; transform: translateY(10px); }\r\n        to { opacity: 1; transform: translateY(0); }\r\n      }\r\n\r\n      .suggestion {\r\n        animation: fadeIn 0.3s ease-in-out;\r\n        animation-fill-mode: both;\r\n      }\r\n\r\n      .suggestion:nth-child(1) { animation-delay: 0.1s; }\r\n      .suggestion:nth-child(2) { animation-delay: 0.2s; }\r\n      .suggestion:nth-child(3) { animation-delay: 0.3s; }\r\n      .suggestion:nth-child(4) { animation-delay: 0.4s; }\r\n    `;\r\n\r\n    // إنشاء هيكل المكون\r\n    const container = document.createElement('div');\r\n    container.innerHTML = `\r\n      <div class=\"title\">يمكنك أن تسأل:</div>\r\n      <div class=\"suggestions\">\r\n        ${this._suggestions.map(suggestion => `\r\n          <button class=\"suggestion\">${suggestion}</button>\r\n        `).join('')}\r\n      </div>\r\n    `;\r\n\r\n    // إفراغ الظل وإضافة المحتوى الجديد\r\n    this.shadowRoot.innerHTML = '';\r\n    this.shadowRoot.appendChild(style);\r\n    this.shadowRoot.appendChild(container);\r\n\r\n    // إضافة مستمعي الأحداث للاقتراحات\r\n    const suggestionButtons = this.shadowRoot.querySelectorAll('.suggestion');\r\n    suggestionButtons.forEach(button => {\r\n      button.addEventListener('click', () => {\r\n        const suggestion = button.textContent;\r\n        // إرسال حدث للأعلى عند النقر على اقتراح\r\n        this.dispatchEvent(new CustomEvent('suggestion-clicked', {\r\n          detail: { suggestion },\r\n          bubbles: true,\r\n          composed: true\r\n        }));\r\n      });\r\n    });\r\n  }\r\n}\r\n\r\n// تسجيل المكون\r\ncustomElements.define('chat-suggestions', ChatSuggestions);","// src/components/typing-indicator.js\r\n\r\n/**\r\n * مكون مؤشر الكتابة\r\n */\r\nclass TypingIndicator extends HTMLElement {\r\n  constructor() {\r\n    super();\r\n    this.attachShadow({ mode: 'open' });\r\n  }\r\n\r\n  connectedCallback() {\r\n    const avatar = this.getAttribute('avatar') || '';\r\n\r\n    // إعداد CSS\r\n    const style = document.createElement('style');\r\n    style.textContent = `\r\n      :host {\r\n        display: block;\r\n        width: 100%;\r\n      }\r\n\r\n      .typing-indicator {\r\n        display: flex;\r\n        align-items: flex-end;\r\n        margin-bottom: 10px;\r\n        animation: fadeIn 0.3s ease-in-out;\r\n      }\r\n\r\n      .avatar {\r\n        width: 28px;\r\n        height: 28px;\r\n        border-radius: 50%;\r\n        margin-right: 8px;\r\n        background-color: var(--primary-color, #007BFF);\r\n        color: white;\r\n        display: flex;\r\n        align-items: center;\r\n        justify-content: center;\r\n        font-size: 14px;\r\n        font-weight: bold;\r\n      }\r\n\r\n      .typing-bubble {\r\n        background-color: var(--message-bg-bot, #F1F1F1);\r\n        border-radius: 18px;\r\n        padding: 12px 16px;\r\n        border-bottom-left-radius: 4px;\r\n        display: flex;\r\n        align-items: center;\r\n      }\r\n\r\n      .dot {\r\n        width: 8px;\r\n        height: 8px;\r\n        background-color: var(--text-secondary, #666);\r\n        border-radius: 50%;\r\n        margin: 0 2px;\r\n        opacity: 0.6;\r\n      }\r\n\r\n      .dot:nth-child(1) {\r\n        animation: bounce 1.2s infinite 0s;\r\n      }\r\n\r\n      .dot:nth-child(2) {\r\n        animation: bounce 1.2s infinite 0.2s;\r\n      }\r\n\r\n      .dot:nth-child(3) {\r\n        animation: bounce 1.2s infinite 0.4s;\r\n      }\r\n\r\n      @keyframes bounce {\r\n        0%, 60%, 100% {\r\n          transform: translateY(0);\r\n        }\r\n        30% {\r\n          transform: translateY(-4px);\r\n        }\r\n      }\r\n\r\n      @keyframes fadeIn {\r\n        from { opacity: 0; transform: translateY(10px); }\r\n        to { opacity: 1; transform: translateY(0); }\r\n      }\r\n    `;\r\n\r\n    // إنشاء هيكل المكون\r\n    const template = document.createElement('template');\r\n    let avatarHTML = '';\r\n\r\n    if (avatar) {\r\n      avatarHTML = `<img class=\"avatar\" src=\"${avatar}\" alt=\"Bot Avatar\">`;\r\n    } else {\r\n      avatarHTML = `<div class=\"avatar\">B</div>`;\r\n    }\r\n\r\n    template.innerHTML = `\r\n      <div class=\"typing-indicator\">\r\n        ${avatarHTML}\r\n        <div class=\"typing-bubble\">\r\n          <div class=\"dot\"></div>\r\n          <div class=\"dot\"></div>\r\n          <div class=\"dot\"></div>\r\n        </div>\r\n      </div>\r\n    `;\r\n\r\n    // إضافة الأنماط والقالب للظل\r\n    this.shadowRoot.appendChild(style);\r\n    this.shadowRoot.appendChild(template.content.cloneNode(true));\r\n  }\r\n}\r\n\r\n// تسجيل المكون\r\ncustomElements.define('typing-indicator', TypingIndicator);","// src/components/avatar.js\r\n\r\n/**\r\n * مكون الصورة الرمزية\r\n */\r\nclass ChatAvatar extends HTMLElement {\r\n  constructor() {\r\n    super();\r\n    this.attachShadow({ mode: 'open' });\r\n  }\r\n\r\n  connectedCallback() {\r\n    const src = this.getAttribute('src') || '';\r\n    const fallback = this.getAttribute('fallback') || 'B';\r\n    const bgColor = this.getAttribute('bg-color') || '#007BFF';\r\n    const size = this.getAttribute('size') || '40px';\r\n\r\n    // إعداد CSS\r\n    const style = document.createElement('style');\r\n    style.textContent = `\r\n      :host {\r\n        display: inline-block;\r\n      }\r\n\r\n      .avatar {\r\n        width: ${size};\r\n        height: ${size};\r\n        border-radius: 50%;\r\n        overflow: hidden;\r\n        display: flex;\r\n        align-items: center;\r\n        justify-content: center;\r\n        font-weight: 600;\r\n        color: white;\r\n        background-color: ${bgColor};\r\n        font-size: calc(${size} * 0.4);\r\n      }\r\n\r\n      .avatar img {\r\n        width: 100%;\r\n        height: 100%;\r\n        object-fit: cover;\r\n      }\r\n    `;\r\n\r\n    // إنشاء هيكل المكون\r\n    const template = document.createElement('template');\r\n\r\n    if (src) {\r\n      template.innerHTML = `\r\n        <div class=\"avatar\">\r\n          <img src=\"${src}\" alt=\"Avatar\" onerror=\"this.style.display='none'; this.parentNode.textContent='${fallback}'\" />\r\n        </div>\r\n      `;\r\n    } else {\r\n      template.innerHTML = `\r\n        <div class=\"avatar\">${fallback}</div>\r\n      `;\r\n    }\r\n\r\n    // إضافة الأنماط والقالب للظل\r\n    this.shadowRoot.appendChild(style);\r\n    this.shadowRoot.appendChild(template.content.cloneNode(true));\r\n  }\r\n\r\n  static get observedAttributes() {\r\n    return ['src', 'fallback', 'bg-color', 'size'];\r\n  }\r\n\r\n  attributeChangedCallback(name, oldValue, newValue) {\r\n    if (oldValue !== newValue && this.shadowRoot) {\r\n      const avatar = this.shadowRoot.querySelector('.avatar');\r\n\r\n      if (!avatar) return;\r\n\r\n      if (name === 'src') {\r\n        let img = avatar.querySelector('img');\r\n        if (newValue) {\r\n          if (!img) {\r\n            img = document.createElement('img');\r\n            img.setAttribute('alt', 'Avatar');\r\n            avatar.textContent = '';\r\n            avatar.appendChild(img);\r\n          }\r\n          img.setAttribute('src', newValue);\r\n        } else if (img) {\r\n          avatar.textContent = this.getAttribute('fallback') || 'B';\r\n          img.remove();\r\n        }\r\n      } else if (name === 'fallback') {\r\n        const img = avatar.querySelector('img');\r\n        if (!img) {\r\n          avatar.textContent = newValue || 'B';\r\n        }\r\n      } else if (name === 'bg-color') {\r\n        avatar.style.backgroundColor = newValue;\r\n      } else if (name === 'size') {\r\n        avatar.style.width = newValue;\r\n        avatar.style.height = newValue;\r\n        avatar.style.fontSize = `calc(${newValue} * 0.4)`;\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n// تسجيل المكون\r\ncustomElements.define('chat-avatar', ChatAvatar);","import './components/chat-button.js';\r\nimport './components/chat-message.js';\r\nimport './components/suggestions.js';\r\nimport './components/typing-indicator.js';\r\nimport './components/avatar.js';\r\n// إزالة استيراد ChatService:\r\n// import { ChatService } from './services/chat-service.js';\r\n\r\n// استيراد الأنماط (تبقى كما هي)\r\nconst styles = `\r\n :host {\r\n   --primary-color: #007BFF;\r\n   --primary-hover: #0069d9;\r\n   --bg-color: #fff;\r\n   --header-bg: #E6F0FA;\r\n   --text-color: #333;\r\n   --text-secondary: #666;\r\n   --message-bg-user: var(--primary-color);\r\n   --message-color-user: #fff;\r\n   --message-bg-bot: #F8F9FA;\r\n   --message-color-bot: #666;\r\n   --border-color: #E6E6E6;\r\n   --footer-bg: rgba(249, 250, 251, 0.8);\r\n   --bubble-size: 56px;\r\n   --shadow: 0 4px 12px rgba(0, 0, 0, 0.15);\r\n\r\n   font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, 'Helvetica Neue', Arial, sans-serif;\r\n   position: fixed;\r\n   z-index: 9999;\r\n   box-sizing: border-box;\r\n }\r\n\r\n :host([theme=\"dark\"]) {\r\n   --primary-color: #375FFF;\r\n   --primary-hover: #2D4ECC;\r\n   --bg-color: #1E1E1E;\r\n   --header-bg: #2D2D2D;\r\n   --text-color: #fff;\r\n   --text-secondary: #B0B0B0;\r\n   --message-bg-user: var(--primary-color);\r\n   --message-color-user: #fff;\r\n   --message-bg-bot: #2D2D2D;\r\n   --message-color-bot: #E0E0E0;\r\n   --border-color: #3D3D3D;\r\n   --footer-bg: rgba(30, 30, 30, 0.85);\r\n }\r\n\r\n :host([position=\"bottom-right\"]) .chat-container {\r\n   bottom: 24px;\r\n   right: 24px;\r\n }\r\n\r\n :host([position=\"bottom-left\"]) .chat-container {\r\n   bottom: 24px;\r\n   left: 24px;\r\n }\r\n\r\n :host([direction=\"rtl\"]) {\r\n   direction: rtl;\r\n   text-align: right;\r\n }\r\n :host([direction=\"rtl\"]) .header-info {\r\n    margin-left: auto; /* لنقل المعلومات إلى اليمين في وضع RTL */\r\n    margin-right: 12px;\r\n }\r\n :host([direction=\"rtl\"]) .send-button svg {\r\n    transform: scaleX(-1); /* لعكس أيقونة الإرسال */\r\n }\r\n :host([direction=\"rtl\"]) .footer-actions {\r\n    flex-direction: row-reverse; /* لعكس ترتيب الأزرار في الأسفل */\r\n }\r\n\r\n .chat-container {\r\n   z-index: 9999;\r\n   position: fixed;\r\n   display: flex;\r\n   flex-direction: column;\r\n   width: 350px;\r\n   height: calc(95vh - 32px);\r\n   max-height: 600px;\r\n   background-color: transparent; /* تم تغييرها لتكون شفافة */\r\n   border-radius: 24px; /* زيادة الانحناء */\r\n   overflow: hidden;\r\n   box-shadow: var(--shadow);\r\n   transition: transform 0.3s ease, opacity 0.3s ease;\r\n   transform: translateY(20px);\r\n   opacity: 0;\r\n   pointer-events: none;\r\n }\r\n\r\n .chat-container.open {\r\n   transform: translateY(0);\r\n   opacity: 1;\r\n   pointer-events: all;\r\n }\r\n\r\n .chat-header {\r\n   display: flex;\r\n   align-items: center;\r\n   padding: 16px;\r\n   background-color: var(--header-bg);\r\n   border-top-left-radius: 16px; /* تعديل للانحناء الجديد */\r\n   border-top-right-radius: 16px; /* تعديل للانحناء الجديد */\r\n   border-bottom: 1px solid var(--border-color);\r\n }\r\n\r\n .header-info {\r\n   margin-left: 12px; /* تعديل المسافة */\r\n   margin-right: 12px; /* تعديل المسافة */\r\n   flex-grow: 1; /* للسماح بالنمو وأخذ المساحة المتاحة */\r\n }\r\n\r\n .header-title {\r\n   font-size: 16px;\r\n   font-weight: 600;\r\n   color: var(--text-color);\r\n   margin: 0;\r\n }\r\n\r\n .header-subtitle {\r\n   font-size: 12px;\r\n   color: var(--text-secondary);\r\n   margin: 0;\r\n }\r\n\r\n .messages-container {\r\n   flex: 1;\r\n   padding: 16px;\r\n   overflow-y: auto;\r\n   background-color: var(--bg-color);\r\n   display: flex;\r\n   flex-direction: column;\r\n   gap: 16px; /* زيادة المسافة بين الرسائل */\r\n }\r\n\r\n /* تخصيص شريط التمرير */\r\n .messages-container::-webkit-scrollbar {\r\n   width: 6px;\r\n }\r\n .messages-container::-webkit-scrollbar-thumb {\r\n   background-color: rgba(0, 0, 0, 0.2);\r\n   border-radius: 3px;\r\n }\r\n .messages-container::-webkit-scrollbar-track {\r\n   background-color: transparent;\r\n }\r\n\r\n .chat-footer {\r\n   padding: 16px;\r\n   background-color: var(--footer-bg);\r\n   border-top: 1px solid var(--border-color);\r\n   border-bottom-left-radius: 16px; /* تعديل للانحناء الجديد */\r\n   border-bottom-right-radius: 16px; /* تعديل للانحناء الجديد */\r\n   backdrop-filter: blur(10px); /* إضافة تأثير الضبابية */\r\n }\r\n\r\n .input-group {\r\n   display: flex;\r\n   align-items: center;\r\n   gap: 8px; /* إضافة مسافة بين الحقل والزر */\r\n   margin-bottom: 8px; /* مسافة سفلية قبل الأزرار الإضافية */\r\n }\r\n\r\n .chat-input {\r\n   flex: 1;\r\n   padding: 10px 16px; /* زيادة الحشو الداخلي */\r\n   font-size: 14px;\r\n   background-color: var(--bg-color);\r\n   color: var(--text-color);\r\n   border: 1px solid var(--border-color);\r\n   border-radius: 9999px; /* جعله دائريًا تمامًا */\r\n   outline: none;\r\n }\r\n\r\n .chat-input::placeholder {\r\n   color: var(--text-secondary);\r\n }\r\n\r\n .send-button {\r\n   width: 40px; /* حجم الزر */\r\n   height: 40px; /* حجم الزر */\r\n   border-radius: 50%; /* دائري */\r\n   background-color: var(--primary-color);\r\n   color: white;\r\n   border: none;\r\n   display: flex;\r\n   align-items: center;\r\n   justify-content: center;\r\n   cursor: pointer;\r\n   transition: background-color 0.2s;\r\n   flex-shrink: 0; /* منع الزر من الانكماش */\r\n }\r\n\r\n .send-button:hover {\r\n   background-color: var(--primary-hover);\r\n }\r\n\r\n .send-button:disabled {\r\n   opacity: 0.5;\r\n   cursor: not-allowed;\r\n }\r\n\r\n .send-button svg {\r\n   width: 18px; /* حجم الأيقونة */\r\n   height: 18px; /* حجم الأيقونة */\r\n }\r\n\r\n .footer-actions {\r\n   display: flex;\r\n   justify-content: space-between;\r\n   align-items: center;\r\n   /* تم حذف margin-top */\r\n }\r\n\r\n .footer-button {\r\n   background: none;\r\n   border: none;\r\n   color: var(--text-secondary);\r\n   font-size: 12px;\r\n   cursor: pointer;\r\n   padding: 4px 8px;\r\n }\r\n\r\n .footer-button:hover {\r\n   color: var(--primary-color);\r\n }\r\n\r\n .powered-by {\r\n   font-size: 12px;\r\n   color: var(--text-secondary);\r\n }\r\n\r\n /* إضافة عنصر لعرض زمن الاستجابة ومعرف الجلسة (اختياري) */\r\n .session-info {\r\n   font-size: 10px;\r\n   color: var(--text-secondary);\r\n   text-align: center; /* توسيط النص */\r\n   margin-top: 5px;\r\n   display: none; /* إخفاءه مبدئياً */\r\n }\r\n :host([debug=\"true\"]) .session-info {\r\n    display: block; /* إظهاره في وضع التصحيح */\r\n }\r\n`;\r\n\r\nclass ChatWidget extends HTMLElement {\r\n constructor() {\r\n   super();\r\n   this.attachShadow({ mode: 'open' });\r\n   this.isOpen = false;\r\n   this.messages = [];\r\n   this.isTyping = false; // لا يزال مفيدًا لمؤشر الكتابة العام\r\n   this.sessionId = this._loadSessionId(); // تحميل أو إنشاء معرف الجلسة\r\n\r\n   // متغيرات الحالة الجديدة لـ SSE\r\n   this.currentBotMessageContainer = null;\r\n   this.responseStartTime = null;\r\n\r\n   // إزالة التهيئة الخاصة بـ ChatService\r\n   // this.chatService = new ChatService(); // --- محذوف ---\r\n\r\n   this._initialize();\r\n }\r\n\r\n static get observedAttributes() {\r\n   return [\r\n     'project-id', 'theme', 'position', 'welcome-message',\r\n     'api-url', 'direction', 'avatar', 'title', 'subtitle', 'powered-by', 'debug' // إضافة debug\r\n   ];\r\n }\r\n\r\n _initialize() {\r\n   // التهيئة الأساسية للمكون\r\n   this._render();\r\n   this._setupEventListeners();\r\n\r\n   // إضافة رسالة الترحيب\r\n   setTimeout(() => {\r\n     // لا نستخدم _addMessage هنا مباشرة للترحيب إذا أردنا تصميمًا مختلفًا له\r\n     const welcomeMsg = this.getAttribute('welcome-message') || 'مرحبًا بك! كيف يمكنني مساعدتك اليوم؟';\r\n     this._createBotMessageContainer(welcomeMsg); // إنشاء حاوية رسالة البوت مباشرة\r\n     // لا نحتاج إلى إضافة رسالة الترحيب إلى مصفوفة messages إذا كانت ثابتة\r\n   }, 300);\r\n }\r\n\r\n _render() {\r\n   const styleEl = document.createElement('style');\r\n   styleEl.textContent = styles;\r\n\r\n   const template = document.createElement('template');\r\n   template.innerHTML = `\r\n     <div class=\"chat-container\">\r\n       <div class=\"chat-header\">\r\n         <chat-avatar\r\n           src=\"${this.getAttribute('avatar') || ''}\"\r\n           fallback=\"${(this.getAttribute('title') || 'Bot').charAt(0)}\"\r\n           bg-color=\"var(--primary-color)\">\r\n         </chat-avatar>\r\n         <div class=\"header-info\">\r\n           <h3 class=\"header-title\">${this.getAttribute('title') || 'Chat Assistant'}</h3>\r\n           <p class=\"header-subtitle\">${this.getAttribute('subtitle') || 'Our virtual agent is here to help you'}</p>\r\n         </div>\r\n       </div>\r\n\r\n       <div class=\"messages-container\" id=\"messages\"></div>\r\n\r\n       <div class=\"chat-footer\">\r\n         <div class=\"input-group\">\r\n           <input type=\"text\" class=\"chat-input\" placeholder=\"اكتب رسالة...\" />\r\n           <button class=\"send-button\" disabled>\r\n             <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\">\r\n               <line x1=\"22\" y1=\"2\" x2=\"11\" y2=\"13\"></line>\r\n               <polygon points=\"22 2 15 22 11 13 2 9 22 2\"></polygon>\r\n             </svg>\r\n           </button>\r\n         </div>\r\n         <div class=\"footer-actions\">\r\n           <button class=\"footer-button new-chat-btn\">محادثة جديدة</button>\r\n           <span class=\"powered-by\">${this.getAttribute('powered-by') || 'Powered by AI'}</span>\r\n           <button class=\"footer-button close-btn\">إغلاق</button>\r\n         </div>\r\n          <div class=\"session-info\">\r\n           <span id=\"session-id-display\">معرف الجلسة: ${this.sessionId}</span>\r\n           <span id=\"last-response-time\"></span>\r\n         </div>\r\n       </div>\r\n     </div>\r\n\r\n     <chat-button></chat-button>\r\n   `;\r\n\r\n   this.shadowRoot.appendChild(styleEl);\r\n   this.shadowRoot.appendChild(template.content.cloneNode(true));\r\n\r\n   // تخزين المراجع للعناصر المهمة\r\n   this.chatContainer = this.shadowRoot.querySelector('.chat-container');\r\n   this.messagesContainer = this.shadowRoot.querySelector('#messages');\r\n   this.chatInput = this.shadowRoot.querySelector('.chat-input');\r\n   this.sendButton = this.shadowRoot.querySelector('.send-button');\r\n   this.chatButton = this.shadowRoot.querySelector('chat-button');\r\n\r\n   // إضافة اقتراحات مبدئية (إذا لم تكن هناك رسائل ترحيب أولاً)\r\n   if (this.messagesContainer.children.length === 0) {\r\n        this._addInitialSuggestions();\r\n   }\r\n }\r\n\r\n _addInitialSuggestions() {\r\n    const suggestionsEl = document.createElement('chat-suggestions');\r\n    // يمكن جعل الاقتراحات قابلة للتخصيص عبر سمة\r\n    suggestionsEl.suggestions = [\r\n      'ما هي خدماتكم؟',\r\n      'كيف يمكنني التواصل معكم؟',\r\n      'هل لديكم خدمة توصيل؟'\r\n    ];\r\n    this.messagesContainer.appendChild(suggestionsEl);\r\n    this._scrollToBottom();\r\n }\r\n\r\n _setupEventListeners() {\r\n   this.chatButton.addEventListener('click', () => this.toggleChat());\r\n   this.sendButton.addEventListener('click', () => this._sendMessage());\r\n   this.chatInput.addEventListener('keypress', (e) => {\r\n     if (e.key === 'Enter' && !this.sendButton.disabled) {\r\n       this._sendMessage();\r\n     }\r\n   });\r\n   this.chatInput.addEventListener('input', () => {\r\n     this.sendButton.disabled = !this.chatInput.value.trim();\r\n   });\r\n   this.shadowRoot.querySelector('.new-chat-btn').addEventListener('click', () => this._clearChat());\r\n   this.shadowRoot.querySelector('.close-btn').addEventListener('click', () => this.toggleChat());\r\n   this.shadowRoot.addEventListener('suggestion-clicked', (e) => {\r\n     const { suggestion } = e.detail;\r\n     this.chatInput.value = suggestion;\r\n     this.sendButton.disabled = false; // تفعيل الزر\r\n     this._sendMessage();\r\n   });\r\n }\r\n\r\n // --- دالة إضافة رسالة المستخدم (تبقى كما هي تقريباً) ---\r\n _addUserMessage(content) {\r\n   const messageEl = document.createElement('chat-message');\r\n   messageEl.setAttribute('sender', 'user');\r\n   messageEl.setAttribute('message-id', `user-${Date.now()}`);\r\n   messageEl.textContent = content; // تعيين المحتوى مباشرة\r\n\r\n   // إضافة الوقت للرسالة\r\n   const timeEl = document.createElement('span');\r\n   timeEl.className = 'timestamp';\r\n   timeEl.textContent = new Date().toLocaleTimeString([], {hour:'2-digit', minute:'2-digit'});\r\n   messageEl.shadowRoot.querySelector('.message-content').appendChild(timeEl);\r\n\r\n\r\n   this.messagesContainer.appendChild(messageEl);\r\n   this._scrollToBottom();\r\n\r\n   // إخفاء الاقتراحات إذا كانت موجودة\r\n   const suggestions = this.shadowRoot.querySelector('chat-suggestions');\r\n   if (suggestions) {\r\n     suggestions.style.display = 'none';\r\n   }\r\n }\r\n\r\n // --- دالة إنشاء حاوية رسالة البوت (معدلة / جديدة) ---\r\n _createBotMessageContainer(initialContent = '...') {\r\n     const messageEl = document.createElement('chat-message');\r\n     messageEl.setAttribute('sender', 'bot');\r\n     messageEl.setAttribute('message-id', `bot-${Date.now()}`);\r\n     messageEl.setAttribute('avatar', this.getAttribute('avatar') || '');\r\n     messageEl.textContent = initialContent; // تعيين المحتوى المبدئي (أو placeholder)\r\n\r\n     this.messagesContainer.appendChild(messageEl);\r\n     this._scrollToBottom();\r\n     return messageEl; // إرجاع العنصر للتعامل معه لاحقاً\r\n }\r\n\r\n // --- الدالة الرئيسية لإرسال الرسالة (معدلة بشكل كبير) ---\r\n _sendMessage() {\r\n   const message = this.chatInput.value.trim();\r\n   if (!message) return;\r\n\r\n   // 1. إضافة رسالة المستخدم إلى الواجهة\r\n   this._addUserMessage(message);\r\n\r\n   // 2. مسح حقل الإدخال وتعطيل الزر\r\n   this.chatInput.value = '';\r\n   this.sendButton.disabled = true;\r\n   this.chatInput.disabled = true; // تعطيل الإدخال أثناء انتظار الرد\r\n\r\n   // 3. إظهار مؤشر الكتابة العام (اختياري إذا كان التصميم يتطلب ذلك)\r\n   // this._showTypingIndicator(); // --- يمكن إزالته إذا لم يكن مرغوبًا مع الـ streaming ---\r\n\r\n   // 4. إعداد حاوية رسالة البوت الجديدة للرد القادم\r\n   this.currentBotMessageContainer = this._createBotMessageContainer(); // استخدام placeholder الافتراضي '...'\r\n   this.responseStartTime = performance.now(); // بدء قياس الوقت\r\n\r\n   // 5. استدعاء دالة الـ Streaming مباشرة\r\n   this._streamChatResponse(message, this.sessionId)\r\n     .catch(err => {\r\n        console.error('Streaming Error:', err);\r\n        // التعامل مع الخطأ على مستوى أعلى (مثل فشل الاتصال الأولي)\r\n        this._handleStreamError(err.message || 'فشل الاتصال بالخادم.');\r\n     });\r\n }\r\n\r\n // --- دالة جديدة: التعامل مع تدفق استجابة الدردشة (SSE) ---\r\n async _streamChatResponse(message, sessionId) {\r\n   const url = this.getAttribute('api-url');\r\n   if (!url) {\r\n     throw new Error(\"Chat API URL is not set.\");\r\n   }\r\n   // تضمين project_id إذا كان الـ API يتطلبه\r\n   const projectId = this.getAttribute('project-id');\r\n   const requestData = {\r\n       message,\r\n       session_id: sessionId,\r\n       debug: this.hasAttribute('debug') // إرسال حالة التصحيح\r\n   };\r\n   // إضافة projectId إذا كان موجودًا\r\n   if (projectId) {\r\n     requestData.project_id = projectId;\r\n   }\r\n\r\n\r\n   const response = await fetch(url, {\r\n     method: 'POST',\r\n     headers: {\r\n       'Content-Type': 'application/json',\r\n       'Accept': 'text/event-stream' // مهم لـ SSE\r\n     },\r\n     body: JSON.stringify(requestData),\r\n   });\r\n\r\n   if (!response.ok) {\r\n     // محاولة قراءة رسالة الخطأ من الخادم\r\n     let errorText = `HTTP error ${response.status}`;\r\n     try {\r\n       const errorData = await response.json(); // محاولة قراءة JSON\r\n       errorText = errorData.detail || errorData.message || JSON.stringify(errorData);\r\n     } catch (e) {\r\n       errorText = await response.text(); // قراءة كنص إذا فشل JSON\r\n     }\r\n     throw new Error(errorText);\r\n   }\r\n   if (!response.body) {\r\n     throw new Error('No response body received from server.');\r\n   }\r\n\r\n   const reader = response.body.getReader();\r\n   const decoder = new TextDecoder('utf-8');\r\n   let buffer = '';\r\n\r\n   // حلقة لقراءة الـ stream\r\n   while (true) {\r\n     const { done, value } = await reader.read();\r\n     if (done) {\r\n       console.log(\"Stream finished.\");\r\n       // قد تحتاج إلى التحقق هنا إذا لم يتم استلام حدث 'end'\r\n       if (!this.currentBotMessageContainer.classList.contains('finished')) {\r\n            console.warn(\"Stream ended without an 'end' event. Finalizing message.\");\r\n            // التأكد من إخفاء المؤشر وإعادة تفعيل الإدخال حتى لو لم يصل حدث end\r\n            this._finishBotMessage(this.sessionId); // استخدام sessionId الحالي\r\n       }\r\n       break;\r\n     }\r\n\r\n     buffer += decoder.decode(value, { stream: true });\r\n     // تقسيم الأحداث بناءً على السطرين الفارغين\r\n     const parts = buffer.split('\\n\\n');\r\n     buffer = parts.pop() || ''; // الجزء الأخير قد يكون غير مكتمل، يتم الاحتفاظ به\r\n\r\n     for (const chunk of parts) {\r\n       this._processSseEvent(chunk);\r\n     }\r\n   }\r\n }\r\n\r\n // --- دالة جديدة: معالجة حدث SSE واحد ---\r\n _processSseEvent(eventData) {\r\n   console.log(\"Raw SSE Event:\", eventData);\r\n   const lines = eventData.split('\\n');\r\n   let eventType = 'message'; // النوع الافتراضي\r\n   let payload = '';\r\n\r\n   for (const line of lines) {\r\n     if (line.startsWith('event:')) {\r\n       eventType = line.slice(6).trim();\r\n     } else if (line.startsWith('data:')) {\r\n       // التعامل مع البيانات التي قد تمتد على عدة أسطر data:\r\n       payload += line.slice(5).trim();\r\n     }\r\n     // يمكن تجاهل الأسطر الأخرى مثل id:, retry: حاليًا\r\n   }\r\n\r\n   if (!payload) return; // لا يوجد بيانات لمعالجتها\r\n\r\n   let data;\r\n   try {\r\n     data = JSON.parse(payload);\r\n     console.log(`Parsed SSE Event (${eventType}):`, data);\r\n   } catch (err) {\r\n     console.error('JSON parse error in SSE data:', err, payload);\r\n     this._handleStreamError(`خطأ في تنسيق بيانات الخادم: ${payload}`);\r\n     return;\r\n   }\r\n\r\n   switch (eventType) {\r\n     case 'chunk':\r\n       if (data.content !== undefined && data.content !== null) {\r\n         this._appendToBotMessage(data.content);\r\n       }\r\n       break;\r\n     case 'end':\r\n       // الخادم يشير إلى نهاية الاستجابة\r\n       this._finishBotMessage(data.session_id); // تمرير معرف الجلسة الجديد إن وجد\r\n       break;\r\n     case 'error':\r\n       // الخادم أرسل رسالة خطأ واضحة\r\n       this._handleStreamError(data.error || data.message || 'حدث خطأ غير معروف من الخادم.');\r\n       break;\r\n     case 'debug':\r\n        console.log(\"Debug Info:\", data);\r\n        // يمكنك عرض معلومات التصحيح في الواجهة إذا أردت\r\n        break;\r\n     // يمكنك إضافة حالات أخرى مثل 'tool_call', 'tool_result' إذا كانت API تدعمها\r\n     default:\r\n       console.warn(`Unhandled SSE event type: ${eventType}`);\r\n       // قد ترغب في التعامل مع النوع الافتراضي 'message' إذا كان الخادم لا يرسل 'event:'\r\n       if(eventType === 'message' && data.content) {\r\n           this._appendToBotMessage(data.content);\r\n       }\r\n   }\r\n }\r\n\r\n // --- دالة مساعدة جديدة: إضافة نص إلى رسالة البوت الحالية ---\r\n _appendToBotMessage(text) {\r\n   if (!this.currentBotMessageContainer) {\r\n     console.error(\"Attempted to append text but no currentBotMessageContainer exists.\");\r\n     // ربما إنشاء حاوية جديدة كحل بديل؟\r\n     this.currentBotMessageContainer = this._createBotMessageContainer('');\r\n   }\r\n\r\n   const contentEl = this.currentBotMessageContainer.shadowRoot.querySelector('.message-content');\r\n   if (!contentEl) {\r\n       console.error(\"Could not find .message-content in currentBotMessageContainer.\");\r\n       return;\r\n   }\r\n\r\n   // إزالة الـ placeholder ('...') عند وصول أول جزء\r\n   if (contentEl.textContent === '...') {\r\n     contentEl.textContent = '';\r\n   }\r\n\r\n   contentEl.textContent += text; // إضافة النص الجديد\r\n   this._scrollToBottom(); // التمرير لأسفل مع كل إضافة\r\n }\r\n\r\n // --- دالة مساعدة جديدة: إنهاء رسالة البوت ---\r\n _finishBotMessage(newSessionId) {\r\n   if (!this.currentBotMessageContainer) {\r\n       console.warn(\"finishBotMessage called but no currentBotMessageContainer\");\r\n       // تأكد من إعادة تفعيل الإدخال حتى لو لم تكن هناك رسالة\r\n       this.chatInput.disabled = false;\r\n       this.sendButton.disabled = !this.chatInput.value.trim(); // تفعيل زر الإرسال إذا كان هناك نص\r\n       return;\r\n   }\r\n\r\n   this.currentBotMessageContainer.classList.add('finished'); // علامة لتمييز الرسالة المكتملة\r\n\r\n   // إخفاء مؤشر الكتابة العام (إذا كان مستخدماً)\r\n   // this._hideTypingIndicator(); // --- إزالة إذا لم يعد المؤشر العام مستخدماً ---\r\n\r\n   const end = performance.now();\r\n   const duration = ((end - (this.responseStartTime || end)) / 1000).toFixed(2); // حساب المدة\r\n\r\n   // إضافة الطابع الزمني إلى الرسالة\r\n   const contentEl = this.currentBotMessageContainer.shadowRoot.querySelector('.message-content');\r\n   if (contentEl) {\r\n     const timeEl = document.createElement('span');\r\n     timeEl.className = 'timestamp';\r\n     timeEl.textContent = new Date().toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' });\r\n     contentEl.appendChild(timeEl); // إضافة الطابع الزمني داخل فقاعة الرسالة\r\n   }\r\n\r\n   // تحديث معلومات الجلسة وزمن الاستجابة (إذا كانت العناصر موجودة)\r\n   const responseTimeEl = this.shadowRoot.querySelector('#last-response-time');\r\n   if (responseTimeEl) {\r\n     responseTimeEl.textContent = ` | آخر زمن استجابة: ${duration} ث`;\r\n   }\r\n\r\n   // التحقق من تغيير معرف الجلسة وتحديثه\r\n   if (newSessionId && newSessionId !== this.sessionId) {\r\n     console.log(`Session ID changed from ${this.sessionId} to ${newSessionId}`);\r\n     this.sessionId = newSessionId;\r\n     localStorage.setItem('chatWidgetSessionId', newSessionId); // حفظ المعرف الجديد\r\n     const sessionIdDisplay = this.shadowRoot.querySelector('#session-id-display');\r\n     if (sessionIdDisplay) {\r\n       sessionIdDisplay.textContent = `معرف الجلسة: ${newSessionId}`;\r\n     }\r\n   }\r\n\r\n   // إعادة تفعيل حقل الإدخال وزر الإرسال\r\n   this.chatInput.disabled = false;\r\n   this.sendButton.disabled = !this.chatInput.value.trim(); // تفعيل/تعطيل بناءً على المحتوى الحالي\r\n\r\n   // إعادة تعيين حاوية الرسالة الحالية\r\n   this.currentBotMessageContainer = null;\r\n   this.responseStartTime = null;\r\n   this._scrollToBottom(); // تأكد من أن الرسالة المكتملة مرئية\r\n }\r\n\r\n // --- دالة مساعدة جديدة: التعامل مع أخطاء الـ Stream ---\r\n _handleStreamError(errorMessage) {\r\n   console.error(\"Stream Error Handler:\", errorMessage);\r\n\r\n   // إخفاء مؤشر الكتابة العام (إذا كان مستخدماً)\r\n   // this._hideTypingIndicator(); // --- إزالة إذا لم يعد المؤشر العام مستخدماً ---\r\n\r\n   const errorContent = `خطأ: ${errorMessage}`;\r\n\r\n   if (this.currentBotMessageContainer && !this.currentBotMessageContainer.classList.contains('finished')) {\r\n     // إذا كانت هناك رسالة بوت قيد الإنشاء، اعرض الخطأ فيها\r\n     const contentEl = this.currentBotMessageContainer.shadowRoot.querySelector('.message-content');\r\n     if (contentEl) {\r\n       contentEl.innerHTML = `<div class=\"error-message\" style=\"color: red;\">${errorContent}</div>`;\r\n        // إضافة الطابع الزمني للخطأ أيضاً\r\n        const timeEl = document.createElement('span');\r\n        timeEl.className = 'timestamp';\r\n        timeEl.textContent = new Date().toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' });\r\n        contentEl.appendChild(timeEl);\r\n     }\r\n     this.currentBotMessageContainer.classList.add('finished', 'error'); // تمييزها كخطأ\r\n   } else {\r\n     // إذا لم تكن هناك رسالة قيد الإنشاء، أنشئ رسالة خطأ جديدة\r\n     const errorMsgContainer = this._createBotMessageContainer(''); // إنشاء حاوية جديدة\r\n     const contentEl = errorMsgContainer.shadowRoot.querySelector('.message-content');\r\n     contentEl.innerHTML = `<div class=\"error-message\" style=\"color: red;\">${errorContent}</div>`;\r\n      // إضافة الطابع الزمني للخطأ أيضاً\r\n     const timeEl = document.createElement('span');\r\n     timeEl.className = 'timestamp';\r\n     timeEl.textContent = new Date().toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' });\r\n     contentEl.appendChild(timeEl);\r\n     errorMsgContainer.classList.add('finished', 'error'); // تمييزها كخطأ\r\n   }\r\n\r\n   // إعادة تفعيل حقل الإدخال وزر الإرسال دائماً عند الخطأ\r\n   this.chatInput.disabled = false;\r\n   this.sendButton.disabled = !this.chatInput.value.trim();\r\n\r\n   // إعادة تعيين الحالة\r\n   this.currentBotMessageContainer = null;\r\n   this.responseStartTime = null;\r\n   this._scrollToBottom();\r\n }\r\n\r\n\r\n // --- دوال المؤشر العام (قد لا تكون ضرورية بنفس الشكل الآن) ---\r\n _showTypingIndicator() {\r\n   // يمكن إبقاء هذه الدالة إذا أردت مؤشرًا عامًا منفصلاً يظهر أسفل المحادثة\r\n   if (this.shadowRoot.querySelector('#typing-indicator')) return; // لا تضف إذا كان موجودًا\r\n\r\n   this.isTyping = true;\r\n   const typingEl = document.createElement('typing-indicator');\r\n   typingEl.setAttribute('avatar', this.getAttribute('avatar') || '');\r\n   typingEl.id = 'typing-indicator';\r\n   this.messagesContainer.appendChild(typingEl);\r\n   this._scrollToBottom();\r\n }\r\n\r\n _hideTypingIndicator() {\r\n   this.isTyping = false;\r\n   const typingEl = this.shadowRoot.querySelector('#typing-indicator');\r\n   if (typingEl) {\r\n     typingEl.remove();\r\n   }\r\n }\r\n\r\n // --- دالة مسح المحادثة (تحديث بسيط لمعرف الجلسة) ---\r\n _clearChat() {\r\n   this.messages = []; // مسح مصفوفة الرسائل (إذا كانت لا تزال مستخدمة)\r\n   while (this.messagesContainer.firstChild) {\r\n     this.messagesContainer.removeChild(this.messagesContainer.firstChild);\r\n   }\r\n\r\n   // إنشاء جلسة جديدة وتحديث العرض\r\n   this.sessionId = this._generateSessionId(); // إنشاء معرف جديد\r\n   localStorage.setItem('chatWidgetSessionId', this.sessionId); // حفظه\r\n   const sessionIdDisplay = this.shadowRoot.querySelector('#session-id-display');\r\n    if (sessionIdDisplay) {\r\n      sessionIdDisplay.textContent = `معرف الجلسة: ${this.sessionId}`;\r\n    }\r\n    const responseTimeEl = this.shadowRoot.querySelector('#last-response-time');\r\n    if (responseTimeEl) {\r\n      responseTimeEl.textContent = ''; // مسح زمن الاستجابة\r\n    }\r\n\r\n\r\n   // إعادة إضافة رسالة الترحيب و/أو الاقتراحات\r\n   setTimeout(() => {\r\n     const welcomeMsg = this.getAttribute('welcome-message') || 'مرحبًا بك مجددًا! كيف يمكنني المساعدة؟';\r\n     this._createBotMessageContainer(welcomeMsg);\r\n     this._addInitialSuggestions(); // إعادة إضافة الاقتراحات\r\n   }, 100); // تأخير بسيط للسماح بمسح الواجهة\r\n\r\n   // التأكد من تفعيل حقل الإدخال\r\n   this.chatInput.disabled = false;\r\n   this.sendButton.disabled = true; // تعطيل الإرسال لأن الحقل فارغ\r\n }\r\n\r\n // --- تبديل حالة النافذة (تبقى كما هي) ---\r\n toggleChat() {\r\n   console.log('🔘 toggleChat fired! isOpen=', this.isOpen);\r\n   this.isOpen = !this.isOpen;\r\n   if (this.isOpen) {\r\n     this.chatContainer.classList.add('open');\r\n     localStorage.setItem('chatWidgetOpen', 'true');\r\n     // التركيز على حقل الإدخال عند الفتح\r\n     setTimeout(() => this.chatInput.focus(), 300);\r\n   } else {\r\n     this.chatContainer.classList.remove('open');\r\n     localStorage.setItem('chatWidgetOpen', 'false');\r\n   }\r\n }\r\n\r\n // --- التمرير للأسفل (تبقى كما هي) ---\r\n _scrollToBottom() {\r\n   // استخدام requestAnimationFrame لتمرير أكثر سلاسة بعد التحديث\r\n   requestAnimationFrame(() => {\r\n        // تأجيل بسيط إضافي للتأكد من اكتمال الـ rendering\r\n       setTimeout(() => {\r\n           this.messagesContainer.scrollTop = this.messagesContainer.scrollHeight;\r\n       }, 50);\r\n   });\r\n }\r\n\r\n // --- دوال إدارة معرف الجلسة ---\r\n _loadSessionId() {\r\n   let id = localStorage.getItem('chatWidgetSessionId');\r\n   if (!id) {\r\n     id = this._generateSessionId();\r\n     localStorage.setItem('chatWidgetSessionId', id);\r\n   }\r\n   console.log(\"Loaded Session ID:\", id);\r\n   return id;\r\n }\r\n\r\n _generateSessionId() {\r\n   const newId = 'session_' + Math.random().toString(36).substring(2, 15) + Date.now().toString(36);\r\n   console.log(\"Generated New Session ID:\", newId);\r\n   return newId;\r\n }\r\n\r\n // --- دورة حياة المكون (تحديث بسيط) ---\r\n connectedCallback() {\r\n   const savedState = localStorage.getItem('chatWidgetOpen');\r\n   if (savedState === 'true') {\r\n     // تأخير بسيط قبل الفتح للسماح بتهيئة كل شيء\r\n     setTimeout(() => this.toggleChat(), 100);\r\n   }\r\n   // تطبيق السمة عند الاتصال\r\n   this._applyDirectionAttribute();\r\n   this._applyDebugAttribute();\r\n }\r\n\r\n attributeChangedCallback(name, oldValue, newValue) {\r\n   if (oldValue === newValue) return; // لا تفعل شيئًا إذا لم تتغير القيمة\r\n\r\n   switch (name) {\r\n     case 'direction':\r\n       this._applyDirectionAttribute();\r\n       break;\r\n    case 'theme':\r\n        // يمكن إضافة تحديثات هنا إذا لزم الأمر عند تغيير الثيم ديناميكيًا\r\n        break;\r\n    case 'title':\r\n        const titleEl = this.shadowRoot.querySelector('.header-title');\r\n        if(titleEl) titleEl.textContent = newValue || 'Chat Assistant';\r\n        break;\r\n    case 'subtitle':\r\n        const subtitleEl = this.shadowRoot.querySelector('.header-subtitle');\r\n        if(subtitleEl) subtitleEl.textContent = newValue || 'Our virtual agent is here to help you';\r\n        break;\r\n    case 'powered-by':\r\n        const poweredByEl = this.shadowRoot.querySelector('.powered-by');\r\n        if(poweredByEl) poweredByEl.textContent = newValue || 'Powered by AI';\r\n        break;\r\n    case 'avatar':\r\n        const avatarEl = this.shadowRoot.querySelector('chat-avatar');\r\n        if(avatarEl) avatarEl.setAttribute('src', newValue || '');\r\n        break;\r\n    case 'debug':\r\n        this._applyDebugAttribute();\r\n        break;\r\n     // يمكن إضافة حالات أخرى للسمات عند الحاجة\r\n   }\r\n }\r\n\r\n // دالة مساعدة لتطبيق سمة direction\r\n _applyDirectionAttribute() {\r\n    const dir = this.getAttribute('direction') || 'rtl'; // افتراضي rtl\r\n    // لا حاجة لتطبيقها على this.style.direction مباشرة\r\n    // الأنماط داخل :host([direction=\"rtl\"]) تتعامل معها\r\n    // قد تحتاج لتحديث عناصر أخرى إذا لم تكن تستجيب للـ CSS direction\r\n    const input = this.shadowRoot.querySelector('.chat-input');\r\n    if (input) input.setAttribute('dir', dir);\r\n }\r\n  // دالة مساعدة لتطبيق سمة debug\r\n _applyDebugAttribute() {\r\n    const sessionInfo = this.shadowRoot.querySelector('.session-info');\r\n    if (!sessionInfo) return;\r\n    if (this.hasAttribute('debug')) {\r\n        sessionInfo.style.display = 'block';\r\n    } else {\r\n        sessionInfo.style.display = 'none';\r\n    }\r\n }\r\n\r\n}\r\n\r\n// تسجيل المكون\r\ncustomElements.define('chat-widget', ChatWidget);\r\n\r\nexport default ChatWidget;","// نقطة الدخول الرئيسية للمكتبة\r\nimport './chat-widget.js';\r\n\r\n// نافذة عامة للوصول إلى المكتبة\r\nwindow.ChatWidget = {\r\n  init: (options = {}) => {\r\n    // تهيئة الخيارات الافتراضية\r\n    const defaultOptions = {\r\n      projectId: '',\r\n      theme: 'light',\r\n      position: 'bottom-right',\r\n      welcomeMessage: 'مرحبًا بك! كيف يمكنني مساعدتك اليوم؟',\r\n      apiUrl: 'https://exadoo-rxr9.onrender.com/bot/chat/stream',\r\n      direction: 'rtl',\r\n      avatar: '',\r\n      title: 'Exaado Assistant',\r\n      subtitle: 'Our virtual agent is here to help you',\r\n      poweredBy: 'Powered by EXAADO:exaado.com'\r\n    };\r\n\r\n    // دمج الخيارات مع الافتراضية\r\n    const config = { ...defaultOptions, ...options };\r\n\r\n    // إنشاء مكون الدردشة\r\n    const chatWidget = document.createElement('chat-widget');\r\n\r\n    // تعيين السمات\r\n    Object.entries(config).forEach(([key, value]) => {\r\n    if (value == null || value === '') return;  // نتجنّب السمات الفارغة\r\n    // حوّل camelCase إلى kebab-case\r\n    const attr = key.replace(/([A-Z])/g, '-$1').toLowerCase();\r\n    chatWidget.setAttribute(attr, value);\r\n  });\r\n\r\n    // إضافة المكون للصفحة\r\n    document.body.appendChild(chatWidget);\r\n\r\n    // إرجاع مرجع إلى المكون\r\n    return chatWidget;\r\n  }\r\n};\r\n\r\n// إعداد مثيل تلقائياً إذا كانت هناك خيارات في نافذة المتصفح\r\nif (window.ChatWidgetOptions) {\r\n  window.ChatWidget.init(window.ChatWidgetOptions);\r\n}"],"names":["ChatButton","HTMLElement","constructor","super","this","attachShadow","mode","style","document","createElement","textContent","template","innerHTML","shadowRoot","appendChild","content","cloneNode","bubbleElement","querySelector","connectedCallback","addEventListener","attributeChangedCallback","name","oldValue","newValue","left","right","observedAttributes","customElements","define","ChatMessage","sender","getAttribute","avatar","messageId","processedContent","_processMessageContent","messageElement","className","setAttribute","avatarHTML","now","Date","timeStr","getHours","toString","padStart","getMinutes","_activateLinks","processed","replace","match","code","trim","querySelectorAll","forEach","button","hasAttribute","action","dispatchEvent","CustomEvent","detail","bubbles","composed","get","ChatSuggestions","_suggestions","_render","suggestions","value","Array","isArray","container","map","suggestion","join","TypingIndicator","ChatAvatar","src","fallback","bgColor","size","img","remove","backgroundColor","width","height","fontSize","ChatWidget","isOpen","messages","isTyping","sessionId","_loadSessionId","currentBotMessageContainer","responseStartTime","_initialize","_setupEventListeners","setTimeout","welcomeMsg","_createBotMessageContainer","styleEl","charAt","chatContainer","messagesContainer","chatInput","sendButton","chatButton","children","length","_addInitialSuggestions","suggestionsEl","_scrollToBottom","toggleChat","_sendMessage","e","key","disabled","_clearChat","_addUserMessage","messageEl","timeEl","toLocaleTimeString","hour","minute","display","initialContent","message","performance","_streamChatResponse","catch","err","console","error","_handleStreamError","url","Error","projectId","requestData","session_id","debug","project_id","response","fetch","method","headers","Accept","body","JSON","stringify","ok","errorText","status","errorData","json","text","reader","getReader","decoder","TextDecoder","buffer","done","read","log","classList","contains","warn","_finishBotMessage","decode","stream","parts","split","pop","chunk","_processSseEvent","eventData","lines","data","eventType","payload","line","startsWith","slice","parse","undefined","_appendToBotMessage","contentEl","newSessionId","add","end","duration","toFixed","responseTimeEl","localStorage","setItem","sessionIdDisplay","errorMessage","errorContent","errorMsgContainer","_showTypingIndicator","typingEl","id","_hideTypingIndicator","firstChild","removeChild","_generateSessionId","focus","requestAnimationFrame","scrollTop","scrollHeight","getItem","newId","Math","random","substring","_applyDirectionAttribute","_applyDebugAttribute","titleEl","subtitleEl","poweredByEl","avatarEl","dir","input","sessionInfo","window","init","options","config","theme","position","welcomeMessage","apiUrl","direction","title","subtitle","poweredBy","chatWidget","Object","entries","attr","toLowerCase","ChatWidgetOptions"],"mappings":"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"}
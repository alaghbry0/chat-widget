{"version":3,"file":"widget.min.js","sources":["../src/components/chat-button.js","../node_modules/marked/lib/marked.esm.js","../node_modules/dompurify/dist/purify.es.mjs","../src/utils/renderMarkdown.js","../src/components/chat-message.js","../src/components/suggestions.js","../src/components/typing-indicator.js","../src/components/avatar.js","../src/services/chat-service.js","../src/chat-widget.js","../src/index.js"],"sourcesContent":["/**\r\n * مكون زر فتح نافذة الدردشة\r\n */\r\nclass ChatButton extends HTMLElement {\r\n  constructor() {\r\n    super();\r\n    this.attachShadow({ mode: 'open' });\r\n    this.isOpen = false;\r\n\r\n    // إعداد الأنماط\r\n    const style = document.createElement('style');\r\n    style.textContent = `\r\n      :host {\r\n        display: block;\r\n      }\r\n\r\n      .chat-bubble {\r\n        position: fixed;\r\n        bottom: 20px;\r\n        right: 26px;\r\n        width: 50px;\r\n        height: 50px;\r\n        background-color: var(--primary-color, #007BFF);\r\n        border-radius: 50%;\r\n        box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);\r\n        display: flex;\r\n        align-items: center;\r\n        justify-content: center;\r\n        cursor: pointer;\r\n        transition: transform 0.3s, background-color 0.3s;\r\n        z-index: 9998;\r\n      }\r\n\r\n      :host([position=\"bottom-left\"]) .chat-bubble {\r\n        left: 24px;\r\n        right: auto;\r\n      }\r\n\r\n      .chat-bubble:hover {\r\n        transform: scale(1.05);\r\n        background-color: var(--primary-hover, #0069d9);\r\n      }\r\n\r\n      .chat-bubble svg {\r\n        width: 24px;\r\n        height: 24px;\r\n        fill: none;\r\n        stroke: white;\r\n        stroke-width: 2;\r\n        stroke-linecap: round;\r\n        stroke-linejoin: round;\r\n        transition: transform 0.3s ease;\r\n      }\r\n\r\n      .chat-bubble.open svg {\r\n        transform: rotate(180deg);\r\n      }\r\n\r\n      @keyframes pulse {\r\n        0% {\r\n          box-shadow: 0 0 0 0 rgba(0, 123, 255, 0.7);\r\n        }\r\n        70% {\r\n          box-shadow: 0 0 0 10px rgba(0, 123, 255, 0);\r\n        }\r\n        100% {\r\n          box-shadow: 0 0 0 0 rgba(0, 123, 255, 0);\r\n        }\r\n      }\r\n\r\n      .chat-bubble.pulse {\r\n        animation: pulse 2s infinite;\r\n      }\r\n    `;\r\n\r\n    // إنشاء هيكل المكون\r\n    const template = document.createElement('template');\r\n    template.innerHTML = `\r\n      <div class=\"chat-bubble pulse\">\r\n        <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\r\n          <path d=\"M18 15l-6-6-6 6\"></path>\r\n        </svg>\r\n      </div>\r\n    `;\r\n\r\n    // إضافة الأنماط والقالب للظل\r\n    this.shadowRoot.appendChild(style);\r\n    this.shadowRoot.appendChild(template.content.cloneNode(true));\r\n\r\n    // تخزين مرجع لعنصر الزر\r\n    this.bubbleElement = this.shadowRoot.querySelector('.chat-bubble');\r\n  }\r\n\r\n  connectedCallback() {\r\n    this.bubbleElement.addEventListener('click', () => {\r\n      this.bubbleElement.classList.remove('pulse');\r\n      // تبديل حالة الفتح/الإغلاق\r\n      this.isOpen = !this.isOpen;\r\n      if (this.isOpen) {\r\n        this.bubbleElement.classList.add('open');\r\n      } else {\r\n        this.bubbleElement.classList.remove('open');\r\n      }\r\n    });\r\n  }\r\n\r\n  attributeChangedCallback(name, oldValue, newValue) {\r\n    if (name === 'position' && oldValue !== newValue) {\r\n      if (newValue === 'bottom-left') {\r\n        this.bubbleElement.style.left = '24px';\r\n        this.bubbleElement.style.right = 'auto';\r\n      } else {\r\n        this.bubbleElement.style.right = '24px';\r\n        this.bubbleElement.style.left = 'auto';\r\n      }\r\n    }\r\n  }\r\n\r\n  static get observedAttributes() {\r\n    return ['position'];\r\n  }\r\n}\r\n\r\ncustomElements.define('chat-button', ChatButton);","/**\n * marked v15.0.11 - a markdown parser\n * Copyright (c) 2011-2025, Christopher Jeffrey. (MIT Licensed)\n * https://github.com/markedjs/marked\n */\n\n/**\n * DO NOT EDIT THIS FILE\n * The code in this file is generated from files in ./src/\n */\n\n/**\n * Gets the original marked default options.\n */\nfunction _getDefaults() {\n    return {\n        async: false,\n        breaks: false,\n        extensions: null,\n        gfm: true,\n        hooks: null,\n        pedantic: false,\n        renderer: null,\n        silent: false,\n        tokenizer: null,\n        walkTokens: null,\n    };\n}\nlet _defaults = _getDefaults();\nfunction changeDefaults(newDefaults) {\n    _defaults = newDefaults;\n}\n\nconst noopTest = { exec: () => null };\nfunction edit(regex, opt = '') {\n    let source = typeof regex === 'string' ? regex : regex.source;\n    const obj = {\n        replace: (name, val) => {\n            let valSource = typeof val === 'string' ? val : val.source;\n            valSource = valSource.replace(other.caret, '$1');\n            source = source.replace(name, valSource);\n            return obj;\n        },\n        getRegex: () => {\n            return new RegExp(source, opt);\n        },\n    };\n    return obj;\n}\nconst other = {\n    codeRemoveIndent: /^(?: {1,4}| {0,3}\\t)/gm,\n    outputLinkReplace: /\\\\([\\[\\]])/g,\n    indentCodeCompensation: /^(\\s+)(?:```)/,\n    beginningSpace: /^\\s+/,\n    endingHash: /#$/,\n    startingSpaceChar: /^ /,\n    endingSpaceChar: / $/,\n    nonSpaceChar: /[^ ]/,\n    newLineCharGlobal: /\\n/g,\n    tabCharGlobal: /\\t/g,\n    multipleSpaceGlobal: /\\s+/g,\n    blankLine: /^[ \\t]*$/,\n    doubleBlankLine: /\\n[ \\t]*\\n[ \\t]*$/,\n    blockquoteStart: /^ {0,3}>/,\n    blockquoteSetextReplace: /\\n {0,3}((?:=+|-+) *)(?=\\n|$)/g,\n    blockquoteSetextReplace2: /^ {0,3}>[ \\t]?/gm,\n    listReplaceTabs: /^\\t+/,\n    listReplaceNesting: /^ {1,4}(?=( {4})*[^ ])/g,\n    listIsTask: /^\\[[ xX]\\] /,\n    listReplaceTask: /^\\[[ xX]\\] +/,\n    anyLine: /\\n.*\\n/,\n    hrefBrackets: /^<(.*)>$/,\n    tableDelimiter: /[:|]/,\n    tableAlignChars: /^\\||\\| *$/g,\n    tableRowBlankLine: /\\n[ \\t]*$/,\n    tableAlignRight: /^ *-+: *$/,\n    tableAlignCenter: /^ *:-+: *$/,\n    tableAlignLeft: /^ *:-+ *$/,\n    startATag: /^<a /i,\n    endATag: /^<\\/a>/i,\n    startPreScriptTag: /^<(pre|code|kbd|script)(\\s|>)/i,\n    endPreScriptTag: /^<\\/(pre|code|kbd|script)(\\s|>)/i,\n    startAngleBracket: /^</,\n    endAngleBracket: />$/,\n    pedanticHrefTitle: /^([^'\"]*[^\\s])\\s+(['\"])(.*)\\2/,\n    unicodeAlphaNumeric: /[\\p{L}\\p{N}]/u,\n    escapeTest: /[&<>\"']/,\n    escapeReplace: /[&<>\"']/g,\n    escapeTestNoEncode: /[<>\"']|&(?!(#\\d{1,7}|#[Xx][a-fA-F0-9]{1,6}|\\w+);)/,\n    escapeReplaceNoEncode: /[<>\"']|&(?!(#\\d{1,7}|#[Xx][a-fA-F0-9]{1,6}|\\w+);)/g,\n    unescapeTest: /&(#(?:\\d+)|(?:#x[0-9A-Fa-f]+)|(?:\\w+));?/ig,\n    caret: /(^|[^\\[])\\^/g,\n    percentDecode: /%25/g,\n    findPipe: /\\|/g,\n    splitPipe: / \\|/,\n    slashPipe: /\\\\\\|/g,\n    carriageReturn: /\\r\\n|\\r/g,\n    spaceLine: /^ +$/gm,\n    notSpaceStart: /^\\S*/,\n    endingNewline: /\\n$/,\n    listItemRegex: (bull) => new RegExp(`^( {0,3}${bull})((?:[\\t ][^\\\\n]*)?(?:\\\\n|$))`),\n    nextBulletRegex: (indent) => new RegExp(`^ {0,${Math.min(3, indent - 1)}}(?:[*+-]|\\\\d{1,9}[.)])((?:[ \\t][^\\\\n]*)?(?:\\\\n|$))`),\n    hrRegex: (indent) => new RegExp(`^ {0,${Math.min(3, indent - 1)}}((?:- *){3,}|(?:_ *){3,}|(?:\\\\* *){3,})(?:\\\\n+|$)`),\n    fencesBeginRegex: (indent) => new RegExp(`^ {0,${Math.min(3, indent - 1)}}(?:\\`\\`\\`|~~~)`),\n    headingBeginRegex: (indent) => new RegExp(`^ {0,${Math.min(3, indent - 1)}}#`),\n    htmlBeginRegex: (indent) => new RegExp(`^ {0,${Math.min(3, indent - 1)}}<(?:[a-z].*>|!--)`, 'i'),\n};\n/**\n * Block-Level Grammar\n */\nconst newline = /^(?:[ \\t]*(?:\\n|$))+/;\nconst blockCode = /^((?: {4}| {0,3}\\t)[^\\n]+(?:\\n(?:[ \\t]*(?:\\n|$))*)?)+/;\nconst fences = /^ {0,3}(`{3,}(?=[^`\\n]*(?:\\n|$))|~{3,})([^\\n]*)(?:\\n|$)(?:|([\\s\\S]*?)(?:\\n|$))(?: {0,3}\\1[~`]* *(?=\\n|$)|$)/;\nconst hr = /^ {0,3}((?:-[\\t ]*){3,}|(?:_[ \\t]*){3,}|(?:\\*[ \\t]*){3,})(?:\\n+|$)/;\nconst heading = /^ {0,3}(#{1,6})(?=\\s|$)(.*)(?:\\n+|$)/;\nconst bullet = /(?:[*+-]|\\d{1,9}[.)])/;\nconst lheadingCore = /^(?!bull |blockCode|fences|blockquote|heading|html|table)((?:.|\\n(?!\\s*?\\n|bull |blockCode|fences|blockquote|heading|html|table))+?)\\n {0,3}(=+|-+) *(?:\\n+|$)/;\nconst lheading = edit(lheadingCore)\n    .replace(/bull/g, bullet) // lists can interrupt\n    .replace(/blockCode/g, /(?: {4}| {0,3}\\t)/) // indented code blocks can interrupt\n    .replace(/fences/g, / {0,3}(?:`{3,}|~{3,})/) // fenced code blocks can interrupt\n    .replace(/blockquote/g, / {0,3}>/) // blockquote can interrupt\n    .replace(/heading/g, / {0,3}#{1,6}/) // ATX heading can interrupt\n    .replace(/html/g, / {0,3}<[^\\n>]+>\\n/) // block html can interrupt\n    .replace(/\\|table/g, '') // table not in commonmark\n    .getRegex();\nconst lheadingGfm = edit(lheadingCore)\n    .replace(/bull/g, bullet) // lists can interrupt\n    .replace(/blockCode/g, /(?: {4}| {0,3}\\t)/) // indented code blocks can interrupt\n    .replace(/fences/g, / {0,3}(?:`{3,}|~{3,})/) // fenced code blocks can interrupt\n    .replace(/blockquote/g, / {0,3}>/) // blockquote can interrupt\n    .replace(/heading/g, / {0,3}#{1,6}/) // ATX heading can interrupt\n    .replace(/html/g, / {0,3}<[^\\n>]+>\\n/) // block html can interrupt\n    .replace(/table/g, / {0,3}\\|?(?:[:\\- ]*\\|)+[\\:\\- ]*\\n/) // table can interrupt\n    .getRegex();\nconst _paragraph = /^([^\\n]+(?:\\n(?!hr|heading|lheading|blockquote|fences|list|html|table| +\\n)[^\\n]+)*)/;\nconst blockText = /^[^\\n]+/;\nconst _blockLabel = /(?!\\s*\\])(?:\\\\.|[^\\[\\]\\\\])+/;\nconst def = edit(/^ {0,3}\\[(label)\\]: *(?:\\n[ \\t]*)?([^<\\s][^\\s]*|<.*?>)(?:(?: +(?:\\n[ \\t]*)?| *\\n[ \\t]*)(title))? *(?:\\n+|$)/)\n    .replace('label', _blockLabel)\n    .replace('title', /(?:\"(?:\\\\\"?|[^\"\\\\])*\"|'[^'\\n]*(?:\\n[^'\\n]+)*\\n?'|\\([^()]*\\))/)\n    .getRegex();\nconst list = edit(/^( {0,3}bull)([ \\t][^\\n]+?)?(?:\\n|$)/)\n    .replace(/bull/g, bullet)\n    .getRegex();\nconst _tag = 'address|article|aside|base|basefont|blockquote|body|caption'\n    + '|center|col|colgroup|dd|details|dialog|dir|div|dl|dt|fieldset|figcaption'\n    + '|figure|footer|form|frame|frameset|h[1-6]|head|header|hr|html|iframe'\n    + '|legend|li|link|main|menu|menuitem|meta|nav|noframes|ol|optgroup|option'\n    + '|p|param|search|section|summary|table|tbody|td|tfoot|th|thead|title'\n    + '|tr|track|ul';\nconst _comment = /<!--(?:-?>|[\\s\\S]*?(?:-->|$))/;\nconst html = edit('^ {0,3}(?:' // optional indentation\n    + '<(script|pre|style|textarea)[\\\\s>][\\\\s\\\\S]*?(?:</\\\\1>[^\\\\n]*\\\\n+|$)' // (1)\n    + '|comment[^\\\\n]*(\\\\n+|$)' // (2)\n    + '|<\\\\?[\\\\s\\\\S]*?(?:\\\\?>\\\\n*|$)' // (3)\n    + '|<![A-Z][\\\\s\\\\S]*?(?:>\\\\n*|$)' // (4)\n    + '|<!\\\\[CDATA\\\\[[\\\\s\\\\S]*?(?:\\\\]\\\\]>\\\\n*|$)' // (5)\n    + '|</?(tag)(?: +|\\\\n|/?>)[\\\\s\\\\S]*?(?:(?:\\\\n[ \\t]*)+\\\\n|$)' // (6)\n    + '|<(?!script|pre|style|textarea)([a-z][\\\\w-]*)(?:attribute)*? */?>(?=[ \\\\t]*(?:\\\\n|$))[\\\\s\\\\S]*?(?:(?:\\\\n[ \\t]*)+\\\\n|$)' // (7) open tag\n    + '|</(?!script|pre|style|textarea)[a-z][\\\\w-]*\\\\s*>(?=[ \\\\t]*(?:\\\\n|$))[\\\\s\\\\S]*?(?:(?:\\\\n[ \\t]*)+\\\\n|$)' // (7) closing tag\n    + ')', 'i')\n    .replace('comment', _comment)\n    .replace('tag', _tag)\n    .replace('attribute', / +[a-zA-Z:_][\\w.:-]*(?: *= *\"[^\"\\n]*\"| *= *'[^'\\n]*'| *= *[^\\s\"'=<>`]+)?/)\n    .getRegex();\nconst paragraph = edit(_paragraph)\n    .replace('hr', hr)\n    .replace('heading', ' {0,3}#{1,6}(?:\\\\s|$)')\n    .replace('|lheading', '') // setext headings don't interrupt commonmark paragraphs\n    .replace('|table', '')\n    .replace('blockquote', ' {0,3}>')\n    .replace('fences', ' {0,3}(?:`{3,}(?=[^`\\\\n]*\\\\n)|~{3,})[^\\\\n]*\\\\n')\n    .replace('list', ' {0,3}(?:[*+-]|1[.)]) ') // only lists starting from 1 can interrupt\n    .replace('html', '</?(?:tag)(?: +|\\\\n|/?>)|<(?:script|pre|style|textarea|!--)')\n    .replace('tag', _tag) // pars can be interrupted by type (6) html blocks\n    .getRegex();\nconst blockquote = edit(/^( {0,3}> ?(paragraph|[^\\n]*)(?:\\n|$))+/)\n    .replace('paragraph', paragraph)\n    .getRegex();\n/**\n * Normal Block Grammar\n */\nconst blockNormal = {\n    blockquote,\n    code: blockCode,\n    def,\n    fences,\n    heading,\n    hr,\n    html,\n    lheading,\n    list,\n    newline,\n    paragraph,\n    table: noopTest,\n    text: blockText,\n};\n/**\n * GFM Block Grammar\n */\nconst gfmTable = edit('^ *([^\\\\n ].*)\\\\n' // Header\n    + ' {0,3}((?:\\\\| *)?:?-+:? *(?:\\\\| *:?-+:? *)*(?:\\\\| *)?)' // Align\n    + '(?:\\\\n((?:(?! *\\\\n|hr|heading|blockquote|code|fences|list|html).*(?:\\\\n|$))*)\\\\n*|$)') // Cells\n    .replace('hr', hr)\n    .replace('heading', ' {0,3}#{1,6}(?:\\\\s|$)')\n    .replace('blockquote', ' {0,3}>')\n    .replace('code', '(?: {4}| {0,3}\\t)[^\\\\n]')\n    .replace('fences', ' {0,3}(?:`{3,}(?=[^`\\\\n]*\\\\n)|~{3,})[^\\\\n]*\\\\n')\n    .replace('list', ' {0,3}(?:[*+-]|1[.)]) ') // only lists starting from 1 can interrupt\n    .replace('html', '</?(?:tag)(?: +|\\\\n|/?>)|<(?:script|pre|style|textarea|!--)')\n    .replace('tag', _tag) // tables can be interrupted by type (6) html blocks\n    .getRegex();\nconst blockGfm = {\n    ...blockNormal,\n    lheading: lheadingGfm,\n    table: gfmTable,\n    paragraph: edit(_paragraph)\n        .replace('hr', hr)\n        .replace('heading', ' {0,3}#{1,6}(?:\\\\s|$)')\n        .replace('|lheading', '') // setext headings don't interrupt commonmark paragraphs\n        .replace('table', gfmTable) // interrupt paragraphs with table\n        .replace('blockquote', ' {0,3}>')\n        .replace('fences', ' {0,3}(?:`{3,}(?=[^`\\\\n]*\\\\n)|~{3,})[^\\\\n]*\\\\n')\n        .replace('list', ' {0,3}(?:[*+-]|1[.)]) ') // only lists starting from 1 can interrupt\n        .replace('html', '</?(?:tag)(?: +|\\\\n|/?>)|<(?:script|pre|style|textarea|!--)')\n        .replace('tag', _tag) // pars can be interrupted by type (6) html blocks\n        .getRegex(),\n};\n/**\n * Pedantic grammar (original John Gruber's loose markdown specification)\n */\nconst blockPedantic = {\n    ...blockNormal,\n    html: edit('^ *(?:comment *(?:\\\\n|\\\\s*$)'\n        + '|<(tag)[\\\\s\\\\S]+?</\\\\1> *(?:\\\\n{2,}|\\\\s*$)' // closed tag\n        + '|<tag(?:\"[^\"]*\"|\\'[^\\']*\\'|\\\\s[^\\'\"/>\\\\s]*)*?/?> *(?:\\\\n{2,}|\\\\s*$))')\n        .replace('comment', _comment)\n        .replace(/tag/g, '(?!(?:'\n        + 'a|em|strong|small|s|cite|q|dfn|abbr|data|time|code|var|samp|kbd|sub'\n        + '|sup|i|b|u|mark|ruby|rt|rp|bdi|bdo|span|br|wbr|ins|del|img)'\n        + '\\\\b)\\\\w+(?!:|[^\\\\w\\\\s@]*@)\\\\b')\n        .getRegex(),\n    def: /^ *\\[([^\\]]+)\\]: *<?([^\\s>]+)>?(?: +([\"(][^\\n]+[\")]))? *(?:\\n+|$)/,\n    heading: /^(#{1,6})(.*)(?:\\n+|$)/,\n    fences: noopTest, // fences not supported\n    lheading: /^(.+?)\\n {0,3}(=+|-+) *(?:\\n+|$)/,\n    paragraph: edit(_paragraph)\n        .replace('hr', hr)\n        .replace('heading', ' *#{1,6} *[^\\n]')\n        .replace('lheading', lheading)\n        .replace('|table', '')\n        .replace('blockquote', ' {0,3}>')\n        .replace('|fences', '')\n        .replace('|list', '')\n        .replace('|html', '')\n        .replace('|tag', '')\n        .getRegex(),\n};\n/**\n * Inline-Level Grammar\n */\nconst escape$1 = /^\\\\([!\"#$%&'()*+,\\-./:;<=>?@\\[\\]\\\\^_`{|}~])/;\nconst inlineCode = /^(`+)([^`]|[^`][\\s\\S]*?[^`])\\1(?!`)/;\nconst br = /^( {2,}|\\\\)\\n(?!\\s*$)/;\nconst inlineText = /^(`+|[^`])(?:(?= {2,}\\n)|[\\s\\S]*?(?:(?=[\\\\<!\\[`*_]|\\b_|$)|[^ ](?= {2,}\\n)))/;\n// list of unicode punctuation marks, plus any missing characters from CommonMark spec\nconst _punctuation = /[\\p{P}\\p{S}]/u;\nconst _punctuationOrSpace = /[\\s\\p{P}\\p{S}]/u;\nconst _notPunctuationOrSpace = /[^\\s\\p{P}\\p{S}]/u;\nconst punctuation = edit(/^((?![*_])punctSpace)/, 'u')\n    .replace(/punctSpace/g, _punctuationOrSpace).getRegex();\n// GFM allows ~ inside strong and em for strikethrough\nconst _punctuationGfmStrongEm = /(?!~)[\\p{P}\\p{S}]/u;\nconst _punctuationOrSpaceGfmStrongEm = /(?!~)[\\s\\p{P}\\p{S}]/u;\nconst _notPunctuationOrSpaceGfmStrongEm = /(?:[^\\s\\p{P}\\p{S}]|~)/u;\n// sequences em should skip over [title](link), `code`, <html>\nconst blockSkip = /\\[[^[\\]]*?\\]\\((?:\\\\.|[^\\\\\\(\\)]|\\((?:\\\\.|[^\\\\\\(\\)])*\\))*\\)|`[^`]*?`|<[^<>]*?>/g;\nconst emStrongLDelimCore = /^(?:\\*+(?:((?!\\*)punct)|[^\\s*]))|^_+(?:((?!_)punct)|([^\\s_]))/;\nconst emStrongLDelim = edit(emStrongLDelimCore, 'u')\n    .replace(/punct/g, _punctuation)\n    .getRegex();\nconst emStrongLDelimGfm = edit(emStrongLDelimCore, 'u')\n    .replace(/punct/g, _punctuationGfmStrongEm)\n    .getRegex();\nconst emStrongRDelimAstCore = '^[^_*]*?__[^_*]*?\\\\*[^_*]*?(?=__)' // Skip orphan inside strong\n    + '|[^*]+(?=[^*])' // Consume to delim\n    + '|(?!\\\\*)punct(\\\\*+)(?=[\\\\s]|$)' // (1) #*** can only be a Right Delimiter\n    + '|notPunctSpace(\\\\*+)(?!\\\\*)(?=punctSpace|$)' // (2) a***#, a*** can only be a Right Delimiter\n    + '|(?!\\\\*)punctSpace(\\\\*+)(?=notPunctSpace)' // (3) #***a, ***a can only be Left Delimiter\n    + '|[\\\\s](\\\\*+)(?!\\\\*)(?=punct)' // (4) ***# can only be Left Delimiter\n    + '|(?!\\\\*)punct(\\\\*+)(?!\\\\*)(?=punct)' // (5) #***# can be either Left or Right Delimiter\n    + '|notPunctSpace(\\\\*+)(?=notPunctSpace)'; // (6) a***a can be either Left or Right Delimiter\nconst emStrongRDelimAst = edit(emStrongRDelimAstCore, 'gu')\n    .replace(/notPunctSpace/g, _notPunctuationOrSpace)\n    .replace(/punctSpace/g, _punctuationOrSpace)\n    .replace(/punct/g, _punctuation)\n    .getRegex();\nconst emStrongRDelimAstGfm = edit(emStrongRDelimAstCore, 'gu')\n    .replace(/notPunctSpace/g, _notPunctuationOrSpaceGfmStrongEm)\n    .replace(/punctSpace/g, _punctuationOrSpaceGfmStrongEm)\n    .replace(/punct/g, _punctuationGfmStrongEm)\n    .getRegex();\n// (6) Not allowed for _\nconst emStrongRDelimUnd = edit('^[^_*]*?\\\\*\\\\*[^_*]*?_[^_*]*?(?=\\\\*\\\\*)' // Skip orphan inside strong\n    + '|[^_]+(?=[^_])' // Consume to delim\n    + '|(?!_)punct(_+)(?=[\\\\s]|$)' // (1) #___ can only be a Right Delimiter\n    + '|notPunctSpace(_+)(?!_)(?=punctSpace|$)' // (2) a___#, a___ can only be a Right Delimiter\n    + '|(?!_)punctSpace(_+)(?=notPunctSpace)' // (3) #___a, ___a can only be Left Delimiter\n    + '|[\\\\s](_+)(?!_)(?=punct)' // (4) ___# can only be Left Delimiter\n    + '|(?!_)punct(_+)(?!_)(?=punct)', 'gu') // (5) #___# can be either Left or Right Delimiter\n    .replace(/notPunctSpace/g, _notPunctuationOrSpace)\n    .replace(/punctSpace/g, _punctuationOrSpace)\n    .replace(/punct/g, _punctuation)\n    .getRegex();\nconst anyPunctuation = edit(/\\\\(punct)/, 'gu')\n    .replace(/punct/g, _punctuation)\n    .getRegex();\nconst autolink = edit(/^<(scheme:[^\\s\\x00-\\x1f<>]*|email)>/)\n    .replace('scheme', /[a-zA-Z][a-zA-Z0-9+.-]{1,31}/)\n    .replace('email', /[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+(@)[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)+(?![-_])/)\n    .getRegex();\nconst _inlineComment = edit(_comment).replace('(?:-->|$)', '-->').getRegex();\nconst tag = edit('^comment'\n    + '|^</[a-zA-Z][\\\\w:-]*\\\\s*>' // self-closing tag\n    + '|^<[a-zA-Z][\\\\w-]*(?:attribute)*?\\\\s*/?>' // open tag\n    + '|^<\\\\?[\\\\s\\\\S]*?\\\\?>' // processing instruction, e.g. <?php ?>\n    + '|^<![a-zA-Z]+\\\\s[\\\\s\\\\S]*?>' // declaration, e.g. <!DOCTYPE html>\n    + '|^<!\\\\[CDATA\\\\[[\\\\s\\\\S]*?\\\\]\\\\]>') // CDATA section\n    .replace('comment', _inlineComment)\n    .replace('attribute', /\\s+[a-zA-Z:_][\\w.:-]*(?:\\s*=\\s*\"[^\"]*\"|\\s*=\\s*'[^']*'|\\s*=\\s*[^\\s\"'=<>`]+)?/)\n    .getRegex();\nconst _inlineLabel = /(?:\\[(?:\\\\.|[^\\[\\]\\\\])*\\]|\\\\.|`[^`]*`|[^\\[\\]\\\\`])*?/;\nconst link = edit(/^!?\\[(label)\\]\\(\\s*(href)(?:(?:[ \\t]*(?:\\n[ \\t]*)?)(title))?\\s*\\)/)\n    .replace('label', _inlineLabel)\n    .replace('href', /<(?:\\\\.|[^\\n<>\\\\])+>|[^ \\t\\n\\x00-\\x1f]*/)\n    .replace('title', /\"(?:\\\\\"?|[^\"\\\\])*\"|'(?:\\\\'?|[^'\\\\])*'|\\((?:\\\\\\)?|[^)\\\\])*\\)/)\n    .getRegex();\nconst reflink = edit(/^!?\\[(label)\\]\\[(ref)\\]/)\n    .replace('label', _inlineLabel)\n    .replace('ref', _blockLabel)\n    .getRegex();\nconst nolink = edit(/^!?\\[(ref)\\](?:\\[\\])?/)\n    .replace('ref', _blockLabel)\n    .getRegex();\nconst reflinkSearch = edit('reflink|nolink(?!\\\\()', 'g')\n    .replace('reflink', reflink)\n    .replace('nolink', nolink)\n    .getRegex();\n/**\n * Normal Inline Grammar\n */\nconst inlineNormal = {\n    _backpedal: noopTest, // only used for GFM url\n    anyPunctuation,\n    autolink,\n    blockSkip,\n    br,\n    code: inlineCode,\n    del: noopTest,\n    emStrongLDelim,\n    emStrongRDelimAst,\n    emStrongRDelimUnd,\n    escape: escape$1,\n    link,\n    nolink,\n    punctuation,\n    reflink,\n    reflinkSearch,\n    tag,\n    text: inlineText,\n    url: noopTest,\n};\n/**\n * Pedantic Inline Grammar\n */\nconst inlinePedantic = {\n    ...inlineNormal,\n    link: edit(/^!?\\[(label)\\]\\((.*?)\\)/)\n        .replace('label', _inlineLabel)\n        .getRegex(),\n    reflink: edit(/^!?\\[(label)\\]\\s*\\[([^\\]]*)\\]/)\n        .replace('label', _inlineLabel)\n        .getRegex(),\n};\n/**\n * GFM Inline Grammar\n */\nconst inlineGfm = {\n    ...inlineNormal,\n    emStrongRDelimAst: emStrongRDelimAstGfm,\n    emStrongLDelim: emStrongLDelimGfm,\n    url: edit(/^((?:ftp|https?):\\/\\/|www\\.)(?:[a-zA-Z0-9\\-]+\\.?)+[^\\s<]*|^email/, 'i')\n        .replace('email', /[A-Za-z0-9._+-]+(@)[a-zA-Z0-9-_]+(?:\\.[a-zA-Z0-9-_]*[a-zA-Z0-9])+(?![-_])/)\n        .getRegex(),\n    _backpedal: /(?:[^?!.,:;*_'\"~()&]+|\\([^)]*\\)|&(?![a-zA-Z0-9]+;$)|[?!.,:;*_'\"~)]+(?!$))+/,\n    del: /^(~~?)(?=[^\\s~])((?:\\\\.|[^\\\\])*?(?:\\\\.|[^\\s~\\\\]))\\1(?=[^~]|$)/,\n    text: /^([`~]+|[^`~])(?:(?= {2,}\\n)|(?=[a-zA-Z0-9.!#$%&'*+\\/=?_`{\\|}~-]+@)|[\\s\\S]*?(?:(?=[\\\\<!\\[`*~_]|\\b_|https?:\\/\\/|ftp:\\/\\/|www\\.|$)|[^ ](?= {2,}\\n)|[^a-zA-Z0-9.!#$%&'*+\\/=?_`{\\|}~-](?=[a-zA-Z0-9.!#$%&'*+\\/=?_`{\\|}~-]+@)))/,\n};\n/**\n * GFM + Line Breaks Inline Grammar\n */\nconst inlineBreaks = {\n    ...inlineGfm,\n    br: edit(br).replace('{2,}', '*').getRegex(),\n    text: edit(inlineGfm.text)\n        .replace('\\\\b_', '\\\\b_| {2,}\\\\n')\n        .replace(/\\{2,\\}/g, '*')\n        .getRegex(),\n};\n/**\n * exports\n */\nconst block = {\n    normal: blockNormal,\n    gfm: blockGfm,\n    pedantic: blockPedantic,\n};\nconst inline = {\n    normal: inlineNormal,\n    gfm: inlineGfm,\n    breaks: inlineBreaks,\n    pedantic: inlinePedantic,\n};\n\n/**\n * Helpers\n */\nconst escapeReplacements = {\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;',\n    '\"': '&quot;',\n    \"'\": '&#39;',\n};\nconst getEscapeReplacement = (ch) => escapeReplacements[ch];\nfunction escape(html, encode) {\n    if (encode) {\n        if (other.escapeTest.test(html)) {\n            return html.replace(other.escapeReplace, getEscapeReplacement);\n        }\n    }\n    else {\n        if (other.escapeTestNoEncode.test(html)) {\n            return html.replace(other.escapeReplaceNoEncode, getEscapeReplacement);\n        }\n    }\n    return html;\n}\nfunction cleanUrl(href) {\n    try {\n        href = encodeURI(href).replace(other.percentDecode, '%');\n    }\n    catch {\n        return null;\n    }\n    return href;\n}\nfunction splitCells(tableRow, count) {\n    // ensure that every cell-delimiting pipe has a space\n    // before it to distinguish it from an escaped pipe\n    const row = tableRow.replace(other.findPipe, (match, offset, str) => {\n        let escaped = false;\n        let curr = offset;\n        while (--curr >= 0 && str[curr] === '\\\\')\n            escaped = !escaped;\n        if (escaped) {\n            // odd number of slashes means | is escaped\n            // so we leave it alone\n            return '|';\n        }\n        else {\n            // add space before unescaped |\n            return ' |';\n        }\n    }), cells = row.split(other.splitPipe);\n    let i = 0;\n    // First/last cell in a row cannot be empty if it has no leading/trailing pipe\n    if (!cells[0].trim()) {\n        cells.shift();\n    }\n    if (cells.length > 0 && !cells.at(-1)?.trim()) {\n        cells.pop();\n    }\n    if (count) {\n        if (cells.length > count) {\n            cells.splice(count);\n        }\n        else {\n            while (cells.length < count)\n                cells.push('');\n        }\n    }\n    for (; i < cells.length; i++) {\n        // leading or trailing whitespace is ignored per the gfm spec\n        cells[i] = cells[i].trim().replace(other.slashPipe, '|');\n    }\n    return cells;\n}\n/**\n * Remove trailing 'c's. Equivalent to str.replace(/c*$/, '').\n * /c*$/ is vulnerable to REDOS.\n *\n * @param str\n * @param c\n * @param invert Remove suffix of non-c chars instead. Default falsey.\n */\nfunction rtrim(str, c, invert) {\n    const l = str.length;\n    if (l === 0) {\n        return '';\n    }\n    // Length of suffix matching the invert condition.\n    let suffLen = 0;\n    // Step left until we fail to match the invert condition.\n    while (suffLen < l) {\n        const currChar = str.charAt(l - suffLen - 1);\n        if (currChar === c && true) {\n            suffLen++;\n        }\n        else {\n            break;\n        }\n    }\n    return str.slice(0, l - suffLen);\n}\nfunction findClosingBracket(str, b) {\n    if (str.indexOf(b[1]) === -1) {\n        return -1;\n    }\n    let level = 0;\n    for (let i = 0; i < str.length; i++) {\n        if (str[i] === '\\\\') {\n            i++;\n        }\n        else if (str[i] === b[0]) {\n            level++;\n        }\n        else if (str[i] === b[1]) {\n            level--;\n            if (level < 0) {\n                return i;\n            }\n        }\n    }\n    if (level > 0) {\n        return -2;\n    }\n    return -1;\n}\n\nfunction outputLink(cap, link, raw, lexer, rules) {\n    const href = link.href;\n    const title = link.title || null;\n    const text = cap[1].replace(rules.other.outputLinkReplace, '$1');\n    lexer.state.inLink = true;\n    const token = {\n        type: cap[0].charAt(0) === '!' ? 'image' : 'link',\n        raw,\n        href,\n        title,\n        text,\n        tokens: lexer.inlineTokens(text),\n    };\n    lexer.state.inLink = false;\n    return token;\n}\nfunction indentCodeCompensation(raw, text, rules) {\n    const matchIndentToCode = raw.match(rules.other.indentCodeCompensation);\n    if (matchIndentToCode === null) {\n        return text;\n    }\n    const indentToCode = matchIndentToCode[1];\n    return text\n        .split('\\n')\n        .map(node => {\n        const matchIndentInNode = node.match(rules.other.beginningSpace);\n        if (matchIndentInNode === null) {\n            return node;\n        }\n        const [indentInNode] = matchIndentInNode;\n        if (indentInNode.length >= indentToCode.length) {\n            return node.slice(indentToCode.length);\n        }\n        return node;\n    })\n        .join('\\n');\n}\n/**\n * Tokenizer\n */\nclass _Tokenizer {\n    options;\n    rules; // set by the lexer\n    lexer; // set by the lexer\n    constructor(options) {\n        this.options = options || _defaults;\n    }\n    space(src) {\n        const cap = this.rules.block.newline.exec(src);\n        if (cap && cap[0].length > 0) {\n            return {\n                type: 'space',\n                raw: cap[0],\n            };\n        }\n    }\n    code(src) {\n        const cap = this.rules.block.code.exec(src);\n        if (cap) {\n            const text = cap[0].replace(this.rules.other.codeRemoveIndent, '');\n            return {\n                type: 'code',\n                raw: cap[0],\n                codeBlockStyle: 'indented',\n                text: !this.options.pedantic\n                    ? rtrim(text, '\\n')\n                    : text,\n            };\n        }\n    }\n    fences(src) {\n        const cap = this.rules.block.fences.exec(src);\n        if (cap) {\n            const raw = cap[0];\n            const text = indentCodeCompensation(raw, cap[3] || '', this.rules);\n            return {\n                type: 'code',\n                raw,\n                lang: cap[2] ? cap[2].trim().replace(this.rules.inline.anyPunctuation, '$1') : cap[2],\n                text,\n            };\n        }\n    }\n    heading(src) {\n        const cap = this.rules.block.heading.exec(src);\n        if (cap) {\n            let text = cap[2].trim();\n            // remove trailing #s\n            if (this.rules.other.endingHash.test(text)) {\n                const trimmed = rtrim(text, '#');\n                if (this.options.pedantic) {\n                    text = trimmed.trim();\n                }\n                else if (!trimmed || this.rules.other.endingSpaceChar.test(trimmed)) {\n                    // CommonMark requires space before trailing #s\n                    text = trimmed.trim();\n                }\n            }\n            return {\n                type: 'heading',\n                raw: cap[0],\n                depth: cap[1].length,\n                text,\n                tokens: this.lexer.inline(text),\n            };\n        }\n    }\n    hr(src) {\n        const cap = this.rules.block.hr.exec(src);\n        if (cap) {\n            return {\n                type: 'hr',\n                raw: rtrim(cap[0], '\\n'),\n            };\n        }\n    }\n    blockquote(src) {\n        const cap = this.rules.block.blockquote.exec(src);\n        if (cap) {\n            let lines = rtrim(cap[0], '\\n').split('\\n');\n            let raw = '';\n            let text = '';\n            const tokens = [];\n            while (lines.length > 0) {\n                let inBlockquote = false;\n                const currentLines = [];\n                let i;\n                for (i = 0; i < lines.length; i++) {\n                    // get lines up to a continuation\n                    if (this.rules.other.blockquoteStart.test(lines[i])) {\n                        currentLines.push(lines[i]);\n                        inBlockquote = true;\n                    }\n                    else if (!inBlockquote) {\n                        currentLines.push(lines[i]);\n                    }\n                    else {\n                        break;\n                    }\n                }\n                lines = lines.slice(i);\n                const currentRaw = currentLines.join('\\n');\n                const currentText = currentRaw\n                    // precede setext continuation with 4 spaces so it isn't a setext\n                    .replace(this.rules.other.blockquoteSetextReplace, '\\n    $1')\n                    .replace(this.rules.other.blockquoteSetextReplace2, '');\n                raw = raw ? `${raw}\\n${currentRaw}` : currentRaw;\n                text = text ? `${text}\\n${currentText}` : currentText;\n                // parse blockquote lines as top level tokens\n                // merge paragraphs if this is a continuation\n                const top = this.lexer.state.top;\n                this.lexer.state.top = true;\n                this.lexer.blockTokens(currentText, tokens, true);\n                this.lexer.state.top = top;\n                // if there is no continuation then we are done\n                if (lines.length === 0) {\n                    break;\n                }\n                const lastToken = tokens.at(-1);\n                if (lastToken?.type === 'code') {\n                    // blockquote continuation cannot be preceded by a code block\n                    break;\n                }\n                else if (lastToken?.type === 'blockquote') {\n                    // include continuation in nested blockquote\n                    const oldToken = lastToken;\n                    const newText = oldToken.raw + '\\n' + lines.join('\\n');\n                    const newToken = this.blockquote(newText);\n                    tokens[tokens.length - 1] = newToken;\n                    raw = raw.substring(0, raw.length - oldToken.raw.length) + newToken.raw;\n                    text = text.substring(0, text.length - oldToken.text.length) + newToken.text;\n                    break;\n                }\n                else if (lastToken?.type === 'list') {\n                    // include continuation in nested list\n                    const oldToken = lastToken;\n                    const newText = oldToken.raw + '\\n' + lines.join('\\n');\n                    const newToken = this.list(newText);\n                    tokens[tokens.length - 1] = newToken;\n                    raw = raw.substring(0, raw.length - lastToken.raw.length) + newToken.raw;\n                    text = text.substring(0, text.length - oldToken.raw.length) + newToken.raw;\n                    lines = newText.substring(tokens.at(-1).raw.length).split('\\n');\n                    continue;\n                }\n            }\n            return {\n                type: 'blockquote',\n                raw,\n                tokens,\n                text,\n            };\n        }\n    }\n    list(src) {\n        let cap = this.rules.block.list.exec(src);\n        if (cap) {\n            let bull = cap[1].trim();\n            const isordered = bull.length > 1;\n            const list = {\n                type: 'list',\n                raw: '',\n                ordered: isordered,\n                start: isordered ? +bull.slice(0, -1) : '',\n                loose: false,\n                items: [],\n            };\n            bull = isordered ? `\\\\d{1,9}\\\\${bull.slice(-1)}` : `\\\\${bull}`;\n            if (this.options.pedantic) {\n                bull = isordered ? bull : '[*+-]';\n            }\n            // Get next list item\n            const itemRegex = this.rules.other.listItemRegex(bull);\n            let endsWithBlankLine = false;\n            // Check if current bullet point can start a new List Item\n            while (src) {\n                let endEarly = false;\n                let raw = '';\n                let itemContents = '';\n                if (!(cap = itemRegex.exec(src))) {\n                    break;\n                }\n                if (this.rules.block.hr.test(src)) { // End list if bullet was actually HR (possibly move into itemRegex?)\n                    break;\n                }\n                raw = cap[0];\n                src = src.substring(raw.length);\n                let line = cap[2].split('\\n', 1)[0].replace(this.rules.other.listReplaceTabs, (t) => ' '.repeat(3 * t.length));\n                let nextLine = src.split('\\n', 1)[0];\n                let blankLine = !line.trim();\n                let indent = 0;\n                if (this.options.pedantic) {\n                    indent = 2;\n                    itemContents = line.trimStart();\n                }\n                else if (blankLine) {\n                    indent = cap[1].length + 1;\n                }\n                else {\n                    indent = cap[2].search(this.rules.other.nonSpaceChar); // Find first non-space char\n                    indent = indent > 4 ? 1 : indent; // Treat indented code blocks (> 4 spaces) as having only 1 indent\n                    itemContents = line.slice(indent);\n                    indent += cap[1].length;\n                }\n                if (blankLine && this.rules.other.blankLine.test(nextLine)) { // Items begin with at most one blank line\n                    raw += nextLine + '\\n';\n                    src = src.substring(nextLine.length + 1);\n                    endEarly = true;\n                }\n                if (!endEarly) {\n                    const nextBulletRegex = this.rules.other.nextBulletRegex(indent);\n                    const hrRegex = this.rules.other.hrRegex(indent);\n                    const fencesBeginRegex = this.rules.other.fencesBeginRegex(indent);\n                    const headingBeginRegex = this.rules.other.headingBeginRegex(indent);\n                    const htmlBeginRegex = this.rules.other.htmlBeginRegex(indent);\n                    // Check if following lines should be included in List Item\n                    while (src) {\n                        const rawLine = src.split('\\n', 1)[0];\n                        let nextLineWithoutTabs;\n                        nextLine = rawLine;\n                        // Re-align to follow commonmark nesting rules\n                        if (this.options.pedantic) {\n                            nextLine = nextLine.replace(this.rules.other.listReplaceNesting, '  ');\n                            nextLineWithoutTabs = nextLine;\n                        }\n                        else {\n                            nextLineWithoutTabs = nextLine.replace(this.rules.other.tabCharGlobal, '    ');\n                        }\n                        // End list item if found code fences\n                        if (fencesBeginRegex.test(nextLine)) {\n                            break;\n                        }\n                        // End list item if found start of new heading\n                        if (headingBeginRegex.test(nextLine)) {\n                            break;\n                        }\n                        // End list item if found start of html block\n                        if (htmlBeginRegex.test(nextLine)) {\n                            break;\n                        }\n                        // End list item if found start of new bullet\n                        if (nextBulletRegex.test(nextLine)) {\n                            break;\n                        }\n                        // Horizontal rule found\n                        if (hrRegex.test(nextLine)) {\n                            break;\n                        }\n                        if (nextLineWithoutTabs.search(this.rules.other.nonSpaceChar) >= indent || !nextLine.trim()) { // Dedent if possible\n                            itemContents += '\\n' + nextLineWithoutTabs.slice(indent);\n                        }\n                        else {\n                            // not enough indentation\n                            if (blankLine) {\n                                break;\n                            }\n                            // paragraph continuation unless last line was a different block level element\n                            if (line.replace(this.rules.other.tabCharGlobal, '    ').search(this.rules.other.nonSpaceChar) >= 4) { // indented code block\n                                break;\n                            }\n                            if (fencesBeginRegex.test(line)) {\n                                break;\n                            }\n                            if (headingBeginRegex.test(line)) {\n                                break;\n                            }\n                            if (hrRegex.test(line)) {\n                                break;\n                            }\n                            itemContents += '\\n' + nextLine;\n                        }\n                        if (!blankLine && !nextLine.trim()) { // Check if current line is blank\n                            blankLine = true;\n                        }\n                        raw += rawLine + '\\n';\n                        src = src.substring(rawLine.length + 1);\n                        line = nextLineWithoutTabs.slice(indent);\n                    }\n                }\n                if (!list.loose) {\n                    // If the previous item ended with a blank line, the list is loose\n                    if (endsWithBlankLine) {\n                        list.loose = true;\n                    }\n                    else if (this.rules.other.doubleBlankLine.test(raw)) {\n                        endsWithBlankLine = true;\n                    }\n                }\n                let istask = null;\n                let ischecked;\n                // Check for task list items\n                if (this.options.gfm) {\n                    istask = this.rules.other.listIsTask.exec(itemContents);\n                    if (istask) {\n                        ischecked = istask[0] !== '[ ] ';\n                        itemContents = itemContents.replace(this.rules.other.listReplaceTask, '');\n                    }\n                }\n                list.items.push({\n                    type: 'list_item',\n                    raw,\n                    task: !!istask,\n                    checked: ischecked,\n                    loose: false,\n                    text: itemContents,\n                    tokens: [],\n                });\n                list.raw += raw;\n            }\n            // Do not consume newlines at end of final item. Alternatively, make itemRegex *start* with any newlines to simplify/speed up endsWithBlankLine logic\n            const lastItem = list.items.at(-1);\n            if (lastItem) {\n                lastItem.raw = lastItem.raw.trimEnd();\n                lastItem.text = lastItem.text.trimEnd();\n            }\n            else {\n                // not a list since there were no items\n                return;\n            }\n            list.raw = list.raw.trimEnd();\n            // Item child tokens handled here at end because we needed to have the final item to trim it first\n            for (let i = 0; i < list.items.length; i++) {\n                this.lexer.state.top = false;\n                list.items[i].tokens = this.lexer.blockTokens(list.items[i].text, []);\n                if (!list.loose) {\n                    // Check if list should be loose\n                    const spacers = list.items[i].tokens.filter(t => t.type === 'space');\n                    const hasMultipleLineBreaks = spacers.length > 0 && spacers.some(t => this.rules.other.anyLine.test(t.raw));\n                    list.loose = hasMultipleLineBreaks;\n                }\n            }\n            // Set all items to loose if list is loose\n            if (list.loose) {\n                for (let i = 0; i < list.items.length; i++) {\n                    list.items[i].loose = true;\n                }\n            }\n            return list;\n        }\n    }\n    html(src) {\n        const cap = this.rules.block.html.exec(src);\n        if (cap) {\n            const token = {\n                type: 'html',\n                block: true,\n                raw: cap[0],\n                pre: cap[1] === 'pre' || cap[1] === 'script' || cap[1] === 'style',\n                text: cap[0],\n            };\n            return token;\n        }\n    }\n    def(src) {\n        const cap = this.rules.block.def.exec(src);\n        if (cap) {\n            const tag = cap[1].toLowerCase().replace(this.rules.other.multipleSpaceGlobal, ' ');\n            const href = cap[2] ? cap[2].replace(this.rules.other.hrefBrackets, '$1').replace(this.rules.inline.anyPunctuation, '$1') : '';\n            const title = cap[3] ? cap[3].substring(1, cap[3].length - 1).replace(this.rules.inline.anyPunctuation, '$1') : cap[3];\n            return {\n                type: 'def',\n                tag,\n                raw: cap[0],\n                href,\n                title,\n            };\n        }\n    }\n    table(src) {\n        const cap = this.rules.block.table.exec(src);\n        if (!cap) {\n            return;\n        }\n        if (!this.rules.other.tableDelimiter.test(cap[2])) {\n            // delimiter row must have a pipe (|) or colon (:) otherwise it is a setext heading\n            return;\n        }\n        const headers = splitCells(cap[1]);\n        const aligns = cap[2].replace(this.rules.other.tableAlignChars, '').split('|');\n        const rows = cap[3]?.trim() ? cap[3].replace(this.rules.other.tableRowBlankLine, '').split('\\n') : [];\n        const item = {\n            type: 'table',\n            raw: cap[0],\n            header: [],\n            align: [],\n            rows: [],\n        };\n        if (headers.length !== aligns.length) {\n            // header and align columns must be equal, rows can be different.\n            return;\n        }\n        for (const align of aligns) {\n            if (this.rules.other.tableAlignRight.test(align)) {\n                item.align.push('right');\n            }\n            else if (this.rules.other.tableAlignCenter.test(align)) {\n                item.align.push('center');\n            }\n            else if (this.rules.other.tableAlignLeft.test(align)) {\n                item.align.push('left');\n            }\n            else {\n                item.align.push(null);\n            }\n        }\n        for (let i = 0; i < headers.length; i++) {\n            item.header.push({\n                text: headers[i],\n                tokens: this.lexer.inline(headers[i]),\n                header: true,\n                align: item.align[i],\n            });\n        }\n        for (const row of rows) {\n            item.rows.push(splitCells(row, item.header.length).map((cell, i) => {\n                return {\n                    text: cell,\n                    tokens: this.lexer.inline(cell),\n                    header: false,\n                    align: item.align[i],\n                };\n            }));\n        }\n        return item;\n    }\n    lheading(src) {\n        const cap = this.rules.block.lheading.exec(src);\n        if (cap) {\n            return {\n                type: 'heading',\n                raw: cap[0],\n                depth: cap[2].charAt(0) === '=' ? 1 : 2,\n                text: cap[1],\n                tokens: this.lexer.inline(cap[1]),\n            };\n        }\n    }\n    paragraph(src) {\n        const cap = this.rules.block.paragraph.exec(src);\n        if (cap) {\n            const text = cap[1].charAt(cap[1].length - 1) === '\\n'\n                ? cap[1].slice(0, -1)\n                : cap[1];\n            return {\n                type: 'paragraph',\n                raw: cap[0],\n                text,\n                tokens: this.lexer.inline(text),\n            };\n        }\n    }\n    text(src) {\n        const cap = this.rules.block.text.exec(src);\n        if (cap) {\n            return {\n                type: 'text',\n                raw: cap[0],\n                text: cap[0],\n                tokens: this.lexer.inline(cap[0]),\n            };\n        }\n    }\n    escape(src) {\n        const cap = this.rules.inline.escape.exec(src);\n        if (cap) {\n            return {\n                type: 'escape',\n                raw: cap[0],\n                text: cap[1],\n            };\n        }\n    }\n    tag(src) {\n        const cap = this.rules.inline.tag.exec(src);\n        if (cap) {\n            if (!this.lexer.state.inLink && this.rules.other.startATag.test(cap[0])) {\n                this.lexer.state.inLink = true;\n            }\n            else if (this.lexer.state.inLink && this.rules.other.endATag.test(cap[0])) {\n                this.lexer.state.inLink = false;\n            }\n            if (!this.lexer.state.inRawBlock && this.rules.other.startPreScriptTag.test(cap[0])) {\n                this.lexer.state.inRawBlock = true;\n            }\n            else if (this.lexer.state.inRawBlock && this.rules.other.endPreScriptTag.test(cap[0])) {\n                this.lexer.state.inRawBlock = false;\n            }\n            return {\n                type: 'html',\n                raw: cap[0],\n                inLink: this.lexer.state.inLink,\n                inRawBlock: this.lexer.state.inRawBlock,\n                block: false,\n                text: cap[0],\n            };\n        }\n    }\n    link(src) {\n        const cap = this.rules.inline.link.exec(src);\n        if (cap) {\n            const trimmedUrl = cap[2].trim();\n            if (!this.options.pedantic && this.rules.other.startAngleBracket.test(trimmedUrl)) {\n                // commonmark requires matching angle brackets\n                if (!(this.rules.other.endAngleBracket.test(trimmedUrl))) {\n                    return;\n                }\n                // ending angle bracket cannot be escaped\n                const rtrimSlash = rtrim(trimmedUrl.slice(0, -1), '\\\\');\n                if ((trimmedUrl.length - rtrimSlash.length) % 2 === 0) {\n                    return;\n                }\n            }\n            else {\n                // find closing parenthesis\n                const lastParenIndex = findClosingBracket(cap[2], '()');\n                if (lastParenIndex === -2) {\n                    // more open parens than closed\n                    return;\n                }\n                if (lastParenIndex > -1) {\n                    const start = cap[0].indexOf('!') === 0 ? 5 : 4;\n                    const linkLen = start + cap[1].length + lastParenIndex;\n                    cap[2] = cap[2].substring(0, lastParenIndex);\n                    cap[0] = cap[0].substring(0, linkLen).trim();\n                    cap[3] = '';\n                }\n            }\n            let href = cap[2];\n            let title = '';\n            if (this.options.pedantic) {\n                // split pedantic href and title\n                const link = this.rules.other.pedanticHrefTitle.exec(href);\n                if (link) {\n                    href = link[1];\n                    title = link[3];\n                }\n            }\n            else {\n                title = cap[3] ? cap[3].slice(1, -1) : '';\n            }\n            href = href.trim();\n            if (this.rules.other.startAngleBracket.test(href)) {\n                if (this.options.pedantic && !(this.rules.other.endAngleBracket.test(trimmedUrl))) {\n                    // pedantic allows starting angle bracket without ending angle bracket\n                    href = href.slice(1);\n                }\n                else {\n                    href = href.slice(1, -1);\n                }\n            }\n            return outputLink(cap, {\n                href: href ? href.replace(this.rules.inline.anyPunctuation, '$1') : href,\n                title: title ? title.replace(this.rules.inline.anyPunctuation, '$1') : title,\n            }, cap[0], this.lexer, this.rules);\n        }\n    }\n    reflink(src, links) {\n        let cap;\n        if ((cap = this.rules.inline.reflink.exec(src))\n            || (cap = this.rules.inline.nolink.exec(src))) {\n            const linkString = (cap[2] || cap[1]).replace(this.rules.other.multipleSpaceGlobal, ' ');\n            const link = links[linkString.toLowerCase()];\n            if (!link) {\n                const text = cap[0].charAt(0);\n                return {\n                    type: 'text',\n                    raw: text,\n                    text,\n                };\n            }\n            return outputLink(cap, link, cap[0], this.lexer, this.rules);\n        }\n    }\n    emStrong(src, maskedSrc, prevChar = '') {\n        let match = this.rules.inline.emStrongLDelim.exec(src);\n        if (!match)\n            return;\n        // _ can't be between two alphanumerics. \\p{L}\\p{N} includes non-english alphabet/numbers as well\n        if (match[3] && prevChar.match(this.rules.other.unicodeAlphaNumeric))\n            return;\n        const nextChar = match[1] || match[2] || '';\n        if (!nextChar || !prevChar || this.rules.inline.punctuation.exec(prevChar)) {\n            // unicode Regex counts emoji as 1 char; spread into array for proper count (used multiple times below)\n            const lLength = [...match[0]].length - 1;\n            let rDelim, rLength, delimTotal = lLength, midDelimTotal = 0;\n            const endReg = match[0][0] === '*' ? this.rules.inline.emStrongRDelimAst : this.rules.inline.emStrongRDelimUnd;\n            endReg.lastIndex = 0;\n            // Clip maskedSrc to same section of string as src (move to lexer?)\n            maskedSrc = maskedSrc.slice(-1 * src.length + lLength);\n            while ((match = endReg.exec(maskedSrc)) != null) {\n                rDelim = match[1] || match[2] || match[3] || match[4] || match[5] || match[6];\n                if (!rDelim)\n                    continue; // skip single * in __abc*abc__\n                rLength = [...rDelim].length;\n                if (match[3] || match[4]) { // found another Left Delim\n                    delimTotal += rLength;\n                    continue;\n                }\n                else if (match[5] || match[6]) { // either Left or Right Delim\n                    if (lLength % 3 && !((lLength + rLength) % 3)) {\n                        midDelimTotal += rLength;\n                        continue; // CommonMark Emphasis Rules 9-10\n                    }\n                }\n                delimTotal -= rLength;\n                if (delimTotal > 0)\n                    continue; // Haven't found enough closing delimiters\n                // Remove extra characters. *a*** -> *a*\n                rLength = Math.min(rLength, rLength + delimTotal + midDelimTotal);\n                // char length can be >1 for unicode characters;\n                const lastCharLength = [...match[0]][0].length;\n                const raw = src.slice(0, lLength + match.index + lastCharLength + rLength);\n                // Create `em` if smallest delimiter has odd char count. *a***\n                if (Math.min(lLength, rLength) % 2) {\n                    const text = raw.slice(1, -1);\n                    return {\n                        type: 'em',\n                        raw,\n                        text,\n                        tokens: this.lexer.inlineTokens(text),\n                    };\n                }\n                // Create 'strong' if smallest delimiter has even char count. **a***\n                const text = raw.slice(2, -2);\n                return {\n                    type: 'strong',\n                    raw,\n                    text,\n                    tokens: this.lexer.inlineTokens(text),\n                };\n            }\n        }\n    }\n    codespan(src) {\n        const cap = this.rules.inline.code.exec(src);\n        if (cap) {\n            let text = cap[2].replace(this.rules.other.newLineCharGlobal, ' ');\n            const hasNonSpaceChars = this.rules.other.nonSpaceChar.test(text);\n            const hasSpaceCharsOnBothEnds = this.rules.other.startingSpaceChar.test(text) && this.rules.other.endingSpaceChar.test(text);\n            if (hasNonSpaceChars && hasSpaceCharsOnBothEnds) {\n                text = text.substring(1, text.length - 1);\n            }\n            return {\n                type: 'codespan',\n                raw: cap[0],\n                text,\n            };\n        }\n    }\n    br(src) {\n        const cap = this.rules.inline.br.exec(src);\n        if (cap) {\n            return {\n                type: 'br',\n                raw: cap[0],\n            };\n        }\n    }\n    del(src) {\n        const cap = this.rules.inline.del.exec(src);\n        if (cap) {\n            return {\n                type: 'del',\n                raw: cap[0],\n                text: cap[2],\n                tokens: this.lexer.inlineTokens(cap[2]),\n            };\n        }\n    }\n    autolink(src) {\n        const cap = this.rules.inline.autolink.exec(src);\n        if (cap) {\n            let text, href;\n            if (cap[2] === '@') {\n                text = cap[1];\n                href = 'mailto:' + text;\n            }\n            else {\n                text = cap[1];\n                href = text;\n            }\n            return {\n                type: 'link',\n                raw: cap[0],\n                text,\n                href,\n                tokens: [\n                    {\n                        type: 'text',\n                        raw: text,\n                        text,\n                    },\n                ],\n            };\n        }\n    }\n    url(src) {\n        let cap;\n        if (cap = this.rules.inline.url.exec(src)) {\n            let text, href;\n            if (cap[2] === '@') {\n                text = cap[0];\n                href = 'mailto:' + text;\n            }\n            else {\n                // do extended autolink path validation\n                let prevCapZero;\n                do {\n                    prevCapZero = cap[0];\n                    cap[0] = this.rules.inline._backpedal.exec(cap[0])?.[0] ?? '';\n                } while (prevCapZero !== cap[0]);\n                text = cap[0];\n                if (cap[1] === 'www.') {\n                    href = 'http://' + cap[0];\n                }\n                else {\n                    href = cap[0];\n                }\n            }\n            return {\n                type: 'link',\n                raw: cap[0],\n                text,\n                href,\n                tokens: [\n                    {\n                        type: 'text',\n                        raw: text,\n                        text,\n                    },\n                ],\n            };\n        }\n    }\n    inlineText(src) {\n        const cap = this.rules.inline.text.exec(src);\n        if (cap) {\n            const escaped = this.lexer.state.inRawBlock;\n            return {\n                type: 'text',\n                raw: cap[0],\n                text: cap[0],\n                escaped,\n            };\n        }\n    }\n}\n\n/**\n * Block Lexer\n */\nclass _Lexer {\n    tokens;\n    options;\n    state;\n    tokenizer;\n    inlineQueue;\n    constructor(options) {\n        // TokenList cannot be created in one go\n        this.tokens = [];\n        this.tokens.links = Object.create(null);\n        this.options = options || _defaults;\n        this.options.tokenizer = this.options.tokenizer || new _Tokenizer();\n        this.tokenizer = this.options.tokenizer;\n        this.tokenizer.options = this.options;\n        this.tokenizer.lexer = this;\n        this.inlineQueue = [];\n        this.state = {\n            inLink: false,\n            inRawBlock: false,\n            top: true,\n        };\n        const rules = {\n            other,\n            block: block.normal,\n            inline: inline.normal,\n        };\n        if (this.options.pedantic) {\n            rules.block = block.pedantic;\n            rules.inline = inline.pedantic;\n        }\n        else if (this.options.gfm) {\n            rules.block = block.gfm;\n            if (this.options.breaks) {\n                rules.inline = inline.breaks;\n            }\n            else {\n                rules.inline = inline.gfm;\n            }\n        }\n        this.tokenizer.rules = rules;\n    }\n    /**\n     * Expose Rules\n     */\n    static get rules() {\n        return {\n            block,\n            inline,\n        };\n    }\n    /**\n     * Static Lex Method\n     */\n    static lex(src, options) {\n        const lexer = new _Lexer(options);\n        return lexer.lex(src);\n    }\n    /**\n     * Static Lex Inline Method\n     */\n    static lexInline(src, options) {\n        const lexer = new _Lexer(options);\n        return lexer.inlineTokens(src);\n    }\n    /**\n     * Preprocessing\n     */\n    lex(src) {\n        src = src.replace(other.carriageReturn, '\\n');\n        this.blockTokens(src, this.tokens);\n        for (let i = 0; i < this.inlineQueue.length; i++) {\n            const next = this.inlineQueue[i];\n            this.inlineTokens(next.src, next.tokens);\n        }\n        this.inlineQueue = [];\n        return this.tokens;\n    }\n    blockTokens(src, tokens = [], lastParagraphClipped = false) {\n        if (this.options.pedantic) {\n            src = src.replace(other.tabCharGlobal, '    ').replace(other.spaceLine, '');\n        }\n        while (src) {\n            let token;\n            if (this.options.extensions?.block?.some((extTokenizer) => {\n                if (token = extTokenizer.call({ lexer: this }, src, tokens)) {\n                    src = src.substring(token.raw.length);\n                    tokens.push(token);\n                    return true;\n                }\n                return false;\n            })) {\n                continue;\n            }\n            // newline\n            if (token = this.tokenizer.space(src)) {\n                src = src.substring(token.raw.length);\n                const lastToken = tokens.at(-1);\n                if (token.raw.length === 1 && lastToken !== undefined) {\n                    // if there's a single \\n as a spacer, it's terminating the last line,\n                    // so move it there so that we don't get unnecessary paragraph tags\n                    lastToken.raw += '\\n';\n                }\n                else {\n                    tokens.push(token);\n                }\n                continue;\n            }\n            // code\n            if (token = this.tokenizer.code(src)) {\n                src = src.substring(token.raw.length);\n                const lastToken = tokens.at(-1);\n                // An indented code block cannot interrupt a paragraph.\n                if (lastToken?.type === 'paragraph' || lastToken?.type === 'text') {\n                    lastToken.raw += '\\n' + token.raw;\n                    lastToken.text += '\\n' + token.text;\n                    this.inlineQueue.at(-1).src = lastToken.text;\n                }\n                else {\n                    tokens.push(token);\n                }\n                continue;\n            }\n            // fences\n            if (token = this.tokenizer.fences(src)) {\n                src = src.substring(token.raw.length);\n                tokens.push(token);\n                continue;\n            }\n            // heading\n            if (token = this.tokenizer.heading(src)) {\n                src = src.substring(token.raw.length);\n                tokens.push(token);\n                continue;\n            }\n            // hr\n            if (token = this.tokenizer.hr(src)) {\n                src = src.substring(token.raw.length);\n                tokens.push(token);\n                continue;\n            }\n            // blockquote\n            if (token = this.tokenizer.blockquote(src)) {\n                src = src.substring(token.raw.length);\n                tokens.push(token);\n                continue;\n            }\n            // list\n            if (token = this.tokenizer.list(src)) {\n                src = src.substring(token.raw.length);\n                tokens.push(token);\n                continue;\n            }\n            // html\n            if (token = this.tokenizer.html(src)) {\n                src = src.substring(token.raw.length);\n                tokens.push(token);\n                continue;\n            }\n            // def\n            if (token = this.tokenizer.def(src)) {\n                src = src.substring(token.raw.length);\n                const lastToken = tokens.at(-1);\n                if (lastToken?.type === 'paragraph' || lastToken?.type === 'text') {\n                    lastToken.raw += '\\n' + token.raw;\n                    lastToken.text += '\\n' + token.raw;\n                    this.inlineQueue.at(-1).src = lastToken.text;\n                }\n                else if (!this.tokens.links[token.tag]) {\n                    this.tokens.links[token.tag] = {\n                        href: token.href,\n                        title: token.title,\n                    };\n                }\n                continue;\n            }\n            // table (gfm)\n            if (token = this.tokenizer.table(src)) {\n                src = src.substring(token.raw.length);\n                tokens.push(token);\n                continue;\n            }\n            // lheading\n            if (token = this.tokenizer.lheading(src)) {\n                src = src.substring(token.raw.length);\n                tokens.push(token);\n                continue;\n            }\n            // top-level paragraph\n            // prevent paragraph consuming extensions by clipping 'src' to extension start\n            let cutSrc = src;\n            if (this.options.extensions?.startBlock) {\n                let startIndex = Infinity;\n                const tempSrc = src.slice(1);\n                let tempStart;\n                this.options.extensions.startBlock.forEach((getStartIndex) => {\n                    tempStart = getStartIndex.call({ lexer: this }, tempSrc);\n                    if (typeof tempStart === 'number' && tempStart >= 0) {\n                        startIndex = Math.min(startIndex, tempStart);\n                    }\n                });\n                if (startIndex < Infinity && startIndex >= 0) {\n                    cutSrc = src.substring(0, startIndex + 1);\n                }\n            }\n            if (this.state.top && (token = this.tokenizer.paragraph(cutSrc))) {\n                const lastToken = tokens.at(-1);\n                if (lastParagraphClipped && lastToken?.type === 'paragraph') {\n                    lastToken.raw += '\\n' + token.raw;\n                    lastToken.text += '\\n' + token.text;\n                    this.inlineQueue.pop();\n                    this.inlineQueue.at(-1).src = lastToken.text;\n                }\n                else {\n                    tokens.push(token);\n                }\n                lastParagraphClipped = cutSrc.length !== src.length;\n                src = src.substring(token.raw.length);\n                continue;\n            }\n            // text\n            if (token = this.tokenizer.text(src)) {\n                src = src.substring(token.raw.length);\n                const lastToken = tokens.at(-1);\n                if (lastToken?.type === 'text') {\n                    lastToken.raw += '\\n' + token.raw;\n                    lastToken.text += '\\n' + token.text;\n                    this.inlineQueue.pop();\n                    this.inlineQueue.at(-1).src = lastToken.text;\n                }\n                else {\n                    tokens.push(token);\n                }\n                continue;\n            }\n            if (src) {\n                const errMsg = 'Infinite loop on byte: ' + src.charCodeAt(0);\n                if (this.options.silent) {\n                    console.error(errMsg);\n                    break;\n                }\n                else {\n                    throw new Error(errMsg);\n                }\n            }\n        }\n        this.state.top = true;\n        return tokens;\n    }\n    inline(src, tokens = []) {\n        this.inlineQueue.push({ src, tokens });\n        return tokens;\n    }\n    /**\n     * Lexing/Compiling\n     */\n    inlineTokens(src, tokens = []) {\n        // String with links masked to avoid interference with em and strong\n        let maskedSrc = src;\n        let match = null;\n        // Mask out reflinks\n        if (this.tokens.links) {\n            const links = Object.keys(this.tokens.links);\n            if (links.length > 0) {\n                while ((match = this.tokenizer.rules.inline.reflinkSearch.exec(maskedSrc)) != null) {\n                    if (links.includes(match[0].slice(match[0].lastIndexOf('[') + 1, -1))) {\n                        maskedSrc = maskedSrc.slice(0, match.index)\n                            + '[' + 'a'.repeat(match[0].length - 2) + ']'\n                            + maskedSrc.slice(this.tokenizer.rules.inline.reflinkSearch.lastIndex);\n                    }\n                }\n            }\n        }\n        // Mask out escaped characters\n        while ((match = this.tokenizer.rules.inline.anyPunctuation.exec(maskedSrc)) != null) {\n            maskedSrc = maskedSrc.slice(0, match.index) + '++' + maskedSrc.slice(this.tokenizer.rules.inline.anyPunctuation.lastIndex);\n        }\n        // Mask out other blocks\n        while ((match = this.tokenizer.rules.inline.blockSkip.exec(maskedSrc)) != null) {\n            maskedSrc = maskedSrc.slice(0, match.index) + '[' + 'a'.repeat(match[0].length - 2) + ']' + maskedSrc.slice(this.tokenizer.rules.inline.blockSkip.lastIndex);\n        }\n        let keepPrevChar = false;\n        let prevChar = '';\n        while (src) {\n            if (!keepPrevChar) {\n                prevChar = '';\n            }\n            keepPrevChar = false;\n            let token;\n            // extensions\n            if (this.options.extensions?.inline?.some((extTokenizer) => {\n                if (token = extTokenizer.call({ lexer: this }, src, tokens)) {\n                    src = src.substring(token.raw.length);\n                    tokens.push(token);\n                    return true;\n                }\n                return false;\n            })) {\n                continue;\n            }\n            // escape\n            if (token = this.tokenizer.escape(src)) {\n                src = src.substring(token.raw.length);\n                tokens.push(token);\n                continue;\n            }\n            // tag\n            if (token = this.tokenizer.tag(src)) {\n                src = src.substring(token.raw.length);\n                tokens.push(token);\n                continue;\n            }\n            // link\n            if (token = this.tokenizer.link(src)) {\n                src = src.substring(token.raw.length);\n                tokens.push(token);\n                continue;\n            }\n            // reflink, nolink\n            if (token = this.tokenizer.reflink(src, this.tokens.links)) {\n                src = src.substring(token.raw.length);\n                const lastToken = tokens.at(-1);\n                if (token.type === 'text' && lastToken?.type === 'text') {\n                    lastToken.raw += token.raw;\n                    lastToken.text += token.text;\n                }\n                else {\n                    tokens.push(token);\n                }\n                continue;\n            }\n            // em & strong\n            if (token = this.tokenizer.emStrong(src, maskedSrc, prevChar)) {\n                src = src.substring(token.raw.length);\n                tokens.push(token);\n                continue;\n            }\n            // code\n            if (token = this.tokenizer.codespan(src)) {\n                src = src.substring(token.raw.length);\n                tokens.push(token);\n                continue;\n            }\n            // br\n            if (token = this.tokenizer.br(src)) {\n                src = src.substring(token.raw.length);\n                tokens.push(token);\n                continue;\n            }\n            // del (gfm)\n            if (token = this.tokenizer.del(src)) {\n                src = src.substring(token.raw.length);\n                tokens.push(token);\n                continue;\n            }\n            // autolink\n            if (token = this.tokenizer.autolink(src)) {\n                src = src.substring(token.raw.length);\n                tokens.push(token);\n                continue;\n            }\n            // url (gfm)\n            if (!this.state.inLink && (token = this.tokenizer.url(src))) {\n                src = src.substring(token.raw.length);\n                tokens.push(token);\n                continue;\n            }\n            // text\n            // prevent inlineText consuming extensions by clipping 'src' to extension start\n            let cutSrc = src;\n            if (this.options.extensions?.startInline) {\n                let startIndex = Infinity;\n                const tempSrc = src.slice(1);\n                let tempStart;\n                this.options.extensions.startInline.forEach((getStartIndex) => {\n                    tempStart = getStartIndex.call({ lexer: this }, tempSrc);\n                    if (typeof tempStart === 'number' && tempStart >= 0) {\n                        startIndex = Math.min(startIndex, tempStart);\n                    }\n                });\n                if (startIndex < Infinity && startIndex >= 0) {\n                    cutSrc = src.substring(0, startIndex + 1);\n                }\n            }\n            if (token = this.tokenizer.inlineText(cutSrc)) {\n                src = src.substring(token.raw.length);\n                if (token.raw.slice(-1) !== '_') { // Track prevChar before string of ____ started\n                    prevChar = token.raw.slice(-1);\n                }\n                keepPrevChar = true;\n                const lastToken = tokens.at(-1);\n                if (lastToken?.type === 'text') {\n                    lastToken.raw += token.raw;\n                    lastToken.text += token.text;\n                }\n                else {\n                    tokens.push(token);\n                }\n                continue;\n            }\n            if (src) {\n                const errMsg = 'Infinite loop on byte: ' + src.charCodeAt(0);\n                if (this.options.silent) {\n                    console.error(errMsg);\n                    break;\n                }\n                else {\n                    throw new Error(errMsg);\n                }\n            }\n        }\n        return tokens;\n    }\n}\n\n/**\n * Renderer\n */\nclass _Renderer {\n    options;\n    parser; // set by the parser\n    constructor(options) {\n        this.options = options || _defaults;\n    }\n    space(token) {\n        return '';\n    }\n    code({ text, lang, escaped }) {\n        const langString = (lang || '').match(other.notSpaceStart)?.[0];\n        const code = text.replace(other.endingNewline, '') + '\\n';\n        if (!langString) {\n            return '<pre><code>'\n                + (escaped ? code : escape(code, true))\n                + '</code></pre>\\n';\n        }\n        return '<pre><code class=\"language-'\n            + escape(langString)\n            + '\">'\n            + (escaped ? code : escape(code, true))\n            + '</code></pre>\\n';\n    }\n    blockquote({ tokens }) {\n        const body = this.parser.parse(tokens);\n        return `<blockquote>\\n${body}</blockquote>\\n`;\n    }\n    html({ text }) {\n        return text;\n    }\n    heading({ tokens, depth }) {\n        return `<h${depth}>${this.parser.parseInline(tokens)}</h${depth}>\\n`;\n    }\n    hr(token) {\n        return '<hr>\\n';\n    }\n    list(token) {\n        const ordered = token.ordered;\n        const start = token.start;\n        let body = '';\n        for (let j = 0; j < token.items.length; j++) {\n            const item = token.items[j];\n            body += this.listitem(item);\n        }\n        const type = ordered ? 'ol' : 'ul';\n        const startAttr = (ordered && start !== 1) ? (' start=\"' + start + '\"') : '';\n        return '<' + type + startAttr + '>\\n' + body + '</' + type + '>\\n';\n    }\n    listitem(item) {\n        let itemBody = '';\n        if (item.task) {\n            const checkbox = this.checkbox({ checked: !!item.checked });\n            if (item.loose) {\n                if (item.tokens[0]?.type === 'paragraph') {\n                    item.tokens[0].text = checkbox + ' ' + item.tokens[0].text;\n                    if (item.tokens[0].tokens && item.tokens[0].tokens.length > 0 && item.tokens[0].tokens[0].type === 'text') {\n                        item.tokens[0].tokens[0].text = checkbox + ' ' + escape(item.tokens[0].tokens[0].text);\n                        item.tokens[0].tokens[0].escaped = true;\n                    }\n                }\n                else {\n                    item.tokens.unshift({\n                        type: 'text',\n                        raw: checkbox + ' ',\n                        text: checkbox + ' ',\n                        escaped: true,\n                    });\n                }\n            }\n            else {\n                itemBody += checkbox + ' ';\n            }\n        }\n        itemBody += this.parser.parse(item.tokens, !!item.loose);\n        return `<li>${itemBody}</li>\\n`;\n    }\n    checkbox({ checked }) {\n        return '<input '\n            + (checked ? 'checked=\"\" ' : '')\n            + 'disabled=\"\" type=\"checkbox\">';\n    }\n    paragraph({ tokens }) {\n        return `<p>${this.parser.parseInline(tokens)}</p>\\n`;\n    }\n    table(token) {\n        let header = '';\n        // header\n        let cell = '';\n        for (let j = 0; j < token.header.length; j++) {\n            cell += this.tablecell(token.header[j]);\n        }\n        header += this.tablerow({ text: cell });\n        let body = '';\n        for (let j = 0; j < token.rows.length; j++) {\n            const row = token.rows[j];\n            cell = '';\n            for (let k = 0; k < row.length; k++) {\n                cell += this.tablecell(row[k]);\n            }\n            body += this.tablerow({ text: cell });\n        }\n        if (body)\n            body = `<tbody>${body}</tbody>`;\n        return '<table>\\n'\n            + '<thead>\\n'\n            + header\n            + '</thead>\\n'\n            + body\n            + '</table>\\n';\n    }\n    tablerow({ text }) {\n        return `<tr>\\n${text}</tr>\\n`;\n    }\n    tablecell(token) {\n        const content = this.parser.parseInline(token.tokens);\n        const type = token.header ? 'th' : 'td';\n        const tag = token.align\n            ? `<${type} align=\"${token.align}\">`\n            : `<${type}>`;\n        return tag + content + `</${type}>\\n`;\n    }\n    /**\n     * span level renderer\n     */\n    strong({ tokens }) {\n        return `<strong>${this.parser.parseInline(tokens)}</strong>`;\n    }\n    em({ tokens }) {\n        return `<em>${this.parser.parseInline(tokens)}</em>`;\n    }\n    codespan({ text }) {\n        return `<code>${escape(text, true)}</code>`;\n    }\n    br(token) {\n        return '<br>';\n    }\n    del({ tokens }) {\n        return `<del>${this.parser.parseInline(tokens)}</del>`;\n    }\n    link({ href, title, tokens }) {\n        const text = this.parser.parseInline(tokens);\n        const cleanHref = cleanUrl(href);\n        if (cleanHref === null) {\n            return text;\n        }\n        href = cleanHref;\n        let out = '<a href=\"' + href + '\"';\n        if (title) {\n            out += ' title=\"' + (escape(title)) + '\"';\n        }\n        out += '>' + text + '</a>';\n        return out;\n    }\n    image({ href, title, text, tokens }) {\n        if (tokens) {\n            text = this.parser.parseInline(tokens, this.parser.textRenderer);\n        }\n        const cleanHref = cleanUrl(href);\n        if (cleanHref === null) {\n            return escape(text);\n        }\n        href = cleanHref;\n        let out = `<img src=\"${href}\" alt=\"${text}\"`;\n        if (title) {\n            out += ` title=\"${escape(title)}\"`;\n        }\n        out += '>';\n        return out;\n    }\n    text(token) {\n        return 'tokens' in token && token.tokens\n            ? this.parser.parseInline(token.tokens)\n            : ('escaped' in token && token.escaped ? token.text : escape(token.text));\n    }\n}\n\n/**\n * TextRenderer\n * returns only the textual part of the token\n */\nclass _TextRenderer {\n    // no need for block level renderers\n    strong({ text }) {\n        return text;\n    }\n    em({ text }) {\n        return text;\n    }\n    codespan({ text }) {\n        return text;\n    }\n    del({ text }) {\n        return text;\n    }\n    html({ text }) {\n        return text;\n    }\n    text({ text }) {\n        return text;\n    }\n    link({ text }) {\n        return '' + text;\n    }\n    image({ text }) {\n        return '' + text;\n    }\n    br() {\n        return '';\n    }\n}\n\n/**\n * Parsing & Compiling\n */\nclass _Parser {\n    options;\n    renderer;\n    textRenderer;\n    constructor(options) {\n        this.options = options || _defaults;\n        this.options.renderer = this.options.renderer || new _Renderer();\n        this.renderer = this.options.renderer;\n        this.renderer.options = this.options;\n        this.renderer.parser = this;\n        this.textRenderer = new _TextRenderer();\n    }\n    /**\n     * Static Parse Method\n     */\n    static parse(tokens, options) {\n        const parser = new _Parser(options);\n        return parser.parse(tokens);\n    }\n    /**\n     * Static Parse Inline Method\n     */\n    static parseInline(tokens, options) {\n        const parser = new _Parser(options);\n        return parser.parseInline(tokens);\n    }\n    /**\n     * Parse Loop\n     */\n    parse(tokens, top = true) {\n        let out = '';\n        for (let i = 0; i < tokens.length; i++) {\n            const anyToken = tokens[i];\n            // Run any renderer extensions\n            if (this.options.extensions?.renderers?.[anyToken.type]) {\n                const genericToken = anyToken;\n                const ret = this.options.extensions.renderers[genericToken.type].call({ parser: this }, genericToken);\n                if (ret !== false || !['space', 'hr', 'heading', 'code', 'table', 'blockquote', 'list', 'html', 'paragraph', 'text'].includes(genericToken.type)) {\n                    out += ret || '';\n                    continue;\n                }\n            }\n            const token = anyToken;\n            switch (token.type) {\n                case 'space': {\n                    out += this.renderer.space(token);\n                    continue;\n                }\n                case 'hr': {\n                    out += this.renderer.hr(token);\n                    continue;\n                }\n                case 'heading': {\n                    out += this.renderer.heading(token);\n                    continue;\n                }\n                case 'code': {\n                    out += this.renderer.code(token);\n                    continue;\n                }\n                case 'table': {\n                    out += this.renderer.table(token);\n                    continue;\n                }\n                case 'blockquote': {\n                    out += this.renderer.blockquote(token);\n                    continue;\n                }\n                case 'list': {\n                    out += this.renderer.list(token);\n                    continue;\n                }\n                case 'html': {\n                    out += this.renderer.html(token);\n                    continue;\n                }\n                case 'paragraph': {\n                    out += this.renderer.paragraph(token);\n                    continue;\n                }\n                case 'text': {\n                    let textToken = token;\n                    let body = this.renderer.text(textToken);\n                    while (i + 1 < tokens.length && tokens[i + 1].type === 'text') {\n                        textToken = tokens[++i];\n                        body += '\\n' + this.renderer.text(textToken);\n                    }\n                    if (top) {\n                        out += this.renderer.paragraph({\n                            type: 'paragraph',\n                            raw: body,\n                            text: body,\n                            tokens: [{ type: 'text', raw: body, text: body, escaped: true }],\n                        });\n                    }\n                    else {\n                        out += body;\n                    }\n                    continue;\n                }\n                default: {\n                    const errMsg = 'Token with \"' + token.type + '\" type was not found.';\n                    if (this.options.silent) {\n                        console.error(errMsg);\n                        return '';\n                    }\n                    else {\n                        throw new Error(errMsg);\n                    }\n                }\n            }\n        }\n        return out;\n    }\n    /**\n     * Parse Inline Tokens\n     */\n    parseInline(tokens, renderer = this.renderer) {\n        let out = '';\n        for (let i = 0; i < tokens.length; i++) {\n            const anyToken = tokens[i];\n            // Run any renderer extensions\n            if (this.options.extensions?.renderers?.[anyToken.type]) {\n                const ret = this.options.extensions.renderers[anyToken.type].call({ parser: this }, anyToken);\n                if (ret !== false || !['escape', 'html', 'link', 'image', 'strong', 'em', 'codespan', 'br', 'del', 'text'].includes(anyToken.type)) {\n                    out += ret || '';\n                    continue;\n                }\n            }\n            const token = anyToken;\n            switch (token.type) {\n                case 'escape': {\n                    out += renderer.text(token);\n                    break;\n                }\n                case 'html': {\n                    out += renderer.html(token);\n                    break;\n                }\n                case 'link': {\n                    out += renderer.link(token);\n                    break;\n                }\n                case 'image': {\n                    out += renderer.image(token);\n                    break;\n                }\n                case 'strong': {\n                    out += renderer.strong(token);\n                    break;\n                }\n                case 'em': {\n                    out += renderer.em(token);\n                    break;\n                }\n                case 'codespan': {\n                    out += renderer.codespan(token);\n                    break;\n                }\n                case 'br': {\n                    out += renderer.br(token);\n                    break;\n                }\n                case 'del': {\n                    out += renderer.del(token);\n                    break;\n                }\n                case 'text': {\n                    out += renderer.text(token);\n                    break;\n                }\n                default: {\n                    const errMsg = 'Token with \"' + token.type + '\" type was not found.';\n                    if (this.options.silent) {\n                        console.error(errMsg);\n                        return '';\n                    }\n                    else {\n                        throw new Error(errMsg);\n                    }\n                }\n            }\n        }\n        return out;\n    }\n}\n\nclass _Hooks {\n    options;\n    block;\n    constructor(options) {\n        this.options = options || _defaults;\n    }\n    static passThroughHooks = new Set([\n        'preprocess',\n        'postprocess',\n        'processAllTokens',\n    ]);\n    /**\n     * Process markdown before marked\n     */\n    preprocess(markdown) {\n        return markdown;\n    }\n    /**\n     * Process HTML after marked is finished\n     */\n    postprocess(html) {\n        return html;\n    }\n    /**\n     * Process all tokens before walk tokens\n     */\n    processAllTokens(tokens) {\n        return tokens;\n    }\n    /**\n     * Provide function to tokenize markdown\n     */\n    provideLexer() {\n        return this.block ? _Lexer.lex : _Lexer.lexInline;\n    }\n    /**\n     * Provide function to parse tokens\n     */\n    provideParser() {\n        return this.block ? _Parser.parse : _Parser.parseInline;\n    }\n}\n\nclass Marked {\n    defaults = _getDefaults();\n    options = this.setOptions;\n    parse = this.parseMarkdown(true);\n    parseInline = this.parseMarkdown(false);\n    Parser = _Parser;\n    Renderer = _Renderer;\n    TextRenderer = _TextRenderer;\n    Lexer = _Lexer;\n    Tokenizer = _Tokenizer;\n    Hooks = _Hooks;\n    constructor(...args) {\n        this.use(...args);\n    }\n    /**\n     * Run callback for every token\n     */\n    walkTokens(tokens, callback) {\n        let values = [];\n        for (const token of tokens) {\n            values = values.concat(callback.call(this, token));\n            switch (token.type) {\n                case 'table': {\n                    const tableToken = token;\n                    for (const cell of tableToken.header) {\n                        values = values.concat(this.walkTokens(cell.tokens, callback));\n                    }\n                    for (const row of tableToken.rows) {\n                        for (const cell of row) {\n                            values = values.concat(this.walkTokens(cell.tokens, callback));\n                        }\n                    }\n                    break;\n                }\n                case 'list': {\n                    const listToken = token;\n                    values = values.concat(this.walkTokens(listToken.items, callback));\n                    break;\n                }\n                default: {\n                    const genericToken = token;\n                    if (this.defaults.extensions?.childTokens?.[genericToken.type]) {\n                        this.defaults.extensions.childTokens[genericToken.type].forEach((childTokens) => {\n                            const tokens = genericToken[childTokens].flat(Infinity);\n                            values = values.concat(this.walkTokens(tokens, callback));\n                        });\n                    }\n                    else if (genericToken.tokens) {\n                        values = values.concat(this.walkTokens(genericToken.tokens, callback));\n                    }\n                }\n            }\n        }\n        return values;\n    }\n    use(...args) {\n        const extensions = this.defaults.extensions || { renderers: {}, childTokens: {} };\n        args.forEach((pack) => {\n            // copy options to new object\n            const opts = { ...pack };\n            // set async to true if it was set to true before\n            opts.async = this.defaults.async || opts.async || false;\n            // ==-- Parse \"addon\" extensions --== //\n            if (pack.extensions) {\n                pack.extensions.forEach((ext) => {\n                    if (!ext.name) {\n                        throw new Error('extension name required');\n                    }\n                    if ('renderer' in ext) { // Renderer extensions\n                        const prevRenderer = extensions.renderers[ext.name];\n                        if (prevRenderer) {\n                            // Replace extension with func to run new extension but fall back if false\n                            extensions.renderers[ext.name] = function (...args) {\n                                let ret = ext.renderer.apply(this, args);\n                                if (ret === false) {\n                                    ret = prevRenderer.apply(this, args);\n                                }\n                                return ret;\n                            };\n                        }\n                        else {\n                            extensions.renderers[ext.name] = ext.renderer;\n                        }\n                    }\n                    if ('tokenizer' in ext) { // Tokenizer Extensions\n                        if (!ext.level || (ext.level !== 'block' && ext.level !== 'inline')) {\n                            throw new Error(\"extension level must be 'block' or 'inline'\");\n                        }\n                        const extLevel = extensions[ext.level];\n                        if (extLevel) {\n                            extLevel.unshift(ext.tokenizer);\n                        }\n                        else {\n                            extensions[ext.level] = [ext.tokenizer];\n                        }\n                        if (ext.start) { // Function to check for start of token\n                            if (ext.level === 'block') {\n                                if (extensions.startBlock) {\n                                    extensions.startBlock.push(ext.start);\n                                }\n                                else {\n                                    extensions.startBlock = [ext.start];\n                                }\n                            }\n                            else if (ext.level === 'inline') {\n                                if (extensions.startInline) {\n                                    extensions.startInline.push(ext.start);\n                                }\n                                else {\n                                    extensions.startInline = [ext.start];\n                                }\n                            }\n                        }\n                    }\n                    if ('childTokens' in ext && ext.childTokens) { // Child tokens to be visited by walkTokens\n                        extensions.childTokens[ext.name] = ext.childTokens;\n                    }\n                });\n                opts.extensions = extensions;\n            }\n            // ==-- Parse \"overwrite\" extensions --== //\n            if (pack.renderer) {\n                const renderer = this.defaults.renderer || new _Renderer(this.defaults);\n                for (const prop in pack.renderer) {\n                    if (!(prop in renderer)) {\n                        throw new Error(`renderer '${prop}' does not exist`);\n                    }\n                    if (['options', 'parser'].includes(prop)) {\n                        // ignore options property\n                        continue;\n                    }\n                    const rendererProp = prop;\n                    const rendererFunc = pack.renderer[rendererProp];\n                    const prevRenderer = renderer[rendererProp];\n                    // Replace renderer with func to run extension, but fall back if false\n                    renderer[rendererProp] = (...args) => {\n                        let ret = rendererFunc.apply(renderer, args);\n                        if (ret === false) {\n                            ret = prevRenderer.apply(renderer, args);\n                        }\n                        return ret || '';\n                    };\n                }\n                opts.renderer = renderer;\n            }\n            if (pack.tokenizer) {\n                const tokenizer = this.defaults.tokenizer || new _Tokenizer(this.defaults);\n                for (const prop in pack.tokenizer) {\n                    if (!(prop in tokenizer)) {\n                        throw new Error(`tokenizer '${prop}' does not exist`);\n                    }\n                    if (['options', 'rules', 'lexer'].includes(prop)) {\n                        // ignore options, rules, and lexer properties\n                        continue;\n                    }\n                    const tokenizerProp = prop;\n                    const tokenizerFunc = pack.tokenizer[tokenizerProp];\n                    const prevTokenizer = tokenizer[tokenizerProp];\n                    // Replace tokenizer with func to run extension, but fall back if false\n                    // @ts-expect-error cannot type tokenizer function dynamically\n                    tokenizer[tokenizerProp] = (...args) => {\n                        let ret = tokenizerFunc.apply(tokenizer, args);\n                        if (ret === false) {\n                            ret = prevTokenizer.apply(tokenizer, args);\n                        }\n                        return ret;\n                    };\n                }\n                opts.tokenizer = tokenizer;\n            }\n            // ==-- Parse Hooks extensions --== //\n            if (pack.hooks) {\n                const hooks = this.defaults.hooks || new _Hooks();\n                for (const prop in pack.hooks) {\n                    if (!(prop in hooks)) {\n                        throw new Error(`hook '${prop}' does not exist`);\n                    }\n                    if (['options', 'block'].includes(prop)) {\n                        // ignore options and block properties\n                        continue;\n                    }\n                    const hooksProp = prop;\n                    const hooksFunc = pack.hooks[hooksProp];\n                    const prevHook = hooks[hooksProp];\n                    if (_Hooks.passThroughHooks.has(prop)) {\n                        // @ts-expect-error cannot type hook function dynamically\n                        hooks[hooksProp] = (arg) => {\n                            if (this.defaults.async) {\n                                return Promise.resolve(hooksFunc.call(hooks, arg)).then(ret => {\n                                    return prevHook.call(hooks, ret);\n                                });\n                            }\n                            const ret = hooksFunc.call(hooks, arg);\n                            return prevHook.call(hooks, ret);\n                        };\n                    }\n                    else {\n                        // @ts-expect-error cannot type hook function dynamically\n                        hooks[hooksProp] = (...args) => {\n                            let ret = hooksFunc.apply(hooks, args);\n                            if (ret === false) {\n                                ret = prevHook.apply(hooks, args);\n                            }\n                            return ret;\n                        };\n                    }\n                }\n                opts.hooks = hooks;\n            }\n            // ==-- Parse WalkTokens extensions --== //\n            if (pack.walkTokens) {\n                const walkTokens = this.defaults.walkTokens;\n                const packWalktokens = pack.walkTokens;\n                opts.walkTokens = function (token) {\n                    let values = [];\n                    values.push(packWalktokens.call(this, token));\n                    if (walkTokens) {\n                        values = values.concat(walkTokens.call(this, token));\n                    }\n                    return values;\n                };\n            }\n            this.defaults = { ...this.defaults, ...opts };\n        });\n        return this;\n    }\n    setOptions(opt) {\n        this.defaults = { ...this.defaults, ...opt };\n        return this;\n    }\n    lexer(src, options) {\n        return _Lexer.lex(src, options ?? this.defaults);\n    }\n    parser(tokens, options) {\n        return _Parser.parse(tokens, options ?? this.defaults);\n    }\n    parseMarkdown(blockType) {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        const parse = (src, options) => {\n            const origOpt = { ...options };\n            const opt = { ...this.defaults, ...origOpt };\n            const throwError = this.onError(!!opt.silent, !!opt.async);\n            // throw error if an extension set async to true but parse was called with async: false\n            if (this.defaults.async === true && origOpt.async === false) {\n                return throwError(new Error('marked(): The async option was set to true by an extension. Remove async: false from the parse options object to return a Promise.'));\n            }\n            // throw error in case of non string input\n            if (typeof src === 'undefined' || src === null) {\n                return throwError(new Error('marked(): input parameter is undefined or null'));\n            }\n            if (typeof src !== 'string') {\n                return throwError(new Error('marked(): input parameter is of type '\n                    + Object.prototype.toString.call(src) + ', string expected'));\n            }\n            if (opt.hooks) {\n                opt.hooks.options = opt;\n                opt.hooks.block = blockType;\n            }\n            const lexer = opt.hooks ? opt.hooks.provideLexer() : (blockType ? _Lexer.lex : _Lexer.lexInline);\n            const parser = opt.hooks ? opt.hooks.provideParser() : (blockType ? _Parser.parse : _Parser.parseInline);\n            if (opt.async) {\n                return Promise.resolve(opt.hooks ? opt.hooks.preprocess(src) : src)\n                    .then(src => lexer(src, opt))\n                    .then(tokens => opt.hooks ? opt.hooks.processAllTokens(tokens) : tokens)\n                    .then(tokens => opt.walkTokens ? Promise.all(this.walkTokens(tokens, opt.walkTokens)).then(() => tokens) : tokens)\n                    .then(tokens => parser(tokens, opt))\n                    .then(html => opt.hooks ? opt.hooks.postprocess(html) : html)\n                    .catch(throwError);\n            }\n            try {\n                if (opt.hooks) {\n                    src = opt.hooks.preprocess(src);\n                }\n                let tokens = lexer(src, opt);\n                if (opt.hooks) {\n                    tokens = opt.hooks.processAllTokens(tokens);\n                }\n                if (opt.walkTokens) {\n                    this.walkTokens(tokens, opt.walkTokens);\n                }\n                let html = parser(tokens, opt);\n                if (opt.hooks) {\n                    html = opt.hooks.postprocess(html);\n                }\n                return html;\n            }\n            catch (e) {\n                return throwError(e);\n            }\n        };\n        return parse;\n    }\n    onError(silent, async) {\n        return (e) => {\n            e.message += '\\nPlease report this to https://github.com/markedjs/marked.';\n            if (silent) {\n                const msg = '<p>An error occurred:</p><pre>'\n                    + escape(e.message + '', true)\n                    + '</pre>';\n                if (async) {\n                    return Promise.resolve(msg);\n                }\n                return msg;\n            }\n            if (async) {\n                return Promise.reject(e);\n            }\n            throw e;\n        };\n    }\n}\n\nconst markedInstance = new Marked();\nfunction marked(src, opt) {\n    return markedInstance.parse(src, opt);\n}\n/**\n * Sets the default options.\n *\n * @param options Hash of options\n */\nmarked.options =\n    marked.setOptions = function (options) {\n        markedInstance.setOptions(options);\n        marked.defaults = markedInstance.defaults;\n        changeDefaults(marked.defaults);\n        return marked;\n    };\n/**\n * Gets the original marked default options.\n */\nmarked.getDefaults = _getDefaults;\nmarked.defaults = _defaults;\n/**\n * Use Extension\n */\nmarked.use = function (...args) {\n    markedInstance.use(...args);\n    marked.defaults = markedInstance.defaults;\n    changeDefaults(marked.defaults);\n    return marked;\n};\n/**\n * Run callback for every token\n */\nmarked.walkTokens = function (tokens, callback) {\n    return markedInstance.walkTokens(tokens, callback);\n};\n/**\n * Compiles markdown to HTML without enclosing `p` tag.\n *\n * @param src String of markdown source to be compiled\n * @param options Hash of options\n * @return String of compiled HTML\n */\nmarked.parseInline = markedInstance.parseInline;\n/**\n * Expose\n */\nmarked.Parser = _Parser;\nmarked.parser = _Parser.parse;\nmarked.Renderer = _Renderer;\nmarked.TextRenderer = _TextRenderer;\nmarked.Lexer = _Lexer;\nmarked.lexer = _Lexer.lex;\nmarked.Tokenizer = _Tokenizer;\nmarked.Hooks = _Hooks;\nmarked.parse = marked;\nconst options = marked.options;\nconst setOptions = marked.setOptions;\nconst use = marked.use;\nconst walkTokens = marked.walkTokens;\nconst parseInline = marked.parseInline;\nconst parse = marked;\nconst parser = _Parser.parse;\nconst lexer = _Lexer.lex;\n\nexport { _Hooks as Hooks, _Lexer as Lexer, Marked, _Parser as Parser, _Renderer as Renderer, _TextRenderer as TextRenderer, _Tokenizer as Tokenizer, _defaults as defaults, _getDefaults as getDefaults, lexer, marked, options, parse, parseInline, parser, setOptions, use, walkTokens };\n//# sourceMappingURL=marked.esm.js.map\n","/*! @license DOMPurify 3.2.5 | (c) Cure53 and other contributors | Released under the Apache license 2.0 and Mozilla Public License 2.0 | github.com/cure53/DOMPurify/blob/3.2.5/LICENSE */\n\nconst {\n  entries,\n  setPrototypeOf,\n  isFrozen,\n  getPrototypeOf,\n  getOwnPropertyDescriptor\n} = Object;\nlet {\n  freeze,\n  seal,\n  create\n} = Object; // eslint-disable-line import/no-mutable-exports\nlet {\n  apply,\n  construct\n} = typeof Reflect !== 'undefined' && Reflect;\nif (!freeze) {\n  freeze = function freeze(x) {\n    return x;\n  };\n}\nif (!seal) {\n  seal = function seal(x) {\n    return x;\n  };\n}\nif (!apply) {\n  apply = function apply(fun, thisValue, args) {\n    return fun.apply(thisValue, args);\n  };\n}\nif (!construct) {\n  construct = function construct(Func, args) {\n    return new Func(...args);\n  };\n}\nconst arrayForEach = unapply(Array.prototype.forEach);\nconst arrayLastIndexOf = unapply(Array.prototype.lastIndexOf);\nconst arrayPop = unapply(Array.prototype.pop);\nconst arrayPush = unapply(Array.prototype.push);\nconst arraySplice = unapply(Array.prototype.splice);\nconst stringToLowerCase = unapply(String.prototype.toLowerCase);\nconst stringToString = unapply(String.prototype.toString);\nconst stringMatch = unapply(String.prototype.match);\nconst stringReplace = unapply(String.prototype.replace);\nconst stringIndexOf = unapply(String.prototype.indexOf);\nconst stringTrim = unapply(String.prototype.trim);\nconst objectHasOwnProperty = unapply(Object.prototype.hasOwnProperty);\nconst regExpTest = unapply(RegExp.prototype.test);\nconst typeErrorCreate = unconstruct(TypeError);\n/**\n * Creates a new function that calls the given function with a specified thisArg and arguments.\n *\n * @param func - The function to be wrapped and called.\n * @returns A new function that calls the given function with a specified thisArg and arguments.\n */\nfunction unapply(func) {\n  return function (thisArg) {\n    if (thisArg instanceof RegExp) {\n      thisArg.lastIndex = 0;\n    }\n    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n    return apply(func, thisArg, args);\n  };\n}\n/**\n * Creates a new function that constructs an instance of the given constructor function with the provided arguments.\n *\n * @param func - The constructor function to be wrapped and called.\n * @returns A new function that constructs an instance of the given constructor function with the provided arguments.\n */\nfunction unconstruct(func) {\n  return function () {\n    for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      args[_key2] = arguments[_key2];\n    }\n    return construct(func, args);\n  };\n}\n/**\n * Add properties to a lookup table\n *\n * @param set - The set to which elements will be added.\n * @param array - The array containing elements to be added to the set.\n * @param transformCaseFunc - An optional function to transform the case of each element before adding to the set.\n * @returns The modified set with added elements.\n */\nfunction addToSet(set, array) {\n  let transformCaseFunc = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : stringToLowerCase;\n  if (setPrototypeOf) {\n    // Make 'in' and truthy checks like Boolean(set.constructor)\n    // independent of any properties defined on Object.prototype.\n    // Prevent prototype setters from intercepting set as a this value.\n    setPrototypeOf(set, null);\n  }\n  let l = array.length;\n  while (l--) {\n    let element = array[l];\n    if (typeof element === 'string') {\n      const lcElement = transformCaseFunc(element);\n      if (lcElement !== element) {\n        // Config presets (e.g. tags.js, attrs.js) are immutable.\n        if (!isFrozen(array)) {\n          array[l] = lcElement;\n        }\n        element = lcElement;\n      }\n    }\n    set[element] = true;\n  }\n  return set;\n}\n/**\n * Clean up an array to harden against CSPP\n *\n * @param array - The array to be cleaned.\n * @returns The cleaned version of the array\n */\nfunction cleanArray(array) {\n  for (let index = 0; index < array.length; index++) {\n    const isPropertyExist = objectHasOwnProperty(array, index);\n    if (!isPropertyExist) {\n      array[index] = null;\n    }\n  }\n  return array;\n}\n/**\n * Shallow clone an object\n *\n * @param object - The object to be cloned.\n * @returns A new object that copies the original.\n */\nfunction clone(object) {\n  const newObject = create(null);\n  for (const [property, value] of entries(object)) {\n    const isPropertyExist = objectHasOwnProperty(object, property);\n    if (isPropertyExist) {\n      if (Array.isArray(value)) {\n        newObject[property] = cleanArray(value);\n      } else if (value && typeof value === 'object' && value.constructor === Object) {\n        newObject[property] = clone(value);\n      } else {\n        newObject[property] = value;\n      }\n    }\n  }\n  return newObject;\n}\n/**\n * This method automatically checks if the prop is function or getter and behaves accordingly.\n *\n * @param object - The object to look up the getter function in its prototype chain.\n * @param prop - The property name for which to find the getter function.\n * @returns The getter function found in the prototype chain or a fallback function.\n */\nfunction lookupGetter(object, prop) {\n  while (object !== null) {\n    const desc = getOwnPropertyDescriptor(object, prop);\n    if (desc) {\n      if (desc.get) {\n        return unapply(desc.get);\n      }\n      if (typeof desc.value === 'function') {\n        return unapply(desc.value);\n      }\n    }\n    object = getPrototypeOf(object);\n  }\n  function fallbackValue() {\n    return null;\n  }\n  return fallbackValue;\n}\n\nconst html$1 = freeze(['a', 'abbr', 'acronym', 'address', 'area', 'article', 'aside', 'audio', 'b', 'bdi', 'bdo', 'big', 'blink', 'blockquote', 'body', 'br', 'button', 'canvas', 'caption', 'center', 'cite', 'code', 'col', 'colgroup', 'content', 'data', 'datalist', 'dd', 'decorator', 'del', 'details', 'dfn', 'dialog', 'dir', 'div', 'dl', 'dt', 'element', 'em', 'fieldset', 'figcaption', 'figure', 'font', 'footer', 'form', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'head', 'header', 'hgroup', 'hr', 'html', 'i', 'img', 'input', 'ins', 'kbd', 'label', 'legend', 'li', 'main', 'map', 'mark', 'marquee', 'menu', 'menuitem', 'meter', 'nav', 'nobr', 'ol', 'optgroup', 'option', 'output', 'p', 'picture', 'pre', 'progress', 'q', 'rp', 'rt', 'ruby', 's', 'samp', 'section', 'select', 'shadow', 'small', 'source', 'spacer', 'span', 'strike', 'strong', 'style', 'sub', 'summary', 'sup', 'table', 'tbody', 'td', 'template', 'textarea', 'tfoot', 'th', 'thead', 'time', 'tr', 'track', 'tt', 'u', 'ul', 'var', 'video', 'wbr']);\nconst svg$1 = freeze(['svg', 'a', 'altglyph', 'altglyphdef', 'altglyphitem', 'animatecolor', 'animatemotion', 'animatetransform', 'circle', 'clippath', 'defs', 'desc', 'ellipse', 'filter', 'font', 'g', 'glyph', 'glyphref', 'hkern', 'image', 'line', 'lineargradient', 'marker', 'mask', 'metadata', 'mpath', 'path', 'pattern', 'polygon', 'polyline', 'radialgradient', 'rect', 'stop', 'style', 'switch', 'symbol', 'text', 'textpath', 'title', 'tref', 'tspan', 'view', 'vkern']);\nconst svgFilters = freeze(['feBlend', 'feColorMatrix', 'feComponentTransfer', 'feComposite', 'feConvolveMatrix', 'feDiffuseLighting', 'feDisplacementMap', 'feDistantLight', 'feDropShadow', 'feFlood', 'feFuncA', 'feFuncB', 'feFuncG', 'feFuncR', 'feGaussianBlur', 'feImage', 'feMerge', 'feMergeNode', 'feMorphology', 'feOffset', 'fePointLight', 'feSpecularLighting', 'feSpotLight', 'feTile', 'feTurbulence']);\n// List of SVG elements that are disallowed by default.\n// We still need to know them so that we can do namespace\n// checks properly in case one wants to add them to\n// allow-list.\nconst svgDisallowed = freeze(['animate', 'color-profile', 'cursor', 'discard', 'font-face', 'font-face-format', 'font-face-name', 'font-face-src', 'font-face-uri', 'foreignobject', 'hatch', 'hatchpath', 'mesh', 'meshgradient', 'meshpatch', 'meshrow', 'missing-glyph', 'script', 'set', 'solidcolor', 'unknown', 'use']);\nconst mathMl$1 = freeze(['math', 'menclose', 'merror', 'mfenced', 'mfrac', 'mglyph', 'mi', 'mlabeledtr', 'mmultiscripts', 'mn', 'mo', 'mover', 'mpadded', 'mphantom', 'mroot', 'mrow', 'ms', 'mspace', 'msqrt', 'mstyle', 'msub', 'msup', 'msubsup', 'mtable', 'mtd', 'mtext', 'mtr', 'munder', 'munderover', 'mprescripts']);\n// Similarly to SVG, we want to know all MathML elements,\n// even those that we disallow by default.\nconst mathMlDisallowed = freeze(['maction', 'maligngroup', 'malignmark', 'mlongdiv', 'mscarries', 'mscarry', 'msgroup', 'mstack', 'msline', 'msrow', 'semantics', 'annotation', 'annotation-xml', 'mprescripts', 'none']);\nconst text = freeze(['#text']);\n\nconst html = freeze(['accept', 'action', 'align', 'alt', 'autocapitalize', 'autocomplete', 'autopictureinpicture', 'autoplay', 'background', 'bgcolor', 'border', 'capture', 'cellpadding', 'cellspacing', 'checked', 'cite', 'class', 'clear', 'color', 'cols', 'colspan', 'controls', 'controlslist', 'coords', 'crossorigin', 'datetime', 'decoding', 'default', 'dir', 'disabled', 'disablepictureinpicture', 'disableremoteplayback', 'download', 'draggable', 'enctype', 'enterkeyhint', 'face', 'for', 'headers', 'height', 'hidden', 'high', 'href', 'hreflang', 'id', 'inputmode', 'integrity', 'ismap', 'kind', 'label', 'lang', 'list', 'loading', 'loop', 'low', 'max', 'maxlength', 'media', 'method', 'min', 'minlength', 'multiple', 'muted', 'name', 'nonce', 'noshade', 'novalidate', 'nowrap', 'open', 'optimum', 'pattern', 'placeholder', 'playsinline', 'popover', 'popovertarget', 'popovertargetaction', 'poster', 'preload', 'pubdate', 'radiogroup', 'readonly', 'rel', 'required', 'rev', 'reversed', 'role', 'rows', 'rowspan', 'spellcheck', 'scope', 'selected', 'shape', 'size', 'sizes', 'span', 'srclang', 'start', 'src', 'srcset', 'step', 'style', 'summary', 'tabindex', 'title', 'translate', 'type', 'usemap', 'valign', 'value', 'width', 'wrap', 'xmlns', 'slot']);\nconst svg = freeze(['accent-height', 'accumulate', 'additive', 'alignment-baseline', 'amplitude', 'ascent', 'attributename', 'attributetype', 'azimuth', 'basefrequency', 'baseline-shift', 'begin', 'bias', 'by', 'class', 'clip', 'clippathunits', 'clip-path', 'clip-rule', 'color', 'color-interpolation', 'color-interpolation-filters', 'color-profile', 'color-rendering', 'cx', 'cy', 'd', 'dx', 'dy', 'diffuseconstant', 'direction', 'display', 'divisor', 'dur', 'edgemode', 'elevation', 'end', 'exponent', 'fill', 'fill-opacity', 'fill-rule', 'filter', 'filterunits', 'flood-color', 'flood-opacity', 'font-family', 'font-size', 'font-size-adjust', 'font-stretch', 'font-style', 'font-variant', 'font-weight', 'fx', 'fy', 'g1', 'g2', 'glyph-name', 'glyphref', 'gradientunits', 'gradienttransform', 'height', 'href', 'id', 'image-rendering', 'in', 'in2', 'intercept', 'k', 'k1', 'k2', 'k3', 'k4', 'kerning', 'keypoints', 'keysplines', 'keytimes', 'lang', 'lengthadjust', 'letter-spacing', 'kernelmatrix', 'kernelunitlength', 'lighting-color', 'local', 'marker-end', 'marker-mid', 'marker-start', 'markerheight', 'markerunits', 'markerwidth', 'maskcontentunits', 'maskunits', 'max', 'mask', 'media', 'method', 'mode', 'min', 'name', 'numoctaves', 'offset', 'operator', 'opacity', 'order', 'orient', 'orientation', 'origin', 'overflow', 'paint-order', 'path', 'pathlength', 'patterncontentunits', 'patterntransform', 'patternunits', 'points', 'preservealpha', 'preserveaspectratio', 'primitiveunits', 'r', 'rx', 'ry', 'radius', 'refx', 'refy', 'repeatcount', 'repeatdur', 'restart', 'result', 'rotate', 'scale', 'seed', 'shape-rendering', 'slope', 'specularconstant', 'specularexponent', 'spreadmethod', 'startoffset', 'stddeviation', 'stitchtiles', 'stop-color', 'stop-opacity', 'stroke-dasharray', 'stroke-dashoffset', 'stroke-linecap', 'stroke-linejoin', 'stroke-miterlimit', 'stroke-opacity', 'stroke', 'stroke-width', 'style', 'surfacescale', 'systemlanguage', 'tabindex', 'tablevalues', 'targetx', 'targety', 'transform', 'transform-origin', 'text-anchor', 'text-decoration', 'text-rendering', 'textlength', 'type', 'u1', 'u2', 'unicode', 'values', 'viewbox', 'visibility', 'version', 'vert-adv-y', 'vert-origin-x', 'vert-origin-y', 'width', 'word-spacing', 'wrap', 'writing-mode', 'xchannelselector', 'ychannelselector', 'x', 'x1', 'x2', 'xmlns', 'y', 'y1', 'y2', 'z', 'zoomandpan']);\nconst mathMl = freeze(['accent', 'accentunder', 'align', 'bevelled', 'close', 'columnsalign', 'columnlines', 'columnspan', 'denomalign', 'depth', 'dir', 'display', 'displaystyle', 'encoding', 'fence', 'frame', 'height', 'href', 'id', 'largeop', 'length', 'linethickness', 'lspace', 'lquote', 'mathbackground', 'mathcolor', 'mathsize', 'mathvariant', 'maxsize', 'minsize', 'movablelimits', 'notation', 'numalign', 'open', 'rowalign', 'rowlines', 'rowspacing', 'rowspan', 'rspace', 'rquote', 'scriptlevel', 'scriptminsize', 'scriptsizemultiplier', 'selection', 'separator', 'separators', 'stretchy', 'subscriptshift', 'supscriptshift', 'symmetric', 'voffset', 'width', 'xmlns']);\nconst xml = freeze(['xlink:href', 'xml:id', 'xlink:title', 'xml:space', 'xmlns:xlink']);\n\n// eslint-disable-next-line unicorn/better-regex\nconst MUSTACHE_EXPR = seal(/\\{\\{[\\w\\W]*|[\\w\\W]*\\}\\}/gm); // Specify template detection regex for SAFE_FOR_TEMPLATES mode\nconst ERB_EXPR = seal(/<%[\\w\\W]*|[\\w\\W]*%>/gm);\nconst TMPLIT_EXPR = seal(/\\$\\{[\\w\\W]*/gm); // eslint-disable-line unicorn/better-regex\nconst DATA_ATTR = seal(/^data-[\\-\\w.\\u00B7-\\uFFFF]+$/); // eslint-disable-line no-useless-escape\nconst ARIA_ATTR = seal(/^aria-[\\-\\w]+$/); // eslint-disable-line no-useless-escape\nconst IS_ALLOWED_URI = seal(/^(?:(?:(?:f|ht)tps?|mailto|tel|callto|sms|cid|xmpp):|[^a-z]|[a-z+.\\-]+(?:[^a-z+.\\-:]|$))/i // eslint-disable-line no-useless-escape\n);\nconst IS_SCRIPT_OR_DATA = seal(/^(?:\\w+script|data):/i);\nconst ATTR_WHITESPACE = seal(/[\\u0000-\\u0020\\u00A0\\u1680\\u180E\\u2000-\\u2029\\u205F\\u3000]/g // eslint-disable-line no-control-regex\n);\nconst DOCTYPE_NAME = seal(/^html$/i);\nconst CUSTOM_ELEMENT = seal(/^[a-z][.\\w]*(-[.\\w]+)+$/i);\n\nvar EXPRESSIONS = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  ARIA_ATTR: ARIA_ATTR,\n  ATTR_WHITESPACE: ATTR_WHITESPACE,\n  CUSTOM_ELEMENT: CUSTOM_ELEMENT,\n  DATA_ATTR: DATA_ATTR,\n  DOCTYPE_NAME: DOCTYPE_NAME,\n  ERB_EXPR: ERB_EXPR,\n  IS_ALLOWED_URI: IS_ALLOWED_URI,\n  IS_SCRIPT_OR_DATA: IS_SCRIPT_OR_DATA,\n  MUSTACHE_EXPR: MUSTACHE_EXPR,\n  TMPLIT_EXPR: TMPLIT_EXPR\n});\n\n/* eslint-disable @typescript-eslint/indent */\n// https://developer.mozilla.org/en-US/docs/Web/API/Node/nodeType\nconst NODE_TYPE = {\n  element: 1,\n  attribute: 2,\n  text: 3,\n  cdataSection: 4,\n  entityReference: 5,\n  // Deprecated\n  entityNode: 6,\n  // Deprecated\n  progressingInstruction: 7,\n  comment: 8,\n  document: 9,\n  documentType: 10,\n  documentFragment: 11,\n  notation: 12 // Deprecated\n};\nconst getGlobal = function getGlobal() {\n  return typeof window === 'undefined' ? null : window;\n};\n/**\n * Creates a no-op policy for internal use only.\n * Don't export this function outside this module!\n * @param trustedTypes The policy factory.\n * @param purifyHostElement The Script element used to load DOMPurify (to determine policy name suffix).\n * @return The policy created (or null, if Trusted Types\n * are not supported or creating the policy failed).\n */\nconst _createTrustedTypesPolicy = function _createTrustedTypesPolicy(trustedTypes, purifyHostElement) {\n  if (typeof trustedTypes !== 'object' || typeof trustedTypes.createPolicy !== 'function') {\n    return null;\n  }\n  // Allow the callers to control the unique policy name\n  // by adding a data-tt-policy-suffix to the script element with the DOMPurify.\n  // Policy creation with duplicate names throws in Trusted Types.\n  let suffix = null;\n  const ATTR_NAME = 'data-tt-policy-suffix';\n  if (purifyHostElement && purifyHostElement.hasAttribute(ATTR_NAME)) {\n    suffix = purifyHostElement.getAttribute(ATTR_NAME);\n  }\n  const policyName = 'dompurify' + (suffix ? '#' + suffix : '');\n  try {\n    return trustedTypes.createPolicy(policyName, {\n      createHTML(html) {\n        return html;\n      },\n      createScriptURL(scriptUrl) {\n        return scriptUrl;\n      }\n    });\n  } catch (_) {\n    // Policy creation failed (most likely another DOMPurify script has\n    // already run). Skip creating the policy, as this will only cause errors\n    // if TT are enforced.\n    console.warn('TrustedTypes policy ' + policyName + ' could not be created.');\n    return null;\n  }\n};\nconst _createHooksMap = function _createHooksMap() {\n  return {\n    afterSanitizeAttributes: [],\n    afterSanitizeElements: [],\n    afterSanitizeShadowDOM: [],\n    beforeSanitizeAttributes: [],\n    beforeSanitizeElements: [],\n    beforeSanitizeShadowDOM: [],\n    uponSanitizeAttribute: [],\n    uponSanitizeElement: [],\n    uponSanitizeShadowNode: []\n  };\n};\nfunction createDOMPurify() {\n  let window = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : getGlobal();\n  const DOMPurify = root => createDOMPurify(root);\n  DOMPurify.version = '3.2.5';\n  DOMPurify.removed = [];\n  if (!window || !window.document || window.document.nodeType !== NODE_TYPE.document || !window.Element) {\n    // Not running in a browser, provide a factory function\n    // so that you can pass your own Window\n    DOMPurify.isSupported = false;\n    return DOMPurify;\n  }\n  let {\n    document\n  } = window;\n  const originalDocument = document;\n  const currentScript = originalDocument.currentScript;\n  const {\n    DocumentFragment,\n    HTMLTemplateElement,\n    Node,\n    Element,\n    NodeFilter,\n    NamedNodeMap = window.NamedNodeMap || window.MozNamedAttrMap,\n    HTMLFormElement,\n    DOMParser,\n    trustedTypes\n  } = window;\n  const ElementPrototype = Element.prototype;\n  const cloneNode = lookupGetter(ElementPrototype, 'cloneNode');\n  const remove = lookupGetter(ElementPrototype, 'remove');\n  const getNextSibling = lookupGetter(ElementPrototype, 'nextSibling');\n  const getChildNodes = lookupGetter(ElementPrototype, 'childNodes');\n  const getParentNode = lookupGetter(ElementPrototype, 'parentNode');\n  // As per issue #47, the web-components registry is inherited by a\n  // new document created via createHTMLDocument. As per the spec\n  // (http://w3c.github.io/webcomponents/spec/custom/#creating-and-passing-registries)\n  // a new empty registry is used when creating a template contents owner\n  // document, so we use that as our parent document to ensure nothing\n  // is inherited.\n  if (typeof HTMLTemplateElement === 'function') {\n    const template = document.createElement('template');\n    if (template.content && template.content.ownerDocument) {\n      document = template.content.ownerDocument;\n    }\n  }\n  let trustedTypesPolicy;\n  let emptyHTML = '';\n  const {\n    implementation,\n    createNodeIterator,\n    createDocumentFragment,\n    getElementsByTagName\n  } = document;\n  const {\n    importNode\n  } = originalDocument;\n  let hooks = _createHooksMap();\n  /**\n   * Expose whether this browser supports running the full DOMPurify.\n   */\n  DOMPurify.isSupported = typeof entries === 'function' && typeof getParentNode === 'function' && implementation && implementation.createHTMLDocument !== undefined;\n  const {\n    MUSTACHE_EXPR,\n    ERB_EXPR,\n    TMPLIT_EXPR,\n    DATA_ATTR,\n    ARIA_ATTR,\n    IS_SCRIPT_OR_DATA,\n    ATTR_WHITESPACE,\n    CUSTOM_ELEMENT\n  } = EXPRESSIONS;\n  let {\n    IS_ALLOWED_URI: IS_ALLOWED_URI$1\n  } = EXPRESSIONS;\n  /**\n   * We consider the elements and attributes below to be safe. Ideally\n   * don't add any new ones but feel free to remove unwanted ones.\n   */\n  /* allowed element names */\n  let ALLOWED_TAGS = null;\n  const DEFAULT_ALLOWED_TAGS = addToSet({}, [...html$1, ...svg$1, ...svgFilters, ...mathMl$1, ...text]);\n  /* Allowed attribute names */\n  let ALLOWED_ATTR = null;\n  const DEFAULT_ALLOWED_ATTR = addToSet({}, [...html, ...svg, ...mathMl, ...xml]);\n  /*\n   * Configure how DOMPurify should handle custom elements and their attributes as well as customized built-in elements.\n   * @property {RegExp|Function|null} tagNameCheck one of [null, regexPattern, predicate]. Default: `null` (disallow any custom elements)\n   * @property {RegExp|Function|null} attributeNameCheck one of [null, regexPattern, predicate]. Default: `null` (disallow any attributes not on the allow list)\n   * @property {boolean} allowCustomizedBuiltInElements allow custom elements derived from built-ins if they pass CUSTOM_ELEMENT_HANDLING.tagNameCheck. Default: `false`.\n   */\n  let CUSTOM_ELEMENT_HANDLING = Object.seal(create(null, {\n    tagNameCheck: {\n      writable: true,\n      configurable: false,\n      enumerable: true,\n      value: null\n    },\n    attributeNameCheck: {\n      writable: true,\n      configurable: false,\n      enumerable: true,\n      value: null\n    },\n    allowCustomizedBuiltInElements: {\n      writable: true,\n      configurable: false,\n      enumerable: true,\n      value: false\n    }\n  }));\n  /* Explicitly forbidden tags (overrides ALLOWED_TAGS/ADD_TAGS) */\n  let FORBID_TAGS = null;\n  /* Explicitly forbidden attributes (overrides ALLOWED_ATTR/ADD_ATTR) */\n  let FORBID_ATTR = null;\n  /* Decide if ARIA attributes are okay */\n  let ALLOW_ARIA_ATTR = true;\n  /* Decide if custom data attributes are okay */\n  let ALLOW_DATA_ATTR = true;\n  /* Decide if unknown protocols are okay */\n  let ALLOW_UNKNOWN_PROTOCOLS = false;\n  /* Decide if self-closing tags in attributes are allowed.\n   * Usually removed due to a mXSS issue in jQuery 3.0 */\n  let ALLOW_SELF_CLOSE_IN_ATTR = true;\n  /* Output should be safe for common template engines.\n   * This means, DOMPurify removes data attributes, mustaches and ERB\n   */\n  let SAFE_FOR_TEMPLATES = false;\n  /* Output should be safe even for XML used within HTML and alike.\n   * This means, DOMPurify removes comments when containing risky content.\n   */\n  let SAFE_FOR_XML = true;\n  /* Decide if document with <html>... should be returned */\n  let WHOLE_DOCUMENT = false;\n  /* Track whether config is already set on this instance of DOMPurify. */\n  let SET_CONFIG = false;\n  /* Decide if all elements (e.g. style, script) must be children of\n   * document.body. By default, browsers might move them to document.head */\n  let FORCE_BODY = false;\n  /* Decide if a DOM `HTMLBodyElement` should be returned, instead of a html\n   * string (or a TrustedHTML object if Trusted Types are supported).\n   * If `WHOLE_DOCUMENT` is enabled a `HTMLHtmlElement` will be returned instead\n   */\n  let RETURN_DOM = false;\n  /* Decide if a DOM `DocumentFragment` should be returned, instead of a html\n   * string  (or a TrustedHTML object if Trusted Types are supported) */\n  let RETURN_DOM_FRAGMENT = false;\n  /* Try to return a Trusted Type object instead of a string, return a string in\n   * case Trusted Types are not supported  */\n  let RETURN_TRUSTED_TYPE = false;\n  /* Output should be free from DOM clobbering attacks?\n   * This sanitizes markups named with colliding, clobberable built-in DOM APIs.\n   */\n  let SANITIZE_DOM = true;\n  /* Achieve full DOM Clobbering protection by isolating the namespace of named\n   * properties and JS variables, mitigating attacks that abuse the HTML/DOM spec rules.\n   *\n   * HTML/DOM spec rules that enable DOM Clobbering:\n   *   - Named Access on Window (§7.3.3)\n   *   - DOM Tree Accessors (§3.1.5)\n   *   - Form Element Parent-Child Relations (§4.10.3)\n   *   - Iframe srcdoc / Nested WindowProxies (§4.8.5)\n   *   - HTMLCollection (§4.2.10.2)\n   *\n   * Namespace isolation is implemented by prefixing `id` and `name` attributes\n   * with a constant string, i.e., `user-content-`\n   */\n  let SANITIZE_NAMED_PROPS = false;\n  const SANITIZE_NAMED_PROPS_PREFIX = 'user-content-';\n  /* Keep element content when removing element? */\n  let KEEP_CONTENT = true;\n  /* If a `Node` is passed to sanitize(), then performs sanitization in-place instead\n   * of importing it into a new Document and returning a sanitized copy */\n  let IN_PLACE = false;\n  /* Allow usage of profiles like html, svg and mathMl */\n  let USE_PROFILES = {};\n  /* Tags to ignore content of when KEEP_CONTENT is true */\n  let FORBID_CONTENTS = null;\n  const DEFAULT_FORBID_CONTENTS = addToSet({}, ['annotation-xml', 'audio', 'colgroup', 'desc', 'foreignobject', 'head', 'iframe', 'math', 'mi', 'mn', 'mo', 'ms', 'mtext', 'noembed', 'noframes', 'noscript', 'plaintext', 'script', 'style', 'svg', 'template', 'thead', 'title', 'video', 'xmp']);\n  /* Tags that are safe for data: URIs */\n  let DATA_URI_TAGS = null;\n  const DEFAULT_DATA_URI_TAGS = addToSet({}, ['audio', 'video', 'img', 'source', 'image', 'track']);\n  /* Attributes safe for values like \"javascript:\" */\n  let URI_SAFE_ATTRIBUTES = null;\n  const DEFAULT_URI_SAFE_ATTRIBUTES = addToSet({}, ['alt', 'class', 'for', 'id', 'label', 'name', 'pattern', 'placeholder', 'role', 'summary', 'title', 'value', 'style', 'xmlns']);\n  const MATHML_NAMESPACE = 'http://www.w3.org/1998/Math/MathML';\n  const SVG_NAMESPACE = 'http://www.w3.org/2000/svg';\n  const HTML_NAMESPACE = 'http://www.w3.org/1999/xhtml';\n  /* Document namespace */\n  let NAMESPACE = HTML_NAMESPACE;\n  let IS_EMPTY_INPUT = false;\n  /* Allowed XHTML+XML namespaces */\n  let ALLOWED_NAMESPACES = null;\n  const DEFAULT_ALLOWED_NAMESPACES = addToSet({}, [MATHML_NAMESPACE, SVG_NAMESPACE, HTML_NAMESPACE], stringToString);\n  let MATHML_TEXT_INTEGRATION_POINTS = addToSet({}, ['mi', 'mo', 'mn', 'ms', 'mtext']);\n  let HTML_INTEGRATION_POINTS = addToSet({}, ['annotation-xml']);\n  // Certain elements are allowed in both SVG and HTML\n  // namespace. We need to specify them explicitly\n  // so that they don't get erroneously deleted from\n  // HTML namespace.\n  const COMMON_SVG_AND_HTML_ELEMENTS = addToSet({}, ['title', 'style', 'font', 'a', 'script']);\n  /* Parsing of strict XHTML documents */\n  let PARSER_MEDIA_TYPE = null;\n  const SUPPORTED_PARSER_MEDIA_TYPES = ['application/xhtml+xml', 'text/html'];\n  const DEFAULT_PARSER_MEDIA_TYPE = 'text/html';\n  let transformCaseFunc = null;\n  /* Keep a reference to config to pass to hooks */\n  let CONFIG = null;\n  /* Ideally, do not touch anything below this line */\n  /* ______________________________________________ */\n  const formElement = document.createElement('form');\n  const isRegexOrFunction = function isRegexOrFunction(testValue) {\n    return testValue instanceof RegExp || testValue instanceof Function;\n  };\n  /**\n   * _parseConfig\n   *\n   * @param cfg optional config literal\n   */\n  // eslint-disable-next-line complexity\n  const _parseConfig = function _parseConfig() {\n    let cfg = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    if (CONFIG && CONFIG === cfg) {\n      return;\n    }\n    /* Shield configuration object from tampering */\n    if (!cfg || typeof cfg !== 'object') {\n      cfg = {};\n    }\n    /* Shield configuration object from prototype pollution */\n    cfg = clone(cfg);\n    PARSER_MEDIA_TYPE =\n    // eslint-disable-next-line unicorn/prefer-includes\n    SUPPORTED_PARSER_MEDIA_TYPES.indexOf(cfg.PARSER_MEDIA_TYPE) === -1 ? DEFAULT_PARSER_MEDIA_TYPE : cfg.PARSER_MEDIA_TYPE;\n    // HTML tags and attributes are not case-sensitive, converting to lowercase. Keeping XHTML as is.\n    transformCaseFunc = PARSER_MEDIA_TYPE === 'application/xhtml+xml' ? stringToString : stringToLowerCase;\n    /* Set configuration parameters */\n    ALLOWED_TAGS = objectHasOwnProperty(cfg, 'ALLOWED_TAGS') ? addToSet({}, cfg.ALLOWED_TAGS, transformCaseFunc) : DEFAULT_ALLOWED_TAGS;\n    ALLOWED_ATTR = objectHasOwnProperty(cfg, 'ALLOWED_ATTR') ? addToSet({}, cfg.ALLOWED_ATTR, transformCaseFunc) : DEFAULT_ALLOWED_ATTR;\n    ALLOWED_NAMESPACES = objectHasOwnProperty(cfg, 'ALLOWED_NAMESPACES') ? addToSet({}, cfg.ALLOWED_NAMESPACES, stringToString) : DEFAULT_ALLOWED_NAMESPACES;\n    URI_SAFE_ATTRIBUTES = objectHasOwnProperty(cfg, 'ADD_URI_SAFE_ATTR') ? addToSet(clone(DEFAULT_URI_SAFE_ATTRIBUTES), cfg.ADD_URI_SAFE_ATTR, transformCaseFunc) : DEFAULT_URI_SAFE_ATTRIBUTES;\n    DATA_URI_TAGS = objectHasOwnProperty(cfg, 'ADD_DATA_URI_TAGS') ? addToSet(clone(DEFAULT_DATA_URI_TAGS), cfg.ADD_DATA_URI_TAGS, transformCaseFunc) : DEFAULT_DATA_URI_TAGS;\n    FORBID_CONTENTS = objectHasOwnProperty(cfg, 'FORBID_CONTENTS') ? addToSet({}, cfg.FORBID_CONTENTS, transformCaseFunc) : DEFAULT_FORBID_CONTENTS;\n    FORBID_TAGS = objectHasOwnProperty(cfg, 'FORBID_TAGS') ? addToSet({}, cfg.FORBID_TAGS, transformCaseFunc) : {};\n    FORBID_ATTR = objectHasOwnProperty(cfg, 'FORBID_ATTR') ? addToSet({}, cfg.FORBID_ATTR, transformCaseFunc) : {};\n    USE_PROFILES = objectHasOwnProperty(cfg, 'USE_PROFILES') ? cfg.USE_PROFILES : false;\n    ALLOW_ARIA_ATTR = cfg.ALLOW_ARIA_ATTR !== false; // Default true\n    ALLOW_DATA_ATTR = cfg.ALLOW_DATA_ATTR !== false; // Default true\n    ALLOW_UNKNOWN_PROTOCOLS = cfg.ALLOW_UNKNOWN_PROTOCOLS || false; // Default false\n    ALLOW_SELF_CLOSE_IN_ATTR = cfg.ALLOW_SELF_CLOSE_IN_ATTR !== false; // Default true\n    SAFE_FOR_TEMPLATES = cfg.SAFE_FOR_TEMPLATES || false; // Default false\n    SAFE_FOR_XML = cfg.SAFE_FOR_XML !== false; // Default true\n    WHOLE_DOCUMENT = cfg.WHOLE_DOCUMENT || false; // Default false\n    RETURN_DOM = cfg.RETURN_DOM || false; // Default false\n    RETURN_DOM_FRAGMENT = cfg.RETURN_DOM_FRAGMENT || false; // Default false\n    RETURN_TRUSTED_TYPE = cfg.RETURN_TRUSTED_TYPE || false; // Default false\n    FORCE_BODY = cfg.FORCE_BODY || false; // Default false\n    SANITIZE_DOM = cfg.SANITIZE_DOM !== false; // Default true\n    SANITIZE_NAMED_PROPS = cfg.SANITIZE_NAMED_PROPS || false; // Default false\n    KEEP_CONTENT = cfg.KEEP_CONTENT !== false; // Default true\n    IN_PLACE = cfg.IN_PLACE || false; // Default false\n    IS_ALLOWED_URI$1 = cfg.ALLOWED_URI_REGEXP || IS_ALLOWED_URI;\n    NAMESPACE = cfg.NAMESPACE || HTML_NAMESPACE;\n    MATHML_TEXT_INTEGRATION_POINTS = cfg.MATHML_TEXT_INTEGRATION_POINTS || MATHML_TEXT_INTEGRATION_POINTS;\n    HTML_INTEGRATION_POINTS = cfg.HTML_INTEGRATION_POINTS || HTML_INTEGRATION_POINTS;\n    CUSTOM_ELEMENT_HANDLING = cfg.CUSTOM_ELEMENT_HANDLING || {};\n    if (cfg.CUSTOM_ELEMENT_HANDLING && isRegexOrFunction(cfg.CUSTOM_ELEMENT_HANDLING.tagNameCheck)) {\n      CUSTOM_ELEMENT_HANDLING.tagNameCheck = cfg.CUSTOM_ELEMENT_HANDLING.tagNameCheck;\n    }\n    if (cfg.CUSTOM_ELEMENT_HANDLING && isRegexOrFunction(cfg.CUSTOM_ELEMENT_HANDLING.attributeNameCheck)) {\n      CUSTOM_ELEMENT_HANDLING.attributeNameCheck = cfg.CUSTOM_ELEMENT_HANDLING.attributeNameCheck;\n    }\n    if (cfg.CUSTOM_ELEMENT_HANDLING && typeof cfg.CUSTOM_ELEMENT_HANDLING.allowCustomizedBuiltInElements === 'boolean') {\n      CUSTOM_ELEMENT_HANDLING.allowCustomizedBuiltInElements = cfg.CUSTOM_ELEMENT_HANDLING.allowCustomizedBuiltInElements;\n    }\n    if (SAFE_FOR_TEMPLATES) {\n      ALLOW_DATA_ATTR = false;\n    }\n    if (RETURN_DOM_FRAGMENT) {\n      RETURN_DOM = true;\n    }\n    /* Parse profile info */\n    if (USE_PROFILES) {\n      ALLOWED_TAGS = addToSet({}, text);\n      ALLOWED_ATTR = [];\n      if (USE_PROFILES.html === true) {\n        addToSet(ALLOWED_TAGS, html$1);\n        addToSet(ALLOWED_ATTR, html);\n      }\n      if (USE_PROFILES.svg === true) {\n        addToSet(ALLOWED_TAGS, svg$1);\n        addToSet(ALLOWED_ATTR, svg);\n        addToSet(ALLOWED_ATTR, xml);\n      }\n      if (USE_PROFILES.svgFilters === true) {\n        addToSet(ALLOWED_TAGS, svgFilters);\n        addToSet(ALLOWED_ATTR, svg);\n        addToSet(ALLOWED_ATTR, xml);\n      }\n      if (USE_PROFILES.mathMl === true) {\n        addToSet(ALLOWED_TAGS, mathMl$1);\n        addToSet(ALLOWED_ATTR, mathMl);\n        addToSet(ALLOWED_ATTR, xml);\n      }\n    }\n    /* Merge configuration parameters */\n    if (cfg.ADD_TAGS) {\n      if (ALLOWED_TAGS === DEFAULT_ALLOWED_TAGS) {\n        ALLOWED_TAGS = clone(ALLOWED_TAGS);\n      }\n      addToSet(ALLOWED_TAGS, cfg.ADD_TAGS, transformCaseFunc);\n    }\n    if (cfg.ADD_ATTR) {\n      if (ALLOWED_ATTR === DEFAULT_ALLOWED_ATTR) {\n        ALLOWED_ATTR = clone(ALLOWED_ATTR);\n      }\n      addToSet(ALLOWED_ATTR, cfg.ADD_ATTR, transformCaseFunc);\n    }\n    if (cfg.ADD_URI_SAFE_ATTR) {\n      addToSet(URI_SAFE_ATTRIBUTES, cfg.ADD_URI_SAFE_ATTR, transformCaseFunc);\n    }\n    if (cfg.FORBID_CONTENTS) {\n      if (FORBID_CONTENTS === DEFAULT_FORBID_CONTENTS) {\n        FORBID_CONTENTS = clone(FORBID_CONTENTS);\n      }\n      addToSet(FORBID_CONTENTS, cfg.FORBID_CONTENTS, transformCaseFunc);\n    }\n    /* Add #text in case KEEP_CONTENT is set to true */\n    if (KEEP_CONTENT) {\n      ALLOWED_TAGS['#text'] = true;\n    }\n    /* Add html, head and body to ALLOWED_TAGS in case WHOLE_DOCUMENT is true */\n    if (WHOLE_DOCUMENT) {\n      addToSet(ALLOWED_TAGS, ['html', 'head', 'body']);\n    }\n    /* Add tbody to ALLOWED_TAGS in case tables are permitted, see #286, #365 */\n    if (ALLOWED_TAGS.table) {\n      addToSet(ALLOWED_TAGS, ['tbody']);\n      delete FORBID_TAGS.tbody;\n    }\n    if (cfg.TRUSTED_TYPES_POLICY) {\n      if (typeof cfg.TRUSTED_TYPES_POLICY.createHTML !== 'function') {\n        throw typeErrorCreate('TRUSTED_TYPES_POLICY configuration option must provide a \"createHTML\" hook.');\n      }\n      if (typeof cfg.TRUSTED_TYPES_POLICY.createScriptURL !== 'function') {\n        throw typeErrorCreate('TRUSTED_TYPES_POLICY configuration option must provide a \"createScriptURL\" hook.');\n      }\n      // Overwrite existing TrustedTypes policy.\n      trustedTypesPolicy = cfg.TRUSTED_TYPES_POLICY;\n      // Sign local variables required by `sanitize`.\n      emptyHTML = trustedTypesPolicy.createHTML('');\n    } else {\n      // Uninitialized policy, attempt to initialize the internal dompurify policy.\n      if (trustedTypesPolicy === undefined) {\n        trustedTypesPolicy = _createTrustedTypesPolicy(trustedTypes, currentScript);\n      }\n      // If creating the internal policy succeeded sign internal variables.\n      if (trustedTypesPolicy !== null && typeof emptyHTML === 'string') {\n        emptyHTML = trustedTypesPolicy.createHTML('');\n      }\n    }\n    // Prevent further manipulation of configuration.\n    // Not available in IE8, Safari 5, etc.\n    if (freeze) {\n      freeze(cfg);\n    }\n    CONFIG = cfg;\n  };\n  /* Keep track of all possible SVG and MathML tags\n   * so that we can perform the namespace checks\n   * correctly. */\n  const ALL_SVG_TAGS = addToSet({}, [...svg$1, ...svgFilters, ...svgDisallowed]);\n  const ALL_MATHML_TAGS = addToSet({}, [...mathMl$1, ...mathMlDisallowed]);\n  /**\n   * @param element a DOM element whose namespace is being checked\n   * @returns Return false if the element has a\n   *  namespace that a spec-compliant parser would never\n   *  return. Return true otherwise.\n   */\n  const _checkValidNamespace = function _checkValidNamespace(element) {\n    let parent = getParentNode(element);\n    // In JSDOM, if we're inside shadow DOM, then parentNode\n    // can be null. We just simulate parent in this case.\n    if (!parent || !parent.tagName) {\n      parent = {\n        namespaceURI: NAMESPACE,\n        tagName: 'template'\n      };\n    }\n    const tagName = stringToLowerCase(element.tagName);\n    const parentTagName = stringToLowerCase(parent.tagName);\n    if (!ALLOWED_NAMESPACES[element.namespaceURI]) {\n      return false;\n    }\n    if (element.namespaceURI === SVG_NAMESPACE) {\n      // The only way to switch from HTML namespace to SVG\n      // is via <svg>. If it happens via any other tag, then\n      // it should be killed.\n      if (parent.namespaceURI === HTML_NAMESPACE) {\n        return tagName === 'svg';\n      }\n      // The only way to switch from MathML to SVG is via`\n      // svg if parent is either <annotation-xml> or MathML\n      // text integration points.\n      if (parent.namespaceURI === MATHML_NAMESPACE) {\n        return tagName === 'svg' && (parentTagName === 'annotation-xml' || MATHML_TEXT_INTEGRATION_POINTS[parentTagName]);\n      }\n      // We only allow elements that are defined in SVG\n      // spec. All others are disallowed in SVG namespace.\n      return Boolean(ALL_SVG_TAGS[tagName]);\n    }\n    if (element.namespaceURI === MATHML_NAMESPACE) {\n      // The only way to switch from HTML namespace to MathML\n      // is via <math>. If it happens via any other tag, then\n      // it should be killed.\n      if (parent.namespaceURI === HTML_NAMESPACE) {\n        return tagName === 'math';\n      }\n      // The only way to switch from SVG to MathML is via\n      // <math> and HTML integration points\n      if (parent.namespaceURI === SVG_NAMESPACE) {\n        return tagName === 'math' && HTML_INTEGRATION_POINTS[parentTagName];\n      }\n      // We only allow elements that are defined in MathML\n      // spec. All others are disallowed in MathML namespace.\n      return Boolean(ALL_MATHML_TAGS[tagName]);\n    }\n    if (element.namespaceURI === HTML_NAMESPACE) {\n      // The only way to switch from SVG to HTML is via\n      // HTML integration points, and from MathML to HTML\n      // is via MathML text integration points\n      if (parent.namespaceURI === SVG_NAMESPACE && !HTML_INTEGRATION_POINTS[parentTagName]) {\n        return false;\n      }\n      if (parent.namespaceURI === MATHML_NAMESPACE && !MATHML_TEXT_INTEGRATION_POINTS[parentTagName]) {\n        return false;\n      }\n      // We disallow tags that are specific for MathML\n      // or SVG and should never appear in HTML namespace\n      return !ALL_MATHML_TAGS[tagName] && (COMMON_SVG_AND_HTML_ELEMENTS[tagName] || !ALL_SVG_TAGS[tagName]);\n    }\n    // For XHTML and XML documents that support custom namespaces\n    if (PARSER_MEDIA_TYPE === 'application/xhtml+xml' && ALLOWED_NAMESPACES[element.namespaceURI]) {\n      return true;\n    }\n    // The code should never reach this place (this means\n    // that the element somehow got namespace that is not\n    // HTML, SVG, MathML or allowed via ALLOWED_NAMESPACES).\n    // Return false just in case.\n    return false;\n  };\n  /**\n   * _forceRemove\n   *\n   * @param node a DOM node\n   */\n  const _forceRemove = function _forceRemove(node) {\n    arrayPush(DOMPurify.removed, {\n      element: node\n    });\n    try {\n      // eslint-disable-next-line unicorn/prefer-dom-node-remove\n      getParentNode(node).removeChild(node);\n    } catch (_) {\n      remove(node);\n    }\n  };\n  /**\n   * _removeAttribute\n   *\n   * @param name an Attribute name\n   * @param element a DOM node\n   */\n  const _removeAttribute = function _removeAttribute(name, element) {\n    try {\n      arrayPush(DOMPurify.removed, {\n        attribute: element.getAttributeNode(name),\n        from: element\n      });\n    } catch (_) {\n      arrayPush(DOMPurify.removed, {\n        attribute: null,\n        from: element\n      });\n    }\n    element.removeAttribute(name);\n    // We void attribute values for unremovable \"is\" attributes\n    if (name === 'is') {\n      if (RETURN_DOM || RETURN_DOM_FRAGMENT) {\n        try {\n          _forceRemove(element);\n        } catch (_) {}\n      } else {\n        try {\n          element.setAttribute(name, '');\n        } catch (_) {}\n      }\n    }\n  };\n  /**\n   * _initDocument\n   *\n   * @param dirty - a string of dirty markup\n   * @return a DOM, filled with the dirty markup\n   */\n  const _initDocument = function _initDocument(dirty) {\n    /* Create a HTML document */\n    let doc = null;\n    let leadingWhitespace = null;\n    if (FORCE_BODY) {\n      dirty = '<remove></remove>' + dirty;\n    } else {\n      /* If FORCE_BODY isn't used, leading whitespace needs to be preserved manually */\n      const matches = stringMatch(dirty, /^[\\r\\n\\t ]+/);\n      leadingWhitespace = matches && matches[0];\n    }\n    if (PARSER_MEDIA_TYPE === 'application/xhtml+xml' && NAMESPACE === HTML_NAMESPACE) {\n      // Root of XHTML doc must contain xmlns declaration (see https://www.w3.org/TR/xhtml1/normative.html#strict)\n      dirty = '<html xmlns=\"http://www.w3.org/1999/xhtml\"><head></head><body>' + dirty + '</body></html>';\n    }\n    const dirtyPayload = trustedTypesPolicy ? trustedTypesPolicy.createHTML(dirty) : dirty;\n    /*\n     * Use the DOMParser API by default, fallback later if needs be\n     * DOMParser not work for svg when has multiple root element.\n     */\n    if (NAMESPACE === HTML_NAMESPACE) {\n      try {\n        doc = new DOMParser().parseFromString(dirtyPayload, PARSER_MEDIA_TYPE);\n      } catch (_) {}\n    }\n    /* Use createHTMLDocument in case DOMParser is not available */\n    if (!doc || !doc.documentElement) {\n      doc = implementation.createDocument(NAMESPACE, 'template', null);\n      try {\n        doc.documentElement.innerHTML = IS_EMPTY_INPUT ? emptyHTML : dirtyPayload;\n      } catch (_) {\n        // Syntax error if dirtyPayload is invalid xml\n      }\n    }\n    const body = doc.body || doc.documentElement;\n    if (dirty && leadingWhitespace) {\n      body.insertBefore(document.createTextNode(leadingWhitespace), body.childNodes[0] || null);\n    }\n    /* Work on whole document or just its body */\n    if (NAMESPACE === HTML_NAMESPACE) {\n      return getElementsByTagName.call(doc, WHOLE_DOCUMENT ? 'html' : 'body')[0];\n    }\n    return WHOLE_DOCUMENT ? doc.documentElement : body;\n  };\n  /**\n   * Creates a NodeIterator object that you can use to traverse filtered lists of nodes or elements in a document.\n   *\n   * @param root The root element or node to start traversing on.\n   * @return The created NodeIterator\n   */\n  const _createNodeIterator = function _createNodeIterator(root) {\n    return createNodeIterator.call(root.ownerDocument || root, root,\n    // eslint-disable-next-line no-bitwise\n    NodeFilter.SHOW_ELEMENT | NodeFilter.SHOW_COMMENT | NodeFilter.SHOW_TEXT | NodeFilter.SHOW_PROCESSING_INSTRUCTION | NodeFilter.SHOW_CDATA_SECTION, null);\n  };\n  /**\n   * _isClobbered\n   *\n   * @param element element to check for clobbering attacks\n   * @return true if clobbered, false if safe\n   */\n  const _isClobbered = function _isClobbered(element) {\n    return element instanceof HTMLFormElement && (typeof element.nodeName !== 'string' || typeof element.textContent !== 'string' || typeof element.removeChild !== 'function' || !(element.attributes instanceof NamedNodeMap) || typeof element.removeAttribute !== 'function' || typeof element.setAttribute !== 'function' || typeof element.namespaceURI !== 'string' || typeof element.insertBefore !== 'function' || typeof element.hasChildNodes !== 'function');\n  };\n  /**\n   * Checks whether the given object is a DOM node.\n   *\n   * @param value object to check whether it's a DOM node\n   * @return true is object is a DOM node\n   */\n  const _isNode = function _isNode(value) {\n    return typeof Node === 'function' && value instanceof Node;\n  };\n  function _executeHooks(hooks, currentNode, data) {\n    arrayForEach(hooks, hook => {\n      hook.call(DOMPurify, currentNode, data, CONFIG);\n    });\n  }\n  /**\n   * _sanitizeElements\n   *\n   * @protect nodeName\n   * @protect textContent\n   * @protect removeChild\n   * @param currentNode to check for permission to exist\n   * @return true if node was killed, false if left alive\n   */\n  const _sanitizeElements = function _sanitizeElements(currentNode) {\n    let content = null;\n    /* Execute a hook if present */\n    _executeHooks(hooks.beforeSanitizeElements, currentNode, null);\n    /* Check if element is clobbered or can clobber */\n    if (_isClobbered(currentNode)) {\n      _forceRemove(currentNode);\n      return true;\n    }\n    /* Now let's check the element's type and name */\n    const tagName = transformCaseFunc(currentNode.nodeName);\n    /* Execute a hook if present */\n    _executeHooks(hooks.uponSanitizeElement, currentNode, {\n      tagName,\n      allowedTags: ALLOWED_TAGS\n    });\n    /* Detect mXSS attempts abusing namespace confusion */\n    if (currentNode.hasChildNodes() && !_isNode(currentNode.firstElementChild) && regExpTest(/<[/\\w!]/g, currentNode.innerHTML) && regExpTest(/<[/\\w!]/g, currentNode.textContent)) {\n      _forceRemove(currentNode);\n      return true;\n    }\n    /* Remove any occurrence of processing instructions */\n    if (currentNode.nodeType === NODE_TYPE.progressingInstruction) {\n      _forceRemove(currentNode);\n      return true;\n    }\n    /* Remove any kind of possibly harmful comments */\n    if (SAFE_FOR_XML && currentNode.nodeType === NODE_TYPE.comment && regExpTest(/<[/\\w]/g, currentNode.data)) {\n      _forceRemove(currentNode);\n      return true;\n    }\n    /* Remove element if anything forbids its presence */\n    if (!ALLOWED_TAGS[tagName] || FORBID_TAGS[tagName]) {\n      /* Check if we have a custom element to handle */\n      if (!FORBID_TAGS[tagName] && _isBasicCustomElement(tagName)) {\n        if (CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof RegExp && regExpTest(CUSTOM_ELEMENT_HANDLING.tagNameCheck, tagName)) {\n          return false;\n        }\n        if (CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof Function && CUSTOM_ELEMENT_HANDLING.tagNameCheck(tagName)) {\n          return false;\n        }\n      }\n      /* Keep content except for bad-listed elements */\n      if (KEEP_CONTENT && !FORBID_CONTENTS[tagName]) {\n        const parentNode = getParentNode(currentNode) || currentNode.parentNode;\n        const childNodes = getChildNodes(currentNode) || currentNode.childNodes;\n        if (childNodes && parentNode) {\n          const childCount = childNodes.length;\n          for (let i = childCount - 1; i >= 0; --i) {\n            const childClone = cloneNode(childNodes[i], true);\n            childClone.__removalCount = (currentNode.__removalCount || 0) + 1;\n            parentNode.insertBefore(childClone, getNextSibling(currentNode));\n          }\n        }\n      }\n      _forceRemove(currentNode);\n      return true;\n    }\n    /* Check whether element has a valid namespace */\n    if (currentNode instanceof Element && !_checkValidNamespace(currentNode)) {\n      _forceRemove(currentNode);\n      return true;\n    }\n    /* Make sure that older browsers don't get fallback-tag mXSS */\n    if ((tagName === 'noscript' || tagName === 'noembed' || tagName === 'noframes') && regExpTest(/<\\/no(script|embed|frames)/i, currentNode.innerHTML)) {\n      _forceRemove(currentNode);\n      return true;\n    }\n    /* Sanitize element content to be template-safe */\n    if (SAFE_FOR_TEMPLATES && currentNode.nodeType === NODE_TYPE.text) {\n      /* Get the element's text content */\n      content = currentNode.textContent;\n      arrayForEach([MUSTACHE_EXPR, ERB_EXPR, TMPLIT_EXPR], expr => {\n        content = stringReplace(content, expr, ' ');\n      });\n      if (currentNode.textContent !== content) {\n        arrayPush(DOMPurify.removed, {\n          element: currentNode.cloneNode()\n        });\n        currentNode.textContent = content;\n      }\n    }\n    /* Execute a hook if present */\n    _executeHooks(hooks.afterSanitizeElements, currentNode, null);\n    return false;\n  };\n  /**\n   * _isValidAttribute\n   *\n   * @param lcTag Lowercase tag name of containing element.\n   * @param lcName Lowercase attribute name.\n   * @param value Attribute value.\n   * @return Returns true if `value` is valid, otherwise false.\n   */\n  // eslint-disable-next-line complexity\n  const _isValidAttribute = function _isValidAttribute(lcTag, lcName, value) {\n    /* Make sure attribute cannot clobber */\n    if (SANITIZE_DOM && (lcName === 'id' || lcName === 'name') && (value in document || value in formElement)) {\n      return false;\n    }\n    /* Allow valid data-* attributes: At least one character after \"-\"\n        (https://html.spec.whatwg.org/multipage/dom.html#embedding-custom-non-visible-data-with-the-data-*-attributes)\n        XML-compatible (https://html.spec.whatwg.org/multipage/infrastructure.html#xml-compatible and http://www.w3.org/TR/xml/#d0e804)\n        We don't need to check the value; it's always URI safe. */\n    if (ALLOW_DATA_ATTR && !FORBID_ATTR[lcName] && regExpTest(DATA_ATTR, lcName)) ; else if (ALLOW_ARIA_ATTR && regExpTest(ARIA_ATTR, lcName)) ; else if (!ALLOWED_ATTR[lcName] || FORBID_ATTR[lcName]) {\n      if (\n      // First condition does a very basic check if a) it's basically a valid custom element tagname AND\n      // b) if the tagName passes whatever the user has configured for CUSTOM_ELEMENT_HANDLING.tagNameCheck\n      // and c) if the attribute name passes whatever the user has configured for CUSTOM_ELEMENT_HANDLING.attributeNameCheck\n      _isBasicCustomElement(lcTag) && (CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof RegExp && regExpTest(CUSTOM_ELEMENT_HANDLING.tagNameCheck, lcTag) || CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof Function && CUSTOM_ELEMENT_HANDLING.tagNameCheck(lcTag)) && (CUSTOM_ELEMENT_HANDLING.attributeNameCheck instanceof RegExp && regExpTest(CUSTOM_ELEMENT_HANDLING.attributeNameCheck, lcName) || CUSTOM_ELEMENT_HANDLING.attributeNameCheck instanceof Function && CUSTOM_ELEMENT_HANDLING.attributeNameCheck(lcName)) ||\n      // Alternative, second condition checks if it's an `is`-attribute, AND\n      // the value passes whatever the user has configured for CUSTOM_ELEMENT_HANDLING.tagNameCheck\n      lcName === 'is' && CUSTOM_ELEMENT_HANDLING.allowCustomizedBuiltInElements && (CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof RegExp && regExpTest(CUSTOM_ELEMENT_HANDLING.tagNameCheck, value) || CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof Function && CUSTOM_ELEMENT_HANDLING.tagNameCheck(value))) ; else {\n        return false;\n      }\n      /* Check value is safe. First, is attr inert? If so, is safe */\n    } else if (URI_SAFE_ATTRIBUTES[lcName]) ; else if (regExpTest(IS_ALLOWED_URI$1, stringReplace(value, ATTR_WHITESPACE, ''))) ; else if ((lcName === 'src' || lcName === 'xlink:href' || lcName === 'href') && lcTag !== 'script' && stringIndexOf(value, 'data:') === 0 && DATA_URI_TAGS[lcTag]) ; else if (ALLOW_UNKNOWN_PROTOCOLS && !regExpTest(IS_SCRIPT_OR_DATA, stringReplace(value, ATTR_WHITESPACE, ''))) ; else if (value) {\n      return false;\n    } else ;\n    return true;\n  };\n  /**\n   * _isBasicCustomElement\n   * checks if at least one dash is included in tagName, and it's not the first char\n   * for more sophisticated checking see https://github.com/sindresorhus/validate-element-name\n   *\n   * @param tagName name of the tag of the node to sanitize\n   * @returns Returns true if the tag name meets the basic criteria for a custom element, otherwise false.\n   */\n  const _isBasicCustomElement = function _isBasicCustomElement(tagName) {\n    return tagName !== 'annotation-xml' && stringMatch(tagName, CUSTOM_ELEMENT);\n  };\n  /**\n   * _sanitizeAttributes\n   *\n   * @protect attributes\n   * @protect nodeName\n   * @protect removeAttribute\n   * @protect setAttribute\n   *\n   * @param currentNode to sanitize\n   */\n  const _sanitizeAttributes = function _sanitizeAttributes(currentNode) {\n    /* Execute a hook if present */\n    _executeHooks(hooks.beforeSanitizeAttributes, currentNode, null);\n    const {\n      attributes\n    } = currentNode;\n    /* Check if we have attributes; if not we might have a text node */\n    if (!attributes || _isClobbered(currentNode)) {\n      return;\n    }\n    const hookEvent = {\n      attrName: '',\n      attrValue: '',\n      keepAttr: true,\n      allowedAttributes: ALLOWED_ATTR,\n      forceKeepAttr: undefined\n    };\n    let l = attributes.length;\n    /* Go backwards over all attributes; safely remove bad ones */\n    while (l--) {\n      const attr = attributes[l];\n      const {\n        name,\n        namespaceURI,\n        value: attrValue\n      } = attr;\n      const lcName = transformCaseFunc(name);\n      let value = name === 'value' ? attrValue : stringTrim(attrValue);\n      /* Execute a hook if present */\n      hookEvent.attrName = lcName;\n      hookEvent.attrValue = value;\n      hookEvent.keepAttr = true;\n      hookEvent.forceKeepAttr = undefined; // Allows developers to see this is a property they can set\n      _executeHooks(hooks.uponSanitizeAttribute, currentNode, hookEvent);\n      value = hookEvent.attrValue;\n      /* Full DOM Clobbering protection via namespace isolation,\n       * Prefix id and name attributes with `user-content-`\n       */\n      if (SANITIZE_NAMED_PROPS && (lcName === 'id' || lcName === 'name')) {\n        // Remove the attribute with this value\n        _removeAttribute(name, currentNode);\n        // Prefix the value and later re-create the attribute with the sanitized value\n        value = SANITIZE_NAMED_PROPS_PREFIX + value;\n      }\n      /* Work around a security issue with comments inside attributes */\n      if (SAFE_FOR_XML && regExpTest(/((--!?|])>)|<\\/(style|title)/i, value)) {\n        _removeAttribute(name, currentNode);\n        continue;\n      }\n      /* Did the hooks approve of the attribute? */\n      if (hookEvent.forceKeepAttr) {\n        continue;\n      }\n      /* Remove attribute */\n      _removeAttribute(name, currentNode);\n      /* Did the hooks approve of the attribute? */\n      if (!hookEvent.keepAttr) {\n        continue;\n      }\n      /* Work around a security issue in jQuery 3.0 */\n      if (!ALLOW_SELF_CLOSE_IN_ATTR && regExpTest(/\\/>/i, value)) {\n        _removeAttribute(name, currentNode);\n        continue;\n      }\n      /* Sanitize attribute content to be template-safe */\n      if (SAFE_FOR_TEMPLATES) {\n        arrayForEach([MUSTACHE_EXPR, ERB_EXPR, TMPLIT_EXPR], expr => {\n          value = stringReplace(value, expr, ' ');\n        });\n      }\n      /* Is `value` valid for this attribute? */\n      const lcTag = transformCaseFunc(currentNode.nodeName);\n      if (!_isValidAttribute(lcTag, lcName, value)) {\n        continue;\n      }\n      /* Handle attributes that require Trusted Types */\n      if (trustedTypesPolicy && typeof trustedTypes === 'object' && typeof trustedTypes.getAttributeType === 'function') {\n        if (namespaceURI) ; else {\n          switch (trustedTypes.getAttributeType(lcTag, lcName)) {\n            case 'TrustedHTML':\n              {\n                value = trustedTypesPolicy.createHTML(value);\n                break;\n              }\n            case 'TrustedScriptURL':\n              {\n                value = trustedTypesPolicy.createScriptURL(value);\n                break;\n              }\n          }\n        }\n      }\n      /* Handle invalid data-* attribute set by try-catching it */\n      try {\n        if (namespaceURI) {\n          currentNode.setAttributeNS(namespaceURI, name, value);\n        } else {\n          /* Fallback to setAttribute() for browser-unrecognized namespaces e.g. \"x-schema\". */\n          currentNode.setAttribute(name, value);\n        }\n        if (_isClobbered(currentNode)) {\n          _forceRemove(currentNode);\n        } else {\n          arrayPop(DOMPurify.removed);\n        }\n      } catch (_) {}\n    }\n    /* Execute a hook if present */\n    _executeHooks(hooks.afterSanitizeAttributes, currentNode, null);\n  };\n  /**\n   * _sanitizeShadowDOM\n   *\n   * @param fragment to iterate over recursively\n   */\n  const _sanitizeShadowDOM = function _sanitizeShadowDOM(fragment) {\n    let shadowNode = null;\n    const shadowIterator = _createNodeIterator(fragment);\n    /* Execute a hook if present */\n    _executeHooks(hooks.beforeSanitizeShadowDOM, fragment, null);\n    while (shadowNode = shadowIterator.nextNode()) {\n      /* Execute a hook if present */\n      _executeHooks(hooks.uponSanitizeShadowNode, shadowNode, null);\n      /* Sanitize tags and elements */\n      _sanitizeElements(shadowNode);\n      /* Check attributes next */\n      _sanitizeAttributes(shadowNode);\n      /* Deep shadow DOM detected */\n      if (shadowNode.content instanceof DocumentFragment) {\n        _sanitizeShadowDOM(shadowNode.content);\n      }\n    }\n    /* Execute a hook if present */\n    _executeHooks(hooks.afterSanitizeShadowDOM, fragment, null);\n  };\n  // eslint-disable-next-line complexity\n  DOMPurify.sanitize = function (dirty) {\n    let cfg = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    let body = null;\n    let importedNode = null;\n    let currentNode = null;\n    let returnNode = null;\n    /* Make sure we have a string to sanitize.\n      DO NOT return early, as this will return the wrong type if\n      the user has requested a DOM object rather than a string */\n    IS_EMPTY_INPUT = !dirty;\n    if (IS_EMPTY_INPUT) {\n      dirty = '<!-->';\n    }\n    /* Stringify, in case dirty is an object */\n    if (typeof dirty !== 'string' && !_isNode(dirty)) {\n      if (typeof dirty.toString === 'function') {\n        dirty = dirty.toString();\n        if (typeof dirty !== 'string') {\n          throw typeErrorCreate('dirty is not a string, aborting');\n        }\n      } else {\n        throw typeErrorCreate('toString is not a function');\n      }\n    }\n    /* Return dirty HTML if DOMPurify cannot run */\n    if (!DOMPurify.isSupported) {\n      return dirty;\n    }\n    /* Assign config vars */\n    if (!SET_CONFIG) {\n      _parseConfig(cfg);\n    }\n    /* Clean up removed elements */\n    DOMPurify.removed = [];\n    /* Check if dirty is correctly typed for IN_PLACE */\n    if (typeof dirty === 'string') {\n      IN_PLACE = false;\n    }\n    if (IN_PLACE) {\n      /* Do some early pre-sanitization to avoid unsafe root nodes */\n      if (dirty.nodeName) {\n        const tagName = transformCaseFunc(dirty.nodeName);\n        if (!ALLOWED_TAGS[tagName] || FORBID_TAGS[tagName]) {\n          throw typeErrorCreate('root node is forbidden and cannot be sanitized in-place');\n        }\n      }\n    } else if (dirty instanceof Node) {\n      /* If dirty is a DOM element, append to an empty document to avoid\n         elements being stripped by the parser */\n      body = _initDocument('<!---->');\n      importedNode = body.ownerDocument.importNode(dirty, true);\n      if (importedNode.nodeType === NODE_TYPE.element && importedNode.nodeName === 'BODY') {\n        /* Node is already a body, use as is */\n        body = importedNode;\n      } else if (importedNode.nodeName === 'HTML') {\n        body = importedNode;\n      } else {\n        // eslint-disable-next-line unicorn/prefer-dom-node-append\n        body.appendChild(importedNode);\n      }\n    } else {\n      /* Exit directly if we have nothing to do */\n      if (!RETURN_DOM && !SAFE_FOR_TEMPLATES && !WHOLE_DOCUMENT &&\n      // eslint-disable-next-line unicorn/prefer-includes\n      dirty.indexOf('<') === -1) {\n        return trustedTypesPolicy && RETURN_TRUSTED_TYPE ? trustedTypesPolicy.createHTML(dirty) : dirty;\n      }\n      /* Initialize the document to work on */\n      body = _initDocument(dirty);\n      /* Check we have a DOM node from the data */\n      if (!body) {\n        return RETURN_DOM ? null : RETURN_TRUSTED_TYPE ? emptyHTML : '';\n      }\n    }\n    /* Remove first element node (ours) if FORCE_BODY is set */\n    if (body && FORCE_BODY) {\n      _forceRemove(body.firstChild);\n    }\n    /* Get node iterator */\n    const nodeIterator = _createNodeIterator(IN_PLACE ? dirty : body);\n    /* Now start iterating over the created document */\n    while (currentNode = nodeIterator.nextNode()) {\n      /* Sanitize tags and elements */\n      _sanitizeElements(currentNode);\n      /* Check attributes next */\n      _sanitizeAttributes(currentNode);\n      /* Shadow DOM detected, sanitize it */\n      if (currentNode.content instanceof DocumentFragment) {\n        _sanitizeShadowDOM(currentNode.content);\n      }\n    }\n    /* If we sanitized `dirty` in-place, return it. */\n    if (IN_PLACE) {\n      return dirty;\n    }\n    /* Return sanitized string or DOM */\n    if (RETURN_DOM) {\n      if (RETURN_DOM_FRAGMENT) {\n        returnNode = createDocumentFragment.call(body.ownerDocument);\n        while (body.firstChild) {\n          // eslint-disable-next-line unicorn/prefer-dom-node-append\n          returnNode.appendChild(body.firstChild);\n        }\n      } else {\n        returnNode = body;\n      }\n      if (ALLOWED_ATTR.shadowroot || ALLOWED_ATTR.shadowrootmode) {\n        /*\n          AdoptNode() is not used because internal state is not reset\n          (e.g. the past names map of a HTMLFormElement), this is safe\n          in theory but we would rather not risk another attack vector.\n          The state that is cloned by importNode() is explicitly defined\n          by the specs.\n        */\n        returnNode = importNode.call(originalDocument, returnNode, true);\n      }\n      return returnNode;\n    }\n    let serializedHTML = WHOLE_DOCUMENT ? body.outerHTML : body.innerHTML;\n    /* Serialize doctype if allowed */\n    if (WHOLE_DOCUMENT && ALLOWED_TAGS['!doctype'] && body.ownerDocument && body.ownerDocument.doctype && body.ownerDocument.doctype.name && regExpTest(DOCTYPE_NAME, body.ownerDocument.doctype.name)) {\n      serializedHTML = '<!DOCTYPE ' + body.ownerDocument.doctype.name + '>\\n' + serializedHTML;\n    }\n    /* Sanitize final string template-safe */\n    if (SAFE_FOR_TEMPLATES) {\n      arrayForEach([MUSTACHE_EXPR, ERB_EXPR, TMPLIT_EXPR], expr => {\n        serializedHTML = stringReplace(serializedHTML, expr, ' ');\n      });\n    }\n    return trustedTypesPolicy && RETURN_TRUSTED_TYPE ? trustedTypesPolicy.createHTML(serializedHTML) : serializedHTML;\n  };\n  DOMPurify.setConfig = function () {\n    let cfg = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    _parseConfig(cfg);\n    SET_CONFIG = true;\n  };\n  DOMPurify.clearConfig = function () {\n    CONFIG = null;\n    SET_CONFIG = false;\n  };\n  DOMPurify.isValidAttribute = function (tag, attr, value) {\n    /* Initialize shared config vars if necessary. */\n    if (!CONFIG) {\n      _parseConfig({});\n    }\n    const lcTag = transformCaseFunc(tag);\n    const lcName = transformCaseFunc(attr);\n    return _isValidAttribute(lcTag, lcName, value);\n  };\n  DOMPurify.addHook = function (entryPoint, hookFunction) {\n    if (typeof hookFunction !== 'function') {\n      return;\n    }\n    arrayPush(hooks[entryPoint], hookFunction);\n  };\n  DOMPurify.removeHook = function (entryPoint, hookFunction) {\n    if (hookFunction !== undefined) {\n      const index = arrayLastIndexOf(hooks[entryPoint], hookFunction);\n      return index === -1 ? undefined : arraySplice(hooks[entryPoint], index, 1)[0];\n    }\n    return arrayPop(hooks[entryPoint]);\n  };\n  DOMPurify.removeHooks = function (entryPoint) {\n    hooks[entryPoint] = [];\n  };\n  DOMPurify.removeAllHooks = function () {\n    hooks = _createHooksMap();\n  };\n  return DOMPurify;\n}\nvar purify = createDOMPurify();\n\nexport { purify as default };\n//# sourceMappingURL=purify.es.mjs.map\n","// src/utils/renderMarkdown.js\r\nimport { marked } from 'marked';\r\nimport DOMPurify from 'dompurify';\r\n\r\nexport function renderMarkdown(mdText) {\r\n  // تعطيل تشويش العناوين وتعطيل IDs التلقائية\r\n  const rawHtml = marked(mdText, {\r\n    mangle: false,\r\n    headerIds: false\r\n  });\r\n  // تنقية الـ HTML من أي سكريبتات أو هجمات XSS\r\n  return DOMPurify.sanitize(rawHtml);\r\n}\r\n","import { renderMarkdown } from '../utils/renderMarkdown.js';\r\n\r\n/**\r\n * مكوّن عرض رسائل الدردشة\r\n */\r\nclass ChatMessage extends HTMLElement {\r\n  constructor() {\r\n    super();\r\n    this.attachShadow({ mode: 'open' });\r\n    this._content = '';\r\n  }\r\n\r\n  connectedCallback() {\r\n    const sender = this.getAttribute('sender') || 'bot';\r\n    const avatar = this.getAttribute('avatar') || 'https://alaghbry0.github.io/chat-widget/profile.png';\r\n    const messageId = this.getAttribute('message-id') || '';\r\n\r\n    // قراءة محتوى Markdown الخام\r\n    this._content = this.getAttribute('data-md') || this.textContent || '';\r\n\r\n    // إعداد CSS جديد يتضمن تنسيقات للقوائم والروابط\r\n    const style = document.createElement('style');\r\n    style.textContent = `\r\n      :host { display: block; width: 115%; margin-bottom: 16px; }\r\n\r\n      .message {\r\n        display: flex;\r\n        flex-direction: column;\r\n        max-width: 80%;\r\n        animation: fadeIn 0.3s ease-in-out, slideIn 0.2s ease-out;\r\n      }\r\n\r\n      .message-user {\r\n        align-self: flex-end;\r\n        align-items: flex-end;\r\n      }\r\n\r\n      .message-bot {\r\n        align-self: flex-start;\r\n        align-items: flex-start;\r\n      }\r\n\r\n      .message-header {\r\n        display: flex;\r\n        align-items: center;\r\n        margin-bottom: 4px;\r\n      }\r\n\r\n      .avatar {\r\n        width: 28px;\r\n        height: 28px;\r\n        border-radius: 50%;\r\n        margin-right: 8px;\r\n        background-color: var(--primary-color);\r\n        color: #fff;\r\n        display: flex;\r\n        align-items: center;\r\n        justify-content: center;\r\n        font-size: 14px;\r\n        font-weight: bold;\r\n      }\r\n\r\n      .message-content {\r\n        padding: 5px 10px;\r\n        border-radius: 16px;\r\n        font-size: 14px;\r\n        line-height: 1.6;\r\n        position: relative;\r\n        overflow-wrap: break-word;\r\n        word-break: break-word;\r\n      }\r\n\r\n      .message-user .message-content {\r\n        background: linear-gradient(135deg, #007BFF, #0056b3);\r\n        color: #fff;\r\n        border-bottom-right-radius: 4px;\r\n      }\r\n\r\n      .message-bot .message-content {\r\n        background: linear-gradient(135deg, #F8F9FA, #FFFFFF);\r\n        color: #333;\r\n        border-bottom-left-radius: 4px;\r\n        box-shadow: 0 1px 2px rgba(0,0,0,0.1);\r\n      }\r\n\r\n      .message-time {\r\n        font-size: 11px;\r\n        color: var(--text-secondary);\r\n        margin-top: 4px;\r\n        opacity: 0.8;\r\n      }\r\n\r\n      @keyframes fadeIn {\r\n        from { opacity: 0; }\r\n        to { opacity: 1; }\r\n      }\r\n\r\n      @keyframes slideIn {\r\n        from { transform: translateY(10px); }\r\n        to { transform: translateY(0); }\r\n      }\r\n\r\n      /* تنسيقات العناصر في الرسالة */\r\n      .message-content h1, .message-content h2, .message-content h3 {\r\n        margin: 12px 0 8px 0;\r\n        font-weight: 600;\r\n      }\r\n\r\n      .message-content h1 { font-size: 16px; }\r\n      .message-content h2 { font-size: 14px; }\r\n      .message-content h3 { font-size: 13px; }\r\n\r\n      /* تنسيقات القوائم */\r\n      .message-content ul, .message-content ol {\r\n        padding-left: 20px;\r\n        margin: 8px 0;\r\n      }\r\n\r\n      .message-content li {\r\n        margin-bottom: 4px;\r\n      }\r\n\r\n      .message-content li.nested {\r\n        margin-left: 16px;\r\n      }\r\n\r\n      /* تنسيقات الروابط - معدّلة لتشبه الأزرار */\r\n      .message-content a {\r\n        color: inherit;\r\n        text-decoration: none;\r\n        display: inline-block;\r\n        padding: 6px 12px;\r\n        background: rgba(0, 0, 0, 0.1);\r\n        border-radius: 16px;\r\n        transition: background 0.2s ease;\r\n      }\r\n\r\n      .message-user .message-content a {\r\n        color: #fff;\r\n        background: rgba(255, 255, 255, 0.2);\r\n      }\r\n\r\n      .message-bot .message-content a {\r\n        color: #007BFF;\r\n        background: rgba(0, 123, 255, 0.1);\r\n      }\r\n\r\n      .message-content a::after {\r\n        content: \" ↗\";\r\n        font-size: 0.8em;\r\n        opacity: 0.8;\r\n      }\r\n\r\n      /* تنسيقات الكود */\r\n      .message-content code {\r\n        background: rgba(0,0,0,0.1);\r\n        border-radius: 3px;\r\n        padding: 2px 4px;\r\n        font-family: monospace;\r\n      }\r\n\r\n      .message-user .message-content code {\r\n        background: rgba(255,255,255,0.2);\r\n      }\r\n\r\n      /* أزرار التفاعل */\r\n      .message-actions {\r\n        display: none;\r\n        position: absolute;\r\n        top: -16px;\r\n        right: 0;\r\n        background: #fff;\r\n        border-radius: 4px;\r\n        box-shadow: 0 2px 4px rgba(0,0,0,0.1);\r\n      }\r\n\r\n      .message:hover .message-actions {\r\n        display: flex;\r\n      }\r\n\r\n      .action-button {\r\n        padding: 4px 8px;\r\n        background: #fff;\r\n        color: #666;\r\n        border: none;\r\n        cursor: pointer;\r\n        font-size: 12px;\r\n        border-radius: 4px;\r\n      }\r\n\r\n      .action-button:hover {\r\n        background: #f1f1f1;\r\n      }\r\n    `;\r\n\r\n    // إنشاء عنصر الرسالة\r\n    const messageEl = document.createElement('div');\r\n    messageEl.className = `message message-${sender}`;\r\n    messageEl.setAttribute('data-message-id', messageId);\r\n\r\n    // تحويل Markdown إلى HTML آمن\r\n    const html = renderMarkdown(this._content);\r\n\r\n    messageEl.innerHTML = `\r\n      <div class=\"message-header\">\r\n        ${sender === 'bot'\r\n          ? (avatar\r\n              ? `<img class=\"avatar\" src=\"${avatar}\" alt=\"Bot Avatar\">`\r\n              : `<div class=\"avatar\">B</div>`)\r\n          : ''}\r\n      </div>\r\n      <div class=\"message-content\">${html}</div>\r\n      <div class=\"message-time\">${this._formatTime(new Date())}</div>\r\n      ${sender === 'bot' ? `\r\n        <div class=\"message-actions\">\r\n          <button class=\"action-button copy-btn\">نسخ</button>\r\n        </div>\r\n      ` : ''}\r\n    `;\r\n\r\n    this.shadowRoot.append(style, messageEl);\r\n    this._activateControls();\r\n    this._setupLinkTargets();\r\n  }\r\n\r\n  // دالة لتحديث محتوى الرسالة (للاستجابة المتدفقة)\r\n  updateContent(newContent) {\r\n    if (newContent === this._content) return;\r\n    this._content = newContent;\r\n\r\n    const contentEl = this.shadowRoot.querySelector('.message-content');\r\n    if (contentEl) {\r\n      contentEl.innerHTML = renderMarkdown(newContent);\r\n      this._activateControls();\r\n      this._setupLinkTargets();\r\n    }\r\n  }\r\n\r\n  _activateControls() {\r\n    // تفعيل زر النسخ\r\n    const copyBtn = this.shadowRoot.querySelector('.copy-btn');\r\n    if (copyBtn) {\r\n      copyBtn.addEventListener('click', () => {\r\n        navigator.clipboard.writeText(this._content)\r\n        .then(() => {\r\n          copyBtn.textContent = 'تم النسخ';\r\n          setTimeout(() => {\r\n            copyBtn.textContent = 'نسخ';\r\n          }, 2000);\r\n        })\r\n        .catch(err => {\r\n          console.error('فشل النسخ:', err);\r\n        });\r\n      });\r\n    }\r\n  }\r\n\r\n  // دالة جديدة لتعيين target=\"_blank\" للروابط\r\n  _setupLinkTargets() {\r\n    const links = this.shadowRoot.querySelectorAll('.message-content a');\r\n    links.forEach(link => {\r\n      link.setAttribute('target', '_blank');\r\n      link.setAttribute('rel', 'noopener noreferrer');\r\n    });\r\n  }\r\n\r\n  _formatTime(date) {\r\n    const hh = date.getHours().toString().padStart(2, '0');\r\n    const mm = date.getMinutes().toString().padStart(2, '0');\r\n    return `${hh}:${mm}`;\r\n  }\r\n}\r\n\r\ncustomElements.define('chat-message', ChatMessage);","// src/components/suggestions.js\r\n\r\n/**\r\n * مكون اقتراحات الرسائل السريعة\r\n */\r\nclass ChatSuggestions extends HTMLElement {\r\n  constructor() {\r\n    super();\r\n    this.attachShadow({ mode: 'open' });\r\n    this._suggestions = [];\r\n  }\r\n\r\n  connectedCallback() {\r\n    this._render();\r\n  }\r\n\r\n  set suggestions(value) {\r\n    if (Array.isArray(value)) {\r\n      this._suggestions = value;\r\n      if (this.shadowRoot) {\r\n        this._render();\r\n      }\r\n    }\r\n  }\r\n\r\n  get suggestions() {\r\n    return this._suggestions;\r\n  }\r\n\r\n  _render() {\r\n    const style = document.createElement('style');\r\n    style.textContent = `\r\n      :host {\r\n        display: block;\r\n        margin: 16px 0;\r\n      }\r\n\r\n      .suggestions {\r\n        display: flex;\r\n        flex-wrap: wrap;\r\n        gap: 8px;\r\n        margin-top: 16px;\r\n      }\r\n\r\n      .suggestion {\r\n        background: linear-gradient(to right, #F8F9FA, #FFFFFF);\r\n        color: var(--text-color, #333);\r\n        border: 1px solid var(--border-color, #E6E6E6);\r\n        border-radius: 16px;\r\n        padding: 8px 16px;\r\n        font-size: 13px;\r\n        cursor: pointer;\r\n        transition: all 0.2s;\r\n        white-space: nowrap;\r\n        overflow: hidden;\r\n        text-overflow: ellipsis;\r\n        max-width: 200px;\r\n        box-shadow: 0 1px 3px rgba(0,0,0,0.05);\r\n      }\r\n\r\n      .suggestion:hover {\r\n        background: linear-gradient(to right, var(--primary-color, #007BFF), var(--primary-hover, #0056b3));\r\n        color: white;\r\n        transform: translateY(-2px);\r\n        box-shadow: 0 2px 5px rgba(0,0,0,0.1);\r\n      }\r\n\r\n      .title {\r\n        font-size: 14px;\r\n        color: var(--text-secondary, #666);\r\n        margin-bottom: 8px;\r\n      }\r\n\r\n      @keyframes fadeIn {\r\n        from { opacity: 0; transform: translateY(10px); }\r\n        to { opacity: 1; transform: translateY(0); }\r\n      }\r\n\r\n      .suggestion {\r\n        animation: fadeIn 0.3s ease-in-out;\r\n        animation-fill-mode: both;\r\n      }\r\n\r\n      .suggestion:nth-child(1) { animation-delay: 0.1s; }\r\n      .suggestion:nth-child(2) { animation-delay: 0.2s; }\r\n      .suggestion:nth-child(3) { animation-delay: 0.3s; }\r\n      .suggestion:nth-child(4) { animation-delay: 0.4s; }\r\n\r\n      @media (max-width: 576px) {\r\n        .suggestions {\r\n          gap: 6px;\r\n        }\r\n\r\n        .suggestion {\r\n          padding: 6px 12px;\r\n          font-size: 12px;\r\n        }\r\n      }\r\n    `;\r\n\r\n    const container = document.createElement('div');\r\n    container.innerHTML = `\r\n      <div class=\"title\">يمكنك أن تسأل:</div>\r\n      <div class=\"suggestions\">\r\n        ${this._suggestions.map(suggestion => `\r\n          <button class=\"suggestion\" aria-label=\"${suggestion}\">${suggestion}</button>\r\n        `).join('')}\r\n      </div>\r\n    `;\r\n\r\n    this.shadowRoot.innerHTML = '';\r\n    this.shadowRoot.appendChild(style);\r\n    this.shadowRoot.appendChild(container);\r\n\r\n    const suggestionButtons = this.shadowRoot.querySelectorAll('.suggestion');\r\n    suggestionButtons.forEach(button => {\r\n      button.addEventListener('click', () => {\r\n        const suggestion = button.textContent;\r\n        this.dispatchEvent(new CustomEvent('suggestion-clicked', {\r\n          detail: { suggestion },\r\n          bubbles: true,\r\n          composed: true\r\n        }));\r\n      });\r\n    });\r\n  }\r\n}\r\n\r\ncustomElements.define('chat-suggestions', ChatSuggestions);","/**\r\n * مكون مؤشر الكتابة\r\n */\r\nclass TypingIndicator extends HTMLElement {\r\n  constructor() {\r\n    super();\r\n    this.attachShadow({ mode: 'open' });\r\n  }\r\n\r\n  connectedCallback() {\r\n    const avatar = this.getAttribute('avatar') || '';\r\n    const direction = document.dir || this.getAttribute('direction') || 'rtl';\r\n\r\n    // إعداد CSS\r\n    const style = document.createElement('style');\r\n    style.textContent = `\r\n      :host {\r\n        display: block;\r\n        width: 100%;\r\n        animation: fadeIn 0.3s ease-in-out;\r\n      }\r\n\r\n      .typing-indicator {\r\n        display: flex;\r\n        align-items: flex-end;\r\n        margin-bottom: 10px;\r\n        max-width: 85%;\r\n        align-self: flex-start;\r\n      }\r\n\r\n      .avatar {\r\n        width: 28px;\r\n        height: 28px;\r\n        border-radius: 50%;\r\n        margin-right: ${direction === 'rtl' ? '0' : '8px'};\r\n        margin-left: ${direction === 'rtl' ? '8px' : '0'};\r\n        background-color: var(--primary-color, #007BFF);\r\n        color: white;\r\n        display: flex;\r\n        align-items: center;\r\n        justify-content: center;\r\n        font-size: 14px;\r\n        font-weight: bold;\r\n        flex-shrink: 0;\r\n      }\r\n\r\n      .typing-bubble {\r\n        background: transparent;\r\n        padding: 8px 12px;\r\n        display: flex;\r\n        align-items: center;\r\n      }\r\n\r\n      .dots-container {\r\n        display: flex;\r\n        align-items: center;\r\n        justify-content: center;\r\n        height: 20px;\r\n      }\r\n\r\n      .dot {\r\n        width: 6px;\r\n        height: 6px;\r\n        background-color: var(--text-secondary, #666);\r\n        border-radius: 50%;\r\n        margin: 0 2px;\r\n        opacity: 0.7;\r\n        transition: transform 0.2s ease-in-out;\r\n        animation: bounce 1.2s infinite;\r\n      }\r\n\r\n      .dot:nth-child(1) {\r\n        animation-delay: 0s;\r\n      }\r\n\r\n      .dot:nth-child(2) {\r\n        animation-delay: 0.2s;\r\n      }\r\n\r\n      .dot:nth-child(3) {\r\n        animation-delay: 0.4s;\r\n      }\r\n\r\n      @keyframes bounce {\r\n        0%, 60%, 100% {\r\n          transform: translateY(0);\r\n        }\r\n        30% {\r\n          transform: translateY(-4px);\r\n        }\r\n      }\r\n\r\n      @keyframes fadeIn {\r\n        from { opacity: 0; transform: translateY(10px); }\r\n        to { opacity: 1; transform: translateY(0); }\r\n      }\r\n    `;\r\n\r\n    // إضافة التحسينات: استخدام avatar component إذا كان موجودًا\r\n    const avatarHTML = avatar ?\r\n      `<img class=\"avatar\" src=\"${avatar}\" alt=\"Bot\" />` :\r\n      `<div class=\"avatar\">${this.getAttribute('avatar-text') || 'B'}</div>`;\r\n\r\n    const template = document.createElement('div');\r\n    template.className = 'typing-indicator';\r\n    template.innerHTML = `\r\n      ${avatarHTML}\r\n      <div class=\"typing-bubble\">\r\n        <div class=\"dots-container\">\r\n          <div class=\"dot\"></div>\r\n          <div class=\"dot\"></div>\r\n          <div class=\"dot\"></div>\r\n        </div>\r\n      </div>\r\n    `;\r\n\r\n    // إضافة الأنماط والقالب للظل\r\n    this.shadowRoot.appendChild(style);\r\n    this.shadowRoot.appendChild(template);\r\n  }\r\n\r\n  // دالة لتحديث صورة الأفاتار\r\n  updateAvatar(avatarSrc) {\r\n    const avatarEl = this.shadowRoot.querySelector('.avatar');\r\n    if (avatarEl && avatarSrc) {\r\n      if (avatarEl.tagName === 'IMG') {\r\n        avatarEl.src = avatarSrc;\r\n      } else {\r\n        // استبدال العنصر تمامًا\r\n        const parent = avatarEl.parentNode;\r\n        const img = document.createElement('img');\r\n        img.className = 'avatar';\r\n        img.src = avatarSrc;\r\n        img.alt = 'Bot';\r\n        parent.replaceChild(img, avatarEl);\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n// تسجيل المكون\r\ncustomElements.define('typing-indicator', TypingIndicator);","// src/components/avatar.js\r\n\r\n/**\r\n * مكون الصورة الرمزية\r\n */\r\nclass ChatAvatar extends HTMLElement {\r\n  constructor() {\r\n    super();\r\n    this.attachShadow({ mode: 'open' });\r\n  }\r\n\r\n  connectedCallback() {\r\n    this._render();\r\n  }\r\n\r\n  _render() {\r\n    const src = this.getAttribute('src') || '';\r\n    const fallback = this.getAttribute('fallback') || 'B';\r\n    const bgColor = this.getAttribute('bg-color') || '#007BFF';\r\n    const size = this.getAttribute('size') || '32px';\r\n\r\n    const style = document.createElement('style');\r\n    style.textContent = `\r\n      :host {\r\n        display: inline-block;\r\n      }\r\n\r\n      .avatar {\r\n        width: ${size};\r\n        height: ${size};\r\n        border-radius: 50%;\r\n        overflow: hidden;\r\n        display: flex;\r\n        align-items: center;\r\n        justify-content: center;\r\n        font-weight: 600;\r\n        color: white;\r\n        background: linear-gradient(135deg, ${bgColor}, ${this._darkenColor(bgColor, 20)});\r\n        font-size: calc(${size} * 0.4);\r\n        box-shadow: 0 2px 4px rgba(0,0,0,0.1);\r\n        transition: transform 0.2s ease-out;\r\n      }\r\n\r\n      .avatar:hover {\r\n        transform: scale(1.05);\r\n      }\r\n\r\n      .avatar img {\r\n        width: 100%;\r\n        height: 100%;\r\n        object-fit: cover;\r\n        transition: opacity 0.2s;\r\n      }\r\n\r\n      @keyframes avatarFadeIn {\r\n        from { opacity: 0; transform: scale(0.8); }\r\n        to { opacity: 1; transform: scale(1); }\r\n      }\r\n\r\n      .avatar {\r\n        animation: avatarFadeIn 0.3s ease-out forwards;\r\n      }\r\n    `;\r\n\r\n    const template = document.createElement('template');\r\n\r\n    if (src) {\r\n      template.innerHTML = `\r\n        <div class=\"avatar\">\r\n          <img src=\"${src}\" alt=\"Avatar\" onerror=\"this.style.display='none'; this.parentNode.textContent='${fallback}'\" />\r\n        </div>\r\n      `;\r\n    } else {\r\n      template.innerHTML = `\r\n        <div class=\"avatar\">${fallback}</div>\r\n      `;\r\n    }\r\n\r\n    this.shadowRoot.innerHTML = '';\r\n    this.shadowRoot.appendChild(style);\r\n    this.shadowRoot.appendChild(template.content.cloneNode(true));\r\n  }\r\n\r\n  _darkenColor(color, percent) {\r\n    // Simple function to darken a hex color\r\n    const num = parseInt(color.replace('#', ''), 16),\r\n      amt = Math.round(2.55 * percent),\r\n      R = (num >> 16) - amt,\r\n      G = (num >> 8 & 0x00FF) - amt,\r\n      B = (num & 0x0000FF) - amt;\r\n    return '#' + (0x1000000 + (R < 0 ? 0 : R) * 0x10000 + (G < 0 ? 0 : G) * 0x100 + (B < 0 ? 0 : B)).toString(16).slice(1);\r\n  }\r\n\r\n  static get observedAttributes() {\r\n    return ['src', 'fallback', 'bg-color', 'size'];\r\n  }\r\n\r\n  attributeChangedCallback(name, oldValue, newValue) {\r\n    if (oldValue !== newValue) {\r\n      this._render();\r\n    }\r\n  }\r\n}\r\n\r\ncustomElements.define('chat-avatar', ChatAvatar);","// src/services/chat-service.js\r\n\r\n/**\r\n * خدمة الاتصال بالخادم للدردشة باستخدام SSE\r\n */\r\nexport class ChatService {\r\n  /**\r\n   * إرسال رسالة إلى الخادم والحصول على دفق SSE للردود\r\n   * @param {string} url - عنوان URL للخادم\r\n   * @param {Object} data - بيانات الرسالة للإرسال\r\n   * @returns {EventSource} - موجّه أحداث SSE\r\n   */\r\n  async sendMessage(url, data) {\r\n    try {\r\n      console.log(\"Sending message to:\", url, data);\r\n\r\n      // استخدام fetch مع POST بدلاً من EventSource\r\n      const response = await fetch(url, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify(data)\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error(`HTTP error! status: ${response.status}`);\r\n      }\r\n\r\n      // إنشاء قارئ دفق لمعالجة استجابة SSE\r\n      const reader = response.body.getReader();\r\n      const decoder = new TextDecoder();\r\n\r\n      // إنشاء كائن مماثل لـ EventSource للتوافق مع بقية الكود\r\n      const eventSourceMock = {\r\n        listeners: {\r\n          message: [],\r\n          chunk: [],\r\n          end: [],\r\n          tool_call: [],\r\n          tool_result: [],\r\n          error: [],\r\n          open: []\r\n        },\r\n\r\n        onmessage: null,\r\n        onchunk: null,\r\n        onend: null,\r\n        ontool_call: null,\r\n        ontool_result: null,\r\n        onerror: null,\r\n        onopen: null,\r\n        onclose: null,\r\n\r\n        addEventListener(event, callback) {\r\n          if (!this.listeners[event]) {\r\n            this.listeners[event] = [];\r\n          }\r\n          this.listeners[event].push(callback);\r\n        },\r\n\r\n        removeEventListener(event, callback) {\r\n          const arr = this.listeners[event] || [];\r\n          const idx = arr.indexOf(callback);\r\n          if (idx !== -1) arr.splice(idx, 1);\r\n        },\r\n\r\n        close() {\r\n          reader.cancel().then(() => {\r\n            // تنفيذ حدث الإغلاق\r\n            if (this.onclose) {\r\n              this.onclose({ type: 'close' });\r\n            }\r\n            (this.listeners.close || []).forEach(cb =>\r\n              cb({ type: 'close' })\r\n            );\r\n          });\r\n        }\r\n      };\r\n\r\n      // قراءة الدفق وإطلاق الأحداث\r\n      this._processStream(reader, decoder, eventSourceMock);\r\n\r\n      // تشغيل حدث open\r\n      setTimeout(() => {\r\n        if (eventSourceMock.onopen) {\r\n          eventSourceMock.onopen({ type: 'open' });\r\n        }\r\n        (eventSourceMock.listeners.open || []).forEach(cb =>\r\n          cb({ type: 'open' })\r\n        );\r\n      }, 0);\r\n\r\n      return eventSourceMock;\r\n    } catch (error) {\r\n      console.error('Error in sendMessage:', error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * معالجة دفق SSE\r\n   * @param {ReadableStreamDefaultReader} reader\r\n   * @param {TextDecoder} decoder\r\n   * @param {Object} eventSource\r\n   */\r\n  _processStream(reader, decoder, eventSource) {\r\n    let buffer = '';\r\n    let pendingRead = null;\r\n\r\n    const emitEvent = (type, dataStr, eventId) => {\r\n      try {\r\n        // محاولة تحليل JSON إذا كان البيانات بتنسيق JSON\r\n        const jsonData = JSON.parse(dataStr);\r\n        const ev = {\r\n          data: dataStr,\r\n          type,\r\n          lastEventId: eventId,\r\n          json: jsonData // إضافة البيانات المحللة كـ JSON\r\n        };\r\n\r\n        // أولاً handler النوعي أو العام\r\n        const handler = eventSource['on' + type] || eventSource.onmessage;\r\n        if (handler) handler(ev);\r\n\r\n        // ثم كل المستمعين المسجلين\r\n        (eventSource.listeners[type] || []).forEach(cb => cb(ev));\r\n      } catch (e) {\r\n        // إذا فشل التحليل، نرسل البيانات كما هي نصياً\r\n        const ev = { data: dataStr, type, lastEventId: eventId };\r\n\r\n        // نفس الشيء: handler النوعي أو العام\r\n        const handler = eventSource['on' + type] || eventSource.onmessage;\r\n        if (handler) handler(ev);\r\n\r\n        // ثم المستمعين\r\n        (eventSource.listeners[type] || []).forEach(cb => cb(ev));\r\n      }\r\n    };\r\n\r\n    const processChunk = (chunk) => {\r\n      // تعديل ليعمل مع مختلف أنواع الفواصل السطرية\r\n      buffer += chunk;\r\n\r\n      // تقسيم على الفاصل الفارغ بين الأحداث (سطر فارغ)\r\n      const eventBlocks = buffer.split(/\\r?\\n\\r?\\n/);\r\n\r\n      // آخر كتلة قد تكون غير مكتملة - نحتفظ بها للقراءة التالية\r\n      buffer = eventBlocks.pop() || '';\r\n\r\n      eventBlocks.forEach(eventBlock => {\r\n        if (!eventBlock.trim()) return; // تجاوز الكتل الفارغة\r\n\r\n        const lines = eventBlock.split(/\\r?\\n/);\r\n        let eventType = 'message'; // النوع الافتراضي\r\n        let data = '';\r\n        let eventId = '';\r\n\r\n        lines.forEach(line => {\r\n          if (line.startsWith('event:')) {\r\n            eventType = line.substring(6).trim();\r\n          } else if (line.startsWith('data:')) {\r\n            data += (data ? '\\n' : '') + line.substring(5).trim();\r\n          } else if (line.startsWith('id:')) {\r\n            eventId = line.substring(3).trim();\r\n          } else if (line.startsWith(':')) {\r\n            // تعليق - نتجاهله\r\n          }\r\n        });\r\n\r\n        if (data) {\r\n          emitEvent(eventType, data, eventId);\r\n        }\r\n      });\r\n    };\r\n\r\n    // دالة تكرارية لقراءة الدفق\r\n    const readNext = () => {\r\n      pendingRead = reader.read().then(({ value, done }) => {\r\n        if (done) {\r\n          // عند انتهاء الدفق، نرسل حدث \"end\" للتنبيه\r\n          emitEvent('end', '', '');\r\n          return;\r\n        }\r\n\r\n        // فك ترميز المحتوى\r\n        const chunk = decoder.decode(value, { stream: true });\r\n        processChunk(chunk);\r\n\r\n        // استمر بالقراءة\r\n        return readNext();\r\n      }).catch(err => {\r\n        console.error('Error reading stream:', err);\r\n        emitEvent('error', JSON.stringify({\r\n          message: err.message || 'Error reading stream'\r\n        }), '');\r\n      });\r\n\r\n      return pendingRead;\r\n    };\r\n\r\n    // ابدأ القراءة\r\n    readNext();\r\n  }\r\n}","\r\nimport './components/chat-button.js';\r\nimport './components/chat-message.js';\r\nimport './components/suggestions.js';\r\nimport './components/typing-indicator.js';\r\nimport './components/avatar.js';\r\nimport { ChatService } from './services/chat-service.js';\r\n\r\n// استيراد الأنماط\r\nconst styles = `\r\n  :host {\r\n    --primary-color: #007BFF;\r\n    --primary-hover: #0069d9;\r\n    --bg-color: #fff;\r\n    --header-bg: #467df2;\r\n    --text-color: #333;\r\n    --text-secondary: #666;\r\n    --message-bg-user: linear-gradient(180deg, #007BFF, #0056B3);\r\n    --message-color-user: #fff;\r\n    --message-bg-bot: linear-gradient(180deg, #F8F9FA, #FFFFFF);\r\n    --message-color-bot: #666;\r\n    --border-color: #f7eded;\r\n    --footer-bg: rgba(249, 250, 251, 0.8);\r\n    --bubble-size: 56px;\r\n    --shadow: 0 4px 12px rgba(0, 0, 0, 0.15);\r\n    --header-dark: #1F2937;\r\n\r\n    font-family: Roboto, Inter, -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Helvetica Neue', Arial, sans-serif;\r\n    position: fixed;\r\n    z-index: 9999;\r\n    box-sizing: border-box;\r\n  }\r\n\r\n  :host([theme=\"dark\"]) {\r\n    --primary-color: #375FFF;\r\n    --primary-hover: #2D4ECC;\r\n    --bg-color: #F0F0F0;\r\n    --header-bg: #2D2D2D;\r\n    --header-dark: #0F172A;\r\n    --text-color: #fff;\r\n    --text-secondary: #B0B0B0;\r\n    --message-bg-user: linear-gradient(180deg, #375FFF, #2D4ECC);\r\n    --message-color-user: #fff;\r\n    --message-bg-bot: linear-gradient(180deg, #2D2D2D, #1E1E1E);\r\n    --message-color-bot: #E0E0E0;\r\n    --border-color: #3D3D3D;\r\n    --footer-bg: rgba(30, 30, 30, 0.85);\r\n  }\r\n\r\n  :host([position=\"bottom-right\"]) .chat-container {\r\n    bottom: calc(var(--bubble-size) + 17px);\r\n    right: 24px;\r\n    left: auto;\r\n  }\r\n\r\n  :host([position=\"bottom-left\"]) .chat-container {\r\n    bottom: calc(var(--bubble-size) + 16px);\r\n    left: 24px;\r\n    right: auto;\r\n  }\r\n\r\n  :host([direction=\"rtl\"]) {\r\n    direction: rtl;\r\n    text-align: right;\r\n  }\r\n\r\n  .chat-container {\r\n    z-index: 9999;\r\n    position: fixed;\r\n    display: flex;\r\n    flex-direction: column;\r\n    width: 400px;\r\n    max-width: 90vw;\r\n    height: 85vh;\r\n    background-color: var(--bg-color);\r\n    border-radius: 15px;\r\n    overflow: hidden;\r\n    box-shadow: var(--shadow);\r\n    transition: transform 0.3s ease, opacity 0.3s ease;\r\n    transform: translateY(16px);\r\n    opacity: 0;\r\n    pointer-events: none;\r\n  }\r\n\r\n  .chat-container.open {\r\n    transform: translateY(0);\r\n    opacity: 1;\r\n    pointer-events: all;\r\n  }\r\n\r\n  .chat-header {\r\n  display: flex;\r\n  flex-direction: column;\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  right: 0;\r\n  z-index: 10;\r\n  transition: height 0.3s ease;\r\n  transform: translateZ(0); /* تحسين الأداء */\r\n}\r\n\r\n\r\n\r\n/* حساب ارتفاع messages-container مع أخذ الهيدر في الاعتبار */\r\n.messages-container {\r\n  padding-top: 12px;\r\n  height: 100%;\r\n}\r\n\r\n  .top-bar {\r\n    height: 55px;\r\n    background-color: var(--header-dark);\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    padding: 0 16px;\r\n  }\r\n\r\n  .top-bar-title {\r\n    color: white;\r\n    font-size: 14px;\r\n    font-weight: 600;\r\n    margin: 0;\r\n  }\r\n\r\n  .top-bar-actions {\r\n    display: flex;\r\n    gap: 8px;\r\n  }\r\n\r\n  .top-bar-button {\r\n    width: 24px;\r\n    height: 24px;\r\n    padding: 0;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    background: none;\r\n    border: none;\r\n    cursor: pointer;\r\n    color: white;\r\n    opacity: 0.8;\r\n  }\r\n\r\n  .top-bar-button:hover {\r\n    opacity: 1;\r\n  }\r\n\r\n  .profile-header {\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    background-color: white;\r\n    padding: 16px 0;\r\n    transition: transform 0.3s ease, opacity 0.3s ease, max-height 0.3s ease;\r\n    max-height: 150px;\r\n    overflow: hidden;\r\n  }\r\n\r\n  .profile-header.hidden {\r\n    max-height: 0;\r\n    padding: 0;\r\n    opacity: 0;\r\n    transform: translateY(-100%);\r\n  }\r\n\r\n  .profile-avatar {\r\n    width: 64px;\r\n    height: 64px;\r\n  }\r\n\r\n  .header-title {\r\n    font-size: 20px;\r\n    font-weight: 600;\r\n    color: var(--text-color);\r\n    margin: 8px 0 0 0;\r\n  }\r\n\r\n  .header-subtitle {\r\n    font-size: 14px;\r\n    color: var(--text-secondary);\r\n    margin: 8px 0 0 0;\r\n  }\r\n\r\n  .messages-container {\r\n    flex: 1;\r\n    padding: 12px 16px;\r\n    overflow-y: auto;\r\n    overflow-x: hidden;\r\n    background-color: var(--bg-color);\r\n    display: flex;\r\n    flex-direction: column;\r\n    gap: 12px;\r\n    scroll-behavior: smooth;\r\n    border-top-left-radius: 16px;\r\n    border-top-right-radius: 12px;\r\n  }\r\n\r\n  .messages-container::-webkit-scrollbar {\r\n    width: 6px;\r\n  }\r\n\r\n  .messages-container::-webkit-scrollbar-thumb {\r\n    background-color: rgba(0, 0, 0, 0.2);\r\n    border-radius: 3px;\r\n  }\r\n\r\n  .messages-container::-webkit-scrollbar-track {\r\n    background-color: transparent;\r\n  }\r\n\r\n  .chat-footer {\r\n  padding: 12px 16px; /* تقليل padding العلوي والسفلي قليلاً */\r\n  background-color: var(--footer-bg);\r\n  border-top: 1px solid var(--border-color);\r\n  }\r\n    .input-area {\r\n  margin-bottom: 8px; /* إضافة مسافة بين حقل الإدخال والنص السفلي */\r\n}\r\n\r\n\r\n  .chat-input-wrapper {\r\n  flex: 1;\r\n  display: flex; /* <<< تعديل: استخدام flex لتوزيع العناصر الداخلية */\r\n  align-items: center; /* <<< تعديل: محاذاة العناصر عموديًا في المنتصف */\r\n  position: relative;\r\n  background-color: var(--bg-color); /* أو #F0F0F0 لخلفية رمادية فاتحة */\r\n  border: 2px solid var(--border-color);\r\n  border-radius: 15px;\r\n  padding: 4px 8px 4px 16px; /* <<< تعديل: ضبط الحشو الداخلي */\r\n  gap: 8px; /* مسافة بين العناصر الداخلية */\r\n}\r\n\r\n\r\n.chat-input {\r\n    width: 100%;\r\n    min-height: 11px;\r\n    max-height: 150px;\r\n    border: none;\r\n    outline: none;\r\n    background: transparent;\r\n    color: var(--text-color);\r\n    font-size: 14px;\r\n    line-height: 1.4;\r\n    resize: none;\r\n    overflow-y: hidden;\r\n  }\r\n\r\n  .chat-input::placeholder {\r\n    color: var(--text-secondary);\r\n  }\r\n\r\n  .chat-input::-webkit-scrollbar {\r\n    width: 4px;\r\n  }\r\n\r\n  .chat-input::-webkit-scrollbar-thumb {\r\n    background-color: var(--border-color);\r\n    border-radius: 4px;\r\n  }\r\n\r\n\r\n/* --- نمط جديد لزر الميكروفون --- */\r\n.mic-button {\r\n  width: 32px; /* حجم مناسب */\r\n  height: 32px;\r\n  border-radius: 50%;\r\n  background: none; /* بدون خلفية */\r\n  color: var(--text-secondary); /* لون الأيقونة */\r\n  border: none;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  cursor: pointer;\r\n  transition: color 0.2s;\r\n  flex-shrink: 0;\r\n  padding: 0;\r\n}\r\n\r\n.mic-button:hover {\r\n  color: var(--text-color); /* تغيير اللون عند المرور */\r\n}\r\n\r\n.mic-button svg {\r\n    width: 18px; /* حجم الأيقونة */\r\n    height: 18px;\r\n}\r\n\r\n\r\n.send-button {\r\n  width: 36px; /* <<< تعديل: حجم الزر الدائري */\r\n  height: 36px;\r\n  border-radius: 50%;\r\n  /* <<< تعديل: تغيير لون الخلفية ليتناسب مع التصميم الجديد */\r\n  background-color: #E0E0E0; /* لون رمادي فاتح كالمثال */\r\n  /* أو يمكن استخدام متغير CSS إذا كان لديك واحد مناسب */\r\n  /* background-color: var(--border-color); */\r\n  color: var(--text-secondary); /* <<< تعديل: لون الأيقونة الافتراضي */\r\n  border: none;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  cursor: pointer;\r\n  transition: background-color 0.2s, color 0.2s, transform 0.2s;\r\n  flex-shrink: 0;\r\n}\r\n\r\n.send-button:not(:disabled) { /* نمط زر الإرسال عندما يكون فعالاً */\r\n    background-color: var(--primary-color); /* <<< تعديل: العودة للون الأساسي عند التفعيل */\r\n    color: white; /* <<< تعديل: لون الأيقونة عند التفعيل */\r\n}\r\n\r\n.send-button:not(:disabled):hover {\r\n  background-color: var(--primary-hover); /* <<< تعديل: لون عند المرور وهو فعال */\r\n}\r\n\r\n.send-button:disabled {\r\n  background-color: #E9ECEF; /* لون رمادي فاتح جداً عند التعطيل */\r\n  color: #ADB5BD; /* لون أيقونة باهت */\r\n  opacity: 1; /* لا نحتاج لـ opacity هنا لأننا نغير الألوان */\r\n  cursor: not-allowed;\r\n}\r\n\r\n.send-button svg {\r\n  width: 18px;\r\n  height: 18px;\r\n}\r\n\r\n/* تمت إعادة تسمية الكلاس وتعديل النمط */\r\n.footer-powered-by {\r\n  text-align: center; /* <<< تعديل: توسيط النص */\r\n  margin-top: 8px; /* مسافة أعلى النص */\r\n  width: 100%; /* يأخذ العرض كامل للتوسيط */\r\n}\r\n\r\n/* تعديل نمط النص إذا لزم الأمر */\r\n.powered-by {\r\n  font-size: 12px;\r\n  color: var(--text-secondary);\r\n}\r\n\r\n  .typing-bubble {\r\n    background: transparent;\r\n    padding: 0;\r\n  }\r\n\r\n  .dot {\r\n    width: 8px;\r\n    height: 8px;\r\n    background: var(--text-secondary);\r\n    border-radius: 50%;\r\n    animation: bounce 1.2s infinite;\r\n  }\r\n\r\n  @keyframes bounce {\r\n    0%, 80%, 100% { transform: translateY(0); }\r\n    40% { transform: translateY(-6px); }\r\n  }\r\n\r\n  /* Mobile responsive styles */\r\n  @media (max-width: 576px) {\r\n    .chat-container {\r\n      width: 100vw !important;\r\n      max-width: 100vw !important;\r\n      height: 100vh !important;\r\n      right: 0 !important;\r\n      left: 0 !important;\r\n      bottom: 0 !important;\r\n      border-radius: 0;\r\n      padding: env(safe-area-inset-top) env(safe-area-inset-right) env(safe-area-inset-bottom) env(safe-area-inset-left);\r\n    }\r\n\r\n    .chat-header, .chat-footer {\r\n      border-radius: 0;\r\n    }\r\n\r\n    :host([position=\"bottom-right\"]) .chat-container,\r\n    :host([position=\"bottom-left\"]) .chat-container {\r\n      bottom: 0;\r\n      right: 0;\r\n    }\r\n\r\n    .header-title {\r\n      font-size: 16px;\r\n    }\r\n\r\n    .header-subtitle {\r\n      font-size: 12px;\r\n    }\r\n  }\r\n`;\r\n\r\nclass ChatWidget extends HTMLElement {\r\n  constructor() {\r\n    super();\r\n    this.attachShadow({ mode: 'open' });\r\n    this.isOpen = false;\r\n    this.messages = [];\r\n    this.isTyping = false;\r\n    this.sessionId = this._generateSessionId();\r\n    this.headerCollapsed = false;\r\n    this.lastScrollPosition = 0;\r\n\r\n    // استدعاء التهيئة\r\n    this._initialize();\r\n  }\r\n\r\n  static get observedAttributes() {\r\n    return [\r\n      'project-id', 'theme', 'position', 'welcome-message',\r\n      'api-url', 'direction', 'avatar', 'title', 'subtitle', 'powered-by'\r\n    ];\r\n  }\r\n\r\n    _resetChat() {\r\n   console.log('🔄 Resetting chat to initial state...');\r\n\r\n   // 1. مسح مصفوفة الرسائل\r\n   this.messages = [];\r\n\r\n   // 2. إنشاء معرف جلسة جديد\r\n   this.sessionId = this._generateSessionId(true);\r\n\r\n   // 3. إعادة بناء الواجهة بالكامل\r\n   this._render(); // يعيد بناء العناصر الداخلية\r\n\r\n   // 4. استعادة حالة الرؤية\r\n   if (this.isOpen) {\r\n     if (this.chatContainer) {\r\n       this.chatContainer.classList.add('open');\r\n       console.log('Restored .open class after reset.');\r\n     } else {\r\n       console.error(\"Chat container not found immediately after render in _resetChat.\");\r\n     }\r\n   }\r\n\r\n   // --- 5. إعادة ربط المستمعات الداخلية بالعناصر الجديدة ---\r\n   this._setupInternalListeners();\r\n\r\n   // 6. إعادة إضافة رسالة الترحيب النصية والاقتراحات\r\n   this._setupInitialChatState();\r\n\r\n   console.log(\"Chat reset complete.\");\r\n }\r\n  // تعديل دالة _render في class ChatWidget\r\n\r\n  _initialize() {\r\n   // إنشاء خدمة الدردشة\r\n   this.chatService = new ChatService();\r\n   this.suggestionsElement = null;\r\n\r\n   // التهيئة الأساسية للمكون\r\n   this._render(); // 1. بناء الواجهة الأولية\r\n   this._setupComponentListeners(); // 2. ربط المستمعات الخارجية (مرة واحدة)\r\n   this._setupInternalListeners(); // 3. ربط المستمعات الداخلية (لأول مرة)\r\n   this._setupInitialChatState(); // 4. إضافة رسالة الترحيب والاقتراحات\r\n\r\n   console.log(\"Chat widget initialized.\");\r\n }\r\n\r\n\r\n_render() {\r\n  const styleEl = document.createElement('style');\r\n  styleEl.textContent = styles; // الأنماط المعدلة أدناه\r\n\r\n  const template = document.createElement('template');\r\n  template.innerHTML = `\r\n    <div class=\"chat-container\">\r\n      <div class=\"chat-header\">\r\n         <div class=\"top-bar\">\r\n           <chat-avatar\r\n             size=\"24px\"\r\n             src=\"${this.getAttribute('avatar') || 'https://alaghbry0.github.io/chat-widget/profile.png'}\"\r\n             fallback=\"${(this.getAttribute('title') || 'Bot').charAt(0)}\"\r\n             bg-color=\"var(--primary-color)\">\r\n           </chat-avatar>\r\n           <h4 class=\"top-bar-title\">${this.getAttribute('title') || 'Exaado Assistant'}</h4>\r\n           <div class=\"top-bar-actions\">\r\n             <button class=\"top-bar-button refresh-btn\">\r\n               <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\">\r\n                 <path d=\"M21.5 2v6h-6M2.5 22v-6h6M2 11.5a10 10 0 0 1 18.8-4.3M22 12.5a10 10 0 0 1-18.8 4.3\"/>\r\n               </svg>\r\n             </button>\r\n             <button class=\"top-bar-button close-btn\">\r\n               <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\">\r\n                 <path d=\"M18 6 6 18M6 6l12 12\"/>\r\n               </svg>\r\n             </button>\r\n           </div>\r\n         </div>\r\n         </div>\r\n\r\n       <div class=\"messages-container\" id=\"messages\" aria-live=\"polite\">\r\n         <div class=\"welcome-message\">\r\n           <chat-avatar\r\n             class=\"welcome-avatar\"\r\n             size=\"75px\"\r\n             src=\"${this.getAttribute('avatar') || 'https://alaghbry0.github.io/chat-widget/profile.png'}\"\r\n             fallback=\"${(this.getAttribute('title') || 'Bot').charAt(0)}\"\r\n             bg-color=\"var(--primary-color)\">\r\n           </chat-avatar>\r\n           <h3 class=\"welcome-title\">${this.getAttribute('title') || 'Exaado Assistant'}</h3>\r\n           <p class=\"welcome-subtitle\">${this.getAttribute('subtitle') || 'Our virtual agent is here to help you'}</p>\r\n         </div>\r\n         </div>\r\n      <div class=\"chat-footer\">\r\n        <div class=\"input-area\">\r\n          <div class=\"chat-input-wrapper\">\r\n            <textarea class=\"chat-input\" placeholder=\"Message...\" rows=\"1\"></textarea>\r\n            <button class=\"mic-button\" aria-label=\"Voice input\">\r\n              <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\">\r\n                <path d=\"M12 1a3 3 0 0 0-3 3v8a3 3 0 0 0 6 0V4a3 3 0 0 0-3-3z\"></path>\r\n                <path d=\"M19 10v2a7 7 0 0 1-14 0v-2\"></path>\r\n                <line x1=\"12\" y1=\"19\" x2=\"12\" y2=\"23\"></line>\r\n                <line x1=\"8\" y1=\"23\" x2=\"16\" y2=\"23\"></line>\r\n              </svg>\r\n            </button>\r\n            <button class=\"send-button\" disabled aria-label=\"Send message\">\r\n              <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"18\" height=\"18\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\">\r\n                <line x1=\"12\" y1=\"19\" x2=\"12\" y2=\"5\"></line>\r\n                <polyline points=\"5 12 12 5 19 12\"></polyline>\r\n              </svg>\r\n            </button>\r\n          </div>\r\n        </div>\r\n        <div class=\"footer-powered-by\">\r\n          <span class=\"powered-by\">${this.getAttribute(\"powered-by\") || 'Powered by AI'}</span>\r\n        </div>\r\n      </div>\r\n      </div>\r\n\r\n    <chat-button></chat-button>\r\n  `;\r\n\r\n  this.shadowRoot.innerHTML = ''; // Clear previous content\r\n  this.shadowRoot.appendChild(styleEl);\r\n  this.shadowRoot.appendChild(template.content.cloneNode(true));\r\n\r\n  // إعادة تخزين المراجع للعناصر المهمة بعد التعديل\r\n  this.chatContainer = this.shadowRoot.querySelector('.chat-container');\r\n  this.messagesContainer = this.shadowRoot.querySelector('#messages');\r\n  this.chatInput = this.shadowRoot.querySelector('.chat-input');\r\n  this.sendButton = this.shadowRoot.querySelector('.send-button');\r\n  this.chatButton = this.shadowRoot.querySelector('chat-button');\r\n  this.micButton = this.shadowRoot.querySelector('.mic-button'); // Reference for mic button if needed\r\n\r\n  // ... (باقي الكود في _render كما هو، مثل إضافة additionalStyles للترحيب)\r\n    // إضافة الأنماط اللازمة للترحيب (تم تعديل التباعد العلوي)\r\n    const additionalStyles = document.createElement('style');\r\n    additionalStyles.textContent = `\r\n      /* === بداية تعديل الأنماط === */\r\n      .welcome-message {\r\n        display: flex;\r\n        flex-direction: column;\r\n        align-items: center;\r\n\r\n        /* --- التعديل هنا: تقليل التباعد العلوي --- */\r\n        padding: 80px 0 10px 0; /* مثال: 30px للأعلى، 20px للأسفل */\r\n        gap: 8px;\r\n        animation: fadeIn 0.5s ease;\r\n      }\r\n\r\n      .welcome-avatar {\r\n      margin-bottom: 10px;\r\n         /* لا توجد أنماط خاصة مطلوبة هنا الآن */\r\n      }\r\n\r\n      .welcome-title {\r\n        font-size: 20px;\r\n        font-weight: 600;\r\n        color: var(--text-color);\r\n        margin: 0;\r\n        text-align: center;\r\n      }\r\n\r\n      .welcome-subtitle {\r\n        font-size: 14px;\r\n        font-weight: 400;\r\n        color: var(--text-secondary);\r\n        margin: 0;\r\n        text-align: center;\r\n      }\r\n      /* === نهاية تعديل الأنماط === */\r\n\r\n      @keyframes fadeIn {\r\n        from { opacity: 0; }\r\n        to { opacity: 1; }\r\n      }\r\n    `;\r\n    this.shadowRoot.appendChild(additionalStyles);\r\n}\r\n\r\n  _setupComponentListeners() { // تم تغيير الاسم\r\n   console.log('🔗 Setting up component listeners (run once)...'); // للتأكد\r\n\r\n   // زر فتح الدردشة الرئيسي (خارج الجزء المعاد رسمه)\r\n   // تأكد من أن chatButton موجود (يجب أن يكون موجودًا بعد أول _render)\r\n   if (this.chatButton) {\r\n       // --- هام: تأكد من عدم إضافة المستمع أكثر من مرة ---\r\n       // طريقة بسيطة: استخدام خاصية للإشارة إلى أنه تم الربط\r\n       if (!this.chatButton._listenerAttached) {\r\n            this.chatButton.addEventListener('click', () => {\r\n                this.toggleChat();\r\n            });\r\n            this.chatButton._listenerAttached = true; // وضع علامة\r\n       }\r\n   } else {\r\n       console.error(\"Chat button not found for component listener setup.\");\r\n   }\r\n\r\n   // اختصارات لوحة المفاتيح (على مستوى المستند)\r\n   // --- هام: تأكد من عدم إضافة المستمع أكثر من مرة ---\r\n   if (!document._chatWidgetKeyListenerAttached) {\r\n        document.addEventListener('keydown', (e) => {\r\n            // / لتركيز حقل الإدخال\r\n            // تأكد من أن chatInput موجود ومرئي قبل محاولة التركيز\r\n            if (e.key === '/' && this.isOpen && this.chatInput && document.activeElement !== this.chatInput) {\r\n                e.preventDefault();\r\n                this.chatInput.focus();\r\n            }\r\n            // Esc لإغلاق الدردشة\r\n            if (e.key === 'Escape' && this.isOpen) {\r\n                this.toggleChat();\r\n            }\r\n        });\r\n        document._chatWidgetKeyListenerAttached = true; // وضع علامة\r\n    }\r\n\r\n   // --- إزالة الكود الذي تم نقله إلى _setupInternalListeners ---\r\n }\r\n\r\n  // دالة للتعامل مع حدث التمرير\r\n  _handleScroll(event) {\r\n    const currentScrollPosition = this.messagesContainer.scrollTop;\r\n\r\n    // إخفاء الهيدر عند التمرير للأسفل\r\n    if (currentScrollPosition > this.lastScrollPosition && currentScrollPosition > 50 && !this.headerCollapsed) {\r\n      this.profileHeader.classList.add('hidden');\r\n      this.headerCollapsed = true;\r\n    }\r\n    // إظهار الهيدر عند التمرير للأعلى\r\n    else if (currentScrollPosition < this.lastScrollPosition && currentScrollPosition < 50 && this.headerCollapsed) {\r\n      this.profileHeader.classList.remove('hidden');\r\n      this.headerCollapsed = false;\r\n    }\r\n\r\n    this.lastScrollPosition = currentScrollPosition;\r\n  }\r\n\r\n  // دالة التكبير التلقائي لحقل الإدخال\r\n  _autoResizeTextarea() {\r\n    this.chatInput.style.height = 'auto';\r\n    this.chatInput.style.height = (this.chatInput.scrollHeight) + 'px';\r\n\r\n    // التأكد من عدم تجاوز الارتفاع الأقصى\r\n    if (this.chatInput.scrollHeight > 150) {\r\n      this.chatInput.style.overflowY = 'auto';\r\n    } else {\r\n      this.chatInput.style.overflowY = 'hidden';\r\n    }\r\n  }\r\n\r\n  _addMessage(message) {\r\n  const id = Date.now().toString();\r\n  const timestamp = new Date();\r\n  const fullMessage = {\r\n    id,\r\n    content: message.content,\r\n    sender: message.sender,\r\n    timestamp\r\n  };\r\n\r\n  // إضافة الرسالة إلى المصفوفة\r\n  this.messages.push(fullMessage);\r\n\r\n  // إنشاء مكون رسالة جديد باستخدام الـ Markdown\r\n  const messageEl = document.createElement('chat-message');\r\n  messageEl.setAttribute('sender', message.sender);\r\n  messageEl.setAttribute('message-id', id);\r\n  messageEl.setAttribute('data-md', message.content); // استخدام سمة data-md للمحتوى\r\n\r\n  // دائماً إضافة صورة الـ avatar مع رسائل البوت\r\n  if (message.sender === 'bot') {\r\n    messageEl.setAttribute('avatar', this.getAttribute('avatar') || '');\r\n    messageEl.setAttribute('show-avatar', 'true');  // سمة جديدة للتحكم في إظهار الصورة\r\n  }\r\n\r\n  // إضافة المكون للعرض\r\n  this.messagesContainer.appendChild(messageEl);\r\n\r\n  // التمرير إلى أسفل\r\n  this._scrollToBottom();\r\n\r\n  // إخفاء الاقتراحات عند إرسال أول رسالة\r\n  if (this.messages.length === 2 && this.messages[1].sender === 'user') {\r\n    const suggestions = this.shadowRoot.querySelector('chat-suggestions');\r\n    if (suggestions) {\r\n      suggestions.style.display = 'none';\r\n    }\r\n  }\r\n\r\n  return fullMessage;\r\n}\r\n\r\n  _sendMessage() {\r\n    const message = this.chatInput.value.trim();\r\n    if (!message) return;\r\n\r\n    // إضافة رسالة المستخدم\r\n    this._addMessage({\r\n      content: message,\r\n      sender: 'user'\r\n    });\r\n\r\n    // مسح حقل الإدخال وتعطيل الزر\r\n    this.chatInput.value = '';\r\n    this.chatInput.style.height = 'auto'; // إعادة ضبط ارتفاع الحقل\r\n    this.sendButton.disabled = true;\r\n\r\n    // إظهار مؤشر الكتابة الأولي\r\n    this._showTypingIndicator();\r\n\r\n    // إرسال الرسالة إلى الخادم\r\n    const apiUrl = this.getAttribute('api-url');\r\n    const projectId = this.getAttribute('project-id');\r\n\r\n    console.log(`Sending message to ${apiUrl} with projectId: ${projectId}, sessionId: ${this.sessionId}`);\r\n\r\n    this.chatService.sendMessage(apiUrl, {\r\n      message,\r\n      session_id: this.sessionId,\r\n      project_id: projectId\r\n    })\r\n    .then(stream => {\r\n      console.log(\"Stream connection established\", stream);\r\n      let fullResponse = '';\r\n      let liveMessageElement = null; // متغير لتخزين مرجع للرسالة الحية\r\n\r\n      stream.onmessage = (event) => {\r\n        // --- التعامل مع قطع البيانات فقط ---\r\n        if (event.type === 'chunk') {\r\n          let data;\r\n          try {\r\n            data = JSON.parse(event.data);\r\n          } catch (err) {\r\n            console.error('Invalid JSON in chunk:', err, event.data);\r\n            return;\r\n          }\r\n\r\n          if (data.content) {\r\n            // إخفاء مؤشر الكتابة الأولي عند استلام أول قطعة بيانات\r\n            if (!liveMessageElement) {\r\n              this._hideTypingIndicator(); // إخفاء النقاط ...\r\n              // إنشاء عنصر الرسالة الحية مرة واحدة فقط\r\n              liveMessageElement = this._createLiveMessageElement();\r\n            }\r\n\r\n            // بناء الرسالة الحية تدريجياً\r\n            fullResponse += data.content;\r\n            if (liveMessageElement && typeof liveMessageElement.updateContent === 'function') {\r\n              liveMessageElement.updateContent(fullResponse);\r\n            } else if (liveMessageElement) {\r\n              console.warn('liveMessageElement.updateContent is not a function. Falling back to textContent.');\r\n              liveMessageElement.textContent = fullResponse;\r\n            }\r\n            this._scrollToBottom();\r\n          }\r\n        }\r\n        // --- معالجة نهاية البث ---\r\n        else if (event.type === 'end') {\r\n          console.log(\"Stream ended.\");\r\n\r\n          // استبدال الرسالة الحية بالنهائية أو إضافتها مباشرة\r\n          if (liveMessageElement) {\r\n            this._hideTypingIndicator(); // تأكد من إخفاء المؤشر هنا أيضاً\r\n          } else if (fullResponse) {\r\n            // حالة نادرة: حدث 'end' بدون 'chunk' ولكن مع استجابة\r\n            this._hideTypingIndicator(); // تأكد من إخفاء المؤشر هنا أيضاً\r\n            this._addMessage({\r\n              content: fullResponse,\r\n              sender: 'bot'\r\n            });\r\n          } else {\r\n            this._hideTypingIndicator();\r\n          }\r\n\r\n          // إعادة تهيئة المتغيرات وتمكين الإدخال\r\n          liveMessageElement = null;\r\n          fullResponse = '';\r\n          this.sendButton.disabled = false;\r\n        }\r\n        // --- معالجة الأخطاء المرسلة من الخادم ---\r\n        else if (event.type === 'error') {\r\n          // يمكن أن نستفيد هنا من بيانات JSON أيضاً إذا كانت موجودة\r\n          let errMsg = 'عذراً، حدث خطأ في الخادم.';\r\n          try {\r\n            const parsed = JSON.parse(event.data);\r\n            errMsg = parsed.message || errMsg;\r\n          } catch {\r\n            // إذا لم تكن JSON، نستخدم النص كما هو\r\n            errMsg = event.data || errMsg;\r\n          }\r\n          console.error('Error message from stream:', errMsg);\r\n          this._handleStreamError(errMsg, liveMessageElement);\r\n          liveMessageElement = null;\r\n          fullResponse = '';\r\n          this.sendButton.disabled = false;\r\n        }\r\n        // --- تجاهل أنواع أحداث أخرى مثل tool_call, debug، إلخ. ---\r\n        else {\r\n          console.log(`Ignoring event type: ${event.type}`);\r\n        }\r\n      };\r\n\r\n      stream.onerror = (err) => {\r\n        console.error('SSE Connection Error:', err);\r\n        this._handleStreamError('عذراً، حدث خطأ في الاتصال بالبث المباشر.', liveMessageElement);\r\n        liveMessageElement = null; // Reset on error\r\n        fullResponse = '';\r\n        this.sendButton.disabled = false;\r\n      };\r\n\r\n      stream.onclose = () => {\r\n        console.log(\"SSE Stream closed\");\r\n        // التعامل مع حالة إغلاق البث قبل وصول حدث 'end'\r\n        if (liveMessageElement) {\r\n          console.warn(\"Stream closed unexpectedly before 'end'. Finalizing message.\");\r\n          // نحول الرسالة الحية إلى رسالة نهائية بإزالتها وإضافة النسخة النهائية\r\n          liveMessageElement.remove();\r\n          this._addMessage({ content: fullResponse, sender: 'bot' });\r\n        }\r\n        this._hideTypingIndicator(); // التأكد من إخفاء المؤشر\r\n        liveMessageElement = null;\r\n        this.sendButton.disabled = false;\r\n      };\r\n    })\r\n    .catch(err => {\r\n      console.error('Failed to initiate stream connection:', err);\r\n      this._hideTypingIndicator();\r\n      this._addMessage({\r\n        content: 'عذراً، تعذر الاتصال بالخادم. يرجى التحقق من اتصالك والمحاولة مرة أخرى.',\r\n        sender: 'bot',\r\n        isError: true\r\n      });\r\n      this.sendButton.disabled = false;\r\n    });\r\n  }\r\n\r\n  // دالة مساعدة لإنشاء عنصر الرسالة الحية\r\n  _createLiveMessageElement() {\r\n    this.isTyping = true;\r\n\r\n    const liveMessage = document.createElement('chat-message');\r\n    liveMessage.setAttribute('sender', 'bot');\r\n    liveMessage.setAttribute('id', 'live-message');\r\n    liveMessage.setAttribute('data-md', ''); // بداية بمحتوى فارغ للماركداون\r\n    if (this.getAttribute('avatar')) {\r\n      liveMessage.setAttribute('avatar', this.getAttribute('avatar'));\r\n    }\r\n    this.messagesContainer.appendChild(liveMessage);\r\n    this._scrollToBottom();\r\n    return liveMessage;\r\n  }\r\n\r\n  // دالة مساعدة موحدة لمعالجة أخطاء البث\r\n  _handleStreamError(errorMessage, liveElement) {\r\n    this._hideTypingIndicator();\r\n    if (liveElement) {\r\n      liveElement.remove();\r\n    }\r\n    this._addMessage({\r\n      content: errorMessage,\r\n      sender: 'bot',\r\n      isError: true\r\n    });\r\n    this.sendButton.disabled = false;\r\n  }\r\n\r\n  _showTypingIndicator() {\r\n    this.isTyping = true;\r\n\r\n    const typingEl = document.createElement('typing-indicator');\r\n    typingEl.setAttribute('avatar', this.getAttribute('avatar') || '');\r\n    typingEl.id = 'typing-indicator';\r\n\r\n    this.messagesContainer.appendChild(typingEl);\r\n    this._scrollToBottom();\r\n  }\r\n\r\n  _hideTypingIndicator() {\r\n    this.isTyping = false;\r\n\r\n    const typingEl = this.shadowRoot.querySelector('#typing-indicator');\r\n    if (typingEl) {\r\n      typingEl.remove();\r\n    }\r\n  }\r\n\r\n  _clearChat() {\r\n    // إزالة جميع الرسائل\r\n    this.messages = [];\r\n\r\n    // إفراغ حاوية الرسائل\r\n    while (this.messagesContainer.firstChild) {\r\n      this.messagesContainer.removeChild(this.messagesContainer.firstChild);\r\n    }\r\n\r\n    // إعادة إنشاء جلسة جديدة\r\n    this.sessionId = this._generateSessionId();\r\n\r\n    // إضافة رسالة الترحيب\r\n    setTimeout(() => {\r\n      this._addMessage({\r\n        content: this.getAttribute('welcome-message') || 'مرحبًا بك! كيف يمكنني مساعدتك اليوم؟',\r\n        sender: 'bot'\r\n      });\r\n\r\n      // إظهار الاقتراحات مرة أخرى\r\n      const suggestionsEl = document.createElement('chat-suggestions');\r\n      suggestionsEl.suggestions = [\r\n        'ما هي خدماتكم؟',\r\n        'كيف يمكنني التواصل مع الدعم؟',\r\n      'كيف يمكنني الاشتراك في كورس الزمني؟'\r\n      ];\r\n      this.messagesContainer.appendChild(suggestionsEl);\r\n    }, 300);\r\n  }\r\n\r\n   _setupInitialChatState() {\r\n   // إضافة رسالة الترحيب والاقتراحات بعد تأخير بسيط\r\n   setTimeout(() => {\r\n     // التأكد من أن حاوية الرسائل موجودة بعد إعادة الرسم المحتملة\r\n     if (!this.messagesContainer) {\r\n       console.error(\"Messages container not found after reset.\");\r\n       return;\r\n     }\r\n\r\n     // إزالة أي رسالة ترحيب نصية قديمة أو اقتراحات إذا وجدت (احتياطي)\r\n     const existingWelcomeMsg = this.messagesContainer.querySelector('chat-message[sender=\"bot\"]');\r\n     const existingSuggestions = this.messagesContainer.querySelector('chat-suggestions');\r\n     if (existingWelcomeMsg && this.messages.length === 0) existingWelcomeMsg.remove(); // فقط إذا كانت الرسائل فارغة\r\n     if (existingSuggestions) existingSuggestions.remove();\r\n\r\n\r\n     // --- الجزء المنقول من _initialize ---\r\n     // إضافة رسالة الترحيب أولاً (كنص)\r\n     this._addMessage({\r\n       content: this.getAttribute('welcome-message') || 'مرحبًا بك! كيف يمكنني مساعدتك اليوم؟',\r\n       sender: 'bot'\r\n     });\r\n\r\n     // --- إضافة الاقتراحات هنا ---\r\n     const suggestionsEl = document.createElement('chat-suggestions');\r\n     suggestionsEl.suggestions = [\r\n       'ما هي خدماتكم؟',\r\n       'كيف يمكنني التواصل معكم؟',\r\n       'هل لديكم خدمة توصيل؟'\r\n       // يمكنك تحديث هذه الاقتراحات أو جعلها ديناميكية إذا أردت\r\n     ];\r\n     // تأكد من أن الرسالة الترحيبية تم إضافتها قبل إضافة الاقتراحات\r\n     // قد تحتاج لتأخير بسيط آخر أو استخدام Promise إذا كانت _addMessage غير متزامنة تمامًا\r\n     // لكن بما أنها متزامنة هنا، يمكن إضافتها مباشرة\r\n     this.messagesContainer.appendChild(suggestionsEl);\r\n     this.suggestionsElement = suggestionsEl; // --- تخزين المرجع ---\r\n     this._scrollToBottom(); // التمرير للأسفل بعد إضافة الاقتراحات\r\n     // --- نهاية الجزء المنقول ---\r\n\r\n   }, 300); // نفس التأخير المستخدم سابقاً\r\n }\r\n\r\n  toggleChat() {\r\n    console.log('🔘 toggleChat fired! isOpen=', this.isOpen);\r\n    this.isOpen = !this.isOpen;\r\n    if (this.isOpen)  {\r\n    this.chatContainer.classList.add('open');\r\n    localStorage.setItem('chatWidgetOpen', 'true');\r\n  } else {\r\n    this.chatContainer.classList.remove('open');\r\n    localStorage.setItem('chatWidgetOpen', 'false');\r\n  }\r\n}\r\n\r\n  _scrollToBottom() {\r\n    setTimeout(() => {\r\n      this.messagesContainer.scrollTop = this.messagesContainer.scrollHeight;\r\n    }, 100);\r\n  }\r\n\r\n  _generateSessionId(forceNew = false) {\r\n   // محاولة الحصول على معرف جلسة محفوظ\r\n   const savedSessionId = localStorage.getItem('chatWidgetSessionId');\r\n   if (savedSessionId && !forceNew) { // التحقق من forceNew\r\n     return savedSessionId;\r\n   }\r\n\r\n   // إنشاء معرف جديد\r\n   const newSessionId = 'session_' + Math.random().toString(36).substring(2, 15);\r\n   localStorage.setItem('chatWidgetSessionId', newSessionId);\r\n   console.log('Generated new session ID:', newSessionId); // للتصحيح\r\n   return newSessionId;\r\n }\r\n\r\n\r\n  connectedCallback() {\r\n    // التحقق من حالة النافذة المحفوظة\r\n    const savedState = localStorage.getItem('chatWidgetOpen');\r\n    if (savedState === 'true') {\r\n      setTimeout(() => this.toggleChat(), 300);\r\n    }\r\n  }\r\n\r\n\r\n\r\n // ===== دالة جديدة لربط الأحداث الداخلية =====\r\n _setupInternalListeners() {\r\n   console.log('🔗 Setting up internal listeners...'); // للتأكد\r\n\r\n   // التأكد من وجود العناصر قبل ربط الأحداث (هام بعد إعادة الرسم)\r\n   if (!this.sendButton || !this.chatInput || !this.messagesContainer || !this.shadowRoot) {\r\n     console.error(\"One or more internal elements not found for listener setup.\");\r\n     return;\r\n   }\r\n\r\n   // --- الكود المنقول من _setupEventListeners ---\r\n\r\n   // زر إرسال الرسالة\r\n   this.sendButton.addEventListener('click', () => {\r\n     this._sendMessage();\r\n   });\r\n\r\n   // الإرسال عند الضغط على Enter (بدون Shift)\r\n   this.chatInput.addEventListener('keydown', (e) => {\r\n     if (e.key === 'Enter' && !e.shiftKey) {\r\n       e.preventDefault();\r\n       this._sendMessage();\r\n     }\r\n   });\r\n\r\n   // التكبير التلقائي لحقل الإدخال وتمكين/تعطيل زر الإرسال\r\n   this.chatInput.addEventListener('input', () => {\r\n     this._autoResizeTextarea();\r\n     // تأكد من أن sendButton موجود قبل تعديل حالته\r\n     if(this.sendButton) {\r\n        this.sendButton.disabled = !this.chatInput.value.trim();\r\n     }\r\n   });\r\n\r\n   // زر الإغلاق (داخل النافذة)\r\n   const closeButtons = this.shadowRoot.querySelectorAll('.close-btn');\r\n   closeButtons.forEach(btn => {\r\n     btn.addEventListener('click', () => {\r\n       this.toggleChat();\r\n     });\r\n   });\r\n\r\n   // زر التحديث (داخل النافذة)\r\n   const refreshButton = this.shadowRoot.querySelector('.refresh-btn');\r\n   if (refreshButton) {\r\n     refreshButton.addEventListener('click', () => {\r\n       this._resetChat();\r\n     });\r\n   } else {\r\n     console.warn(\"Refresh button (.refresh-btn) not found during internal listener setup.\");\r\n   }\r\n\r\n   // الاستماع لأحداث اقتراحات الدردشة\r\n   this.shadowRoot.addEventListener('suggestion-clicked', (e) => {\r\n     // تأكد من أن chatInput موجود\r\n     if(this.chatInput) {\r\n       const { suggestion } = e.detail;\r\n       this.chatInput.value = suggestion;\r\n       this._autoResizeTextarea();\r\n       this.sendButton.disabled = false; // يجب تفعيل الزر عند اختيار اقتراح\r\n       this._sendMessage();\r\n     }\r\n   });\r\n\r\n   // إضافة مستمع للتمرير لإخفاء الهيدر (إذا كنت تستخدمه)\r\n   // لاحظ أن profileHeader قد يحتاج لإعادة الاستعلام عنه إذا كان داخل الجزء المعاد رسمه\r\n   // إذا كان profileHeader خارج messagesContainer في الـ DOM، قد لا تحتاج لإعادة ربط هذا\r\n   // ولكن إذا كان يتم إعادة إنشائه، ستحتاج لإعادة ربط مستمع التمرير.\r\n   // في الكود الحالي، messagesContainer يتم إعادة الاستعلام عنه، لذا المستمع يجب إعادة ربطه.\r\n   this.messagesContainer.addEventListener('scroll', this._handleScroll.bind(this));\r\n\r\n\r\n   // --- نهاية الكود المنقول ---\r\n\r\n    // قم بتعطيل زر الإرسال مبدئيًا بعد إعادة الربط (لأن حقل الإدخال فارغ)\r\n    if (this.sendButton) {\r\n        this.sendButton.disabled = true;\r\n    }\r\n    // أعد ضبط ارتفاع حقل الإدخال\r\n    if (this.chatInput) {\r\n        this.chatInput.style.height = 'auto';\r\n    }\r\n }\r\n\r\n\r\n  attributeChangedCallback(name, oldValue, newValue) {\r\n    // تحديث المكون عند تغيير السمات\r\n    if (oldValue !== newValue) {\r\n      switch (name) {\r\n        case 'direction':\r\n          this.style.direction = newValue || 'rtl';\r\n          break;\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n\r\n\r\n// تسجيل المكون\r\ncustomElements.define('chat-widget', ChatWidget);\r\n\r\nexport default ChatWidget;","// نقطة الدخول الرئيسية للمكتبة\r\nimport './chat-widget.js';\r\n\r\n// نافذة عامة للوصول إلى المكتبة\r\nwindow.ChatWidget = {\r\n  init: (options = {}) => {\r\n    // تهيئة الخيارات الافتراضية\r\n    const defaultOptions = {\r\n      projectId: '',\r\n      theme: 'light',\r\n      position: 'bottom-right',\r\n      welcomeMessage: 'مرحبًا بك! كيف يمكنني مساعدتك اليوم؟',\r\n      apiUrl: 'https://exadoo-rxr9.onrender.com/bot/chat/stream',\r\n      direction: 'rtl',\r\n      avatar: '',\r\n      title: 'Exaado Assistant',\r\n      subtitle: 'Our virtual agent is here to help you',\r\n      poweredBy: 'Powered by EXAADO:exaado.com'\r\n    };\r\n\r\n    // دمج الخيارات مع الافتراضية\r\n    const config = { ...defaultOptions, ...options };\r\n\r\n    // إنشاء مكون الدردشة\r\n    const chatWidget = document.createElement('chat-widget');\r\n\r\n    // تعيين السمات\r\n    Object.entries(config).forEach(([key, value]) => {\r\n    if (value == null || value === '') return;  // نتجنّب السمات الفارغة\r\n    // حوّل camelCase إلى kebab-case\r\n    const attr = key.replace(/([A-Z])/g, '-$1').toLowerCase();\r\n    chatWidget.setAttribute(attr, value);\r\n  });\r\n\r\n    // إضافة المكون للصفحة\r\n    document.body.appendChild(chatWidget);\r\n\r\n    // إرجاع مرجع إلى المكون\r\n    return chatWidget;\r\n  }\r\n};\r\n\r\n// إعداد مثيل تلقائياً إذا كانت هناك خيارات في نافذة المتصفح\r\nif (window.ChatWidgetOptions) {\r\n  window.ChatWidget.init(window.ChatWidgetOptions);\r\n}"],"names":["ChatButton","HTMLElement","constructor","super","this","attachShadow","mode","isOpen","style","document","createElement","textContent","template","innerHTML","shadowRoot","appendChild","content","cloneNode","bubbleElement","querySelector","connectedCallback","addEventListener","classList","remove","add","attributeChangedCallback","name","oldValue","newValue","left","right","observedAttributes","_getDefaults","async","breaks","extensions","gfm","hooks","pedantic","renderer","silent","tokenizer","walkTokens","customElements","define","_defaults","changeDefaults","newDefaults","noopTest","exec","edit","regex","opt","source","obj","replace","val","valSource","other","caret","getRegex","RegExp","codeRemoveIndent","outputLinkReplace","indentCodeCompensation","beginningSpace","endingHash","startingSpaceChar","endingSpaceChar","nonSpaceChar","newLineCharGlobal","tabCharGlobal","multipleSpaceGlobal","blankLine","doubleBlankLine","blockquoteStart","blockquoteSetextReplace","blockquoteSetextReplace2","listReplaceTabs","listReplaceNesting","listIsTask","listReplaceTask","anyLine","hrefBrackets","tableDelimiter","tableAlignChars","tableRowBlankLine","tableAlignRight","tableAlignCenter","tableAlignLeft","startATag","endATag","startPreScriptTag","endPreScriptTag","startAngleBracket","endAngleBracket","pedanticHrefTitle","unicodeAlphaNumeric","escapeTest","escapeReplace","escapeTestNoEncode","escapeReplaceNoEncode","unescapeTest","percentDecode","findPipe","splitPipe","slashPipe","carriageReturn","spaceLine","notSpaceStart","endingNewline","listItemRegex","bull","nextBulletRegex","indent","Math","min","hrRegex","fencesBeginRegex","headingBeginRegex","htmlBeginRegex","hr","bullet","lheadingCore","lheading","lheadingGfm","_paragraph","_blockLabel","def","list","_tag","_comment","html","paragraph","blockNormal","blockquote","code","fences","heading","newline","table","text","gfmTable","blockGfm","blockPedantic","br","_punctuation","_punctuationOrSpace","_notPunctuationOrSpace","punctuation","_punctuationGfmStrongEm","emStrongLDelimCore","emStrongLDelim","emStrongLDelimGfm","emStrongRDelimAstCore","emStrongRDelimAst","emStrongRDelimAstGfm","emStrongRDelimUnd","anyPunctuation","autolink","_inlineComment","tag","_inlineLabel","link","reflink","nolink","inlineNormal","_backpedal","blockSkip","del","escape","reflinkSearch","url","inlinePedantic","inlineGfm","inlineBreaks","block","normal","inline","escapeReplacements","getEscapeReplacement","ch","encode","test","cleanUrl","href","encodeURI","splitCells","tableRow","count","cells","match","offset","str","escaped","curr","split","i","trim","shift","length","at","pop","splice","push","rtrim","c","invert","l","suffLen","charAt","slice","outputLink","cap","raw","lexer","rules","title","state","inLink","token","type","tokens","inlineTokens","_Tokenizer","options","space","src","codeBlockStyle","matchIndentToCode","indentToCode","map","node","matchIndentInNode","indentInNode","join","lang","trimmed","depth","lines","inBlockquote","currentLines","currentRaw","currentText","top","blockTokens","lastToken","oldToken","newText","newToken","substring","isordered","ordered","start","loose","items","itemRegex","endsWithBlankLine","endEarly","itemContents","line","t","repeat","nextLine","trimStart","search","rawLine","nextLineWithoutTabs","ischecked","istask","task","checked","lastItem","trimEnd","spacers","filter","hasMultipleLineBreaks","some","pre","toLowerCase","headers","aligns","rows","item","header","align","row","cell","inRawBlock","trimmedUrl","rtrimSlash","lastParenIndex","b","indexOf","level","findClosingBracket","linkLen","links","emStrong","maskedSrc","prevChar","lLength","rDelim","rLength","delimTotal","midDelimTotal","endReg","lastIndex","lastCharLength","index","codespan","hasNonSpaceChars","hasSpaceCharsOnBothEnds","prevCapZero","inlineText","_Lexer","inlineQueue","Object","create","lex","lexInline","next","lastParagraphClipped","extTokenizer","call","undefined","cutSrc","startBlock","startIndex","Infinity","tempSrc","tempStart","forEach","getStartIndex","errMsg","charCodeAt","console","error","Error","keys","includes","lastIndexOf","keepPrevChar","startInline","_Renderer","parser","langString","parse","parseInline","body","j","listitem","itemBody","checkbox","unshift","tablecell","tablerow","k","strong","em","cleanHref","out","image","textRenderer","_TextRenderer","_Parser","anyToken","renderers","genericToken","ret","textToken","_Hooks","static","Set","preprocess","markdown","postprocess","processAllTokens","provideLexer","provideParser","markedInstance","defaults","setOptions","parseMarkdown","Parser","Renderer","TextRenderer","Lexer","Tokenizer","Hooks","args","use","callback","values","concat","tableToken","listToken","childTokens","flat","pack","opts","ext","prevRenderer","apply","extLevel","prop","rendererProp","rendererFunc","tokenizerProp","tokenizerFunc","prevTokenizer","hooksProp","hooksFunc","prevHook","passThroughHooks","has","arg","Promise","resolve","then","packWalktokens","blockType","origOpt","throwError","onError","prototype","toString","all","catch","e","message","msg","reject","marked","getDefaults","entries","setPrototypeOf","isFrozen","getPrototypeOf","getOwnPropertyDescriptor","freeze","seal","construct","Reflect","x","fun","thisValue","Func","arrayForEach","unapply","Array","arrayLastIndexOf","arrayPop","arrayPush","arraySplice","stringToLowerCase","String","stringToString","stringMatch","stringReplace","stringIndexOf","stringTrim","objectHasOwnProperty","hasOwnProperty","regExpTest","typeErrorCreate","func","TypeError","_len2","arguments","_key2","thisArg","_len","_key","addToSet","set","array","transformCaseFunc","element","lcElement","cleanArray","clone","object","newObject","property","value","isArray","lookupGetter","desc","get","html$1","svg$1","svgFilters","svgDisallowed","mathMl$1","mathMlDisallowed","svg","mathMl","xml","MUSTACHE_EXPR","ERB_EXPR","TMPLIT_EXPR","DATA_ATTR","ARIA_ATTR","IS_ALLOWED_URI","IS_SCRIPT_OR_DATA","ATTR_WHITESPACE","DOCTYPE_NAME","CUSTOM_ELEMENT","EXPRESSIONS","__proto__","NODE_TYPE","getGlobal","window","purify","createDOMPurify","DOMPurify","root","version","removed","nodeType","Element","isSupported","originalDocument","currentScript","DocumentFragment","HTMLTemplateElement","Node","NodeFilter","NamedNodeMap","MozNamedAttrMap","HTMLFormElement","DOMParser","trustedTypes","ElementPrototype","getNextSibling","getChildNodes","getParentNode","ownerDocument","trustedTypesPolicy","emptyHTML","implementation","createNodeIterator","createDocumentFragment","getElementsByTagName","importNode","afterSanitizeAttributes","afterSanitizeElements","afterSanitizeShadowDOM","beforeSanitizeAttributes","beforeSanitizeElements","beforeSanitizeShadowDOM","uponSanitizeAttribute","uponSanitizeElement","uponSanitizeShadowNode","createHTMLDocument","IS_ALLOWED_URI$1","ALLOWED_TAGS","DEFAULT_ALLOWED_TAGS","ALLOWED_ATTR","DEFAULT_ALLOWED_ATTR","CUSTOM_ELEMENT_HANDLING","tagNameCheck","writable","configurable","enumerable","attributeNameCheck","allowCustomizedBuiltInElements","FORBID_TAGS","FORBID_ATTR","ALLOW_ARIA_ATTR","ALLOW_DATA_ATTR","ALLOW_UNKNOWN_PROTOCOLS","ALLOW_SELF_CLOSE_IN_ATTR","SAFE_FOR_TEMPLATES","SAFE_FOR_XML","WHOLE_DOCUMENT","SET_CONFIG","FORCE_BODY","RETURN_DOM","RETURN_DOM_FRAGMENT","RETURN_TRUSTED_TYPE","SANITIZE_DOM","SANITIZE_NAMED_PROPS","KEEP_CONTENT","IN_PLACE","USE_PROFILES","FORBID_CONTENTS","DEFAULT_FORBID_CONTENTS","DATA_URI_TAGS","DEFAULT_DATA_URI_TAGS","URI_SAFE_ATTRIBUTES","DEFAULT_URI_SAFE_ATTRIBUTES","MATHML_NAMESPACE","SVG_NAMESPACE","HTML_NAMESPACE","NAMESPACE","IS_EMPTY_INPUT","ALLOWED_NAMESPACES","DEFAULT_ALLOWED_NAMESPACES","MATHML_TEXT_INTEGRATION_POINTS","HTML_INTEGRATION_POINTS","COMMON_SVG_AND_HTML_ELEMENTS","PARSER_MEDIA_TYPE","SUPPORTED_PARSER_MEDIA_TYPES","CONFIG","formElement","isRegexOrFunction","testValue","Function","_parseConfig","cfg","ADD_URI_SAFE_ATTR","ADD_DATA_URI_TAGS","ALLOWED_URI_REGEXP","ADD_TAGS","ADD_ATTR","tbody","TRUSTED_TYPES_POLICY","createHTML","createScriptURL","purifyHostElement","createPolicy","suffix","ATTR_NAME","hasAttribute","getAttribute","policyName","scriptUrl","_","warn","_createTrustedTypesPolicy","ALL_SVG_TAGS","ALL_MATHML_TAGS","_forceRemove","removeChild","_removeAttribute","attribute","getAttributeNode","from","removeAttribute","setAttribute","_initDocument","dirty","doc","leadingWhitespace","matches","dirtyPayload","parseFromString","documentElement","createDocument","insertBefore","createTextNode","childNodes","_createNodeIterator","SHOW_ELEMENT","SHOW_COMMENT","SHOW_TEXT","SHOW_PROCESSING_INSTRUCTION","SHOW_CDATA_SECTION","_isClobbered","nodeName","attributes","namespaceURI","hasChildNodes","_isNode","_executeHooks","currentNode","data","hook","_sanitizeElements","tagName","allowedTags","firstElementChild","_isBasicCustomElement","parentNode","childClone","__removalCount","parent","parentTagName","Boolean","_checkValidNamespace","expr","_isValidAttribute","lcTag","lcName","_sanitizeAttributes","hookEvent","attrName","attrValue","keepAttr","allowedAttributes","forceKeepAttr","attr","getAttributeType","setAttributeNS","_sanitizeShadowDOM","fragment","shadowNode","shadowIterator","nextNode","sanitize","importedNode","returnNode","firstChild","nodeIterator","shadowroot","shadowrootmode","serializedHTML","outerHTML","doctype","setConfig","clearConfig","isValidAttribute","addHook","entryPoint","hookFunction","removeHook","removeHooks","removeAllHooks","renderMarkdown","mdText","rawHtml","mangle","headerIds","ChatMessage","_content","sender","avatar","messageId","messageEl","className","_formatTime","Date","append","_activateControls","_setupLinkTargets","updateContent","newContent","contentEl","copyBtn","navigator","clipboard","writeText","setTimeout","err","querySelectorAll","date","getHours","padStart","getMinutes","ChatSuggestions","_suggestions","_render","suggestions","container","suggestion","button","dispatchEvent","CustomEvent","detail","bubbles","composed","TypingIndicator","direction","dir","avatarHTML","updateAvatar","avatarSrc","avatarEl","img","alt","replaceChild","ChatAvatar","fallback","bgColor","size","_darkenColor","color","percent","num","parseInt","amt","round","R","G","B","ChatService","sendMessage","log","response","fetch","method","JSON","stringify","ok","status","reader","getReader","decoder","TextDecoder","eventSourceMock","listeners","chunk","end","tool_call","tool_result","open","onmessage","onchunk","onend","ontool_call","ontool_result","onerror","onopen","onclose","event","removeEventListener","arr","idx","close","cancel","cb","_processStream","eventSource","buffer","pendingRead","emitEvent","dataStr","eventId","ev","lastEventId","json","handler","readNext","read","done","eventBlocks","eventBlock","eventType","startsWith","processChunk","decode","stream","ChatWidget","messages","isTyping","sessionId","_generateSessionId","headerCollapsed","lastScrollPosition","_initialize","_resetChat","chatContainer","_setupInternalListeners","_setupInitialChatState","chatService","suggestionsElement","_setupComponentListeners","styleEl","messagesContainer","chatInput","sendButton","chatButton","micButton","additionalStyles","_listenerAttached","toggleChat","_chatWidgetKeyListenerAttached","key","activeElement","preventDefault","focus","_handleScroll","currentScrollPosition","scrollTop","profileHeader","_autoResizeTextarea","height","scrollHeight","overflowY","_addMessage","id","now","timestamp","fullMessage","_scrollToBottom","display","_sendMessage","disabled","_showTypingIndicator","apiUrl","projectId","session_id","project_id","fullResponse","liveMessageElement","_hideTypingIndicator","_createLiveMessageElement","_handleStreamError","isError","liveMessage","errorMessage","liveElement","typingEl","_clearChat","suggestionsEl","existingWelcomeMsg","existingSuggestions","localStorage","setItem","forceNew","savedSessionId","getItem","newSessionId","random","shiftKey","btn","refreshButton","bind","init","config","theme","position","welcomeMessage","subtitle","poweredBy","chatWidget","ChatWidgetOptions"],"mappings":"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"}